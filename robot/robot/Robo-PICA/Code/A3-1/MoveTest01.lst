;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 4/6/2008 14:13:48
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0004	$	_main:
;MoveTest01.c,1 :: 		void main()
;MoveTest01.c,4 :: 		ANSELH=0x00 ;                       // Set PORTB => Digital
$0004	$1703			BSF	STATUS, RP1
$0005	$1683			BSF	STATUS, RP0
$0006	$0189			CLRF	ANSELH, 1
;MoveTest01.c,5 :: 		TRISB.F1=0;TRISB.F2=0;              // Motor B 2A,Motor B 2B
$0007	$1303			BCF	STATUS, RP1
$0008	$1086			BCF	TRISB, 1
$0009	$1106			BCF	TRISB, 2
;MoveTest01.c,6 :: 		TRISD.F0=0;TRISD.F1=0;              // Motor A 1A,MOtor A 1B
$000A	$1008			BCF	TRISD, 0
$000B	$1088			BCF	TRISD, 1
;MoveTest01.c,7 :: 		TRISC.F1=0;TRISC.F2=0;              // Motor B 2E,Motor A 1E
$000C	$1087			BCF	TRISC, 1
$000D	$1107			BCF	TRISC, 2
;MoveTest01.c,8 :: 		PORTC.F1=1;PORTC.F2=1;              // Enable Motor B,Enable Motor A
$000E	$1283			BCF	STATUS, RP0
$000F	$1487			BSF	PORTC, 1
$0010	$1507			BSF	PORTC, 2
;MoveTest01.c,11 :: 		while(1)
$0011	$	L_main_0:
;MoveTest01.c,13 :: 		PORTD.F0 =0;PORTD.F1 =1;      // Motor A Forward
$0011	$1008			BCF	PORTD, 0
$0012	$1488			BSF	PORTD, 1
;MoveTest01.c,14 :: 		PORTB.F1 =0;PORTB.F2 =1;      // Motor B Forward
$0013	$1086			BCF	PORTB, 1
$0014	$1506			BSF	PORTB, 2
;MoveTest01.c,15 :: 		Delay_ms(2000);
$0015	$3033			MOVLW	51
$0016	$00FC			MOVWF	STACK_12
$0017	$30FF			MOVLW	255
$0018	$00FB			MOVWF	STACK_11
$0019	$30FF			MOVLW	255
$001A	$00FA			MOVWF	STACK_10
$001B	$0BFC			DECFSZ	STACK_12, F
$001C	$281E			GOTO	$+2
$001D	$2825			GOTO	$+8
$001E	$0BFB			DECFSZ	STACK_11, F
$001F	$2821			GOTO	$+2
$0020	$2824			GOTO	$+4
$0021	$0BFA			DECFSZ	STACK_10, F
$0022	$2821			GOTO	$-1
$0023	$281E			GOTO	$-5
$0024	$281B			GOTO	$-9
$0025	$30FD			MOVLW	253
$0026	$00FB			MOVWF	STACK_11
$0027	$30FF			MOVLW	255
$0028	$00FA			MOVWF	STACK_10
$0029	$0BFB			DECFSZ	STACK_11, F
$002A	$282C			GOTO	$+2
$002B	$282F			GOTO	$+4
$002C	$0BFA			DECFSZ	STACK_10, F
$002D	$282C			GOTO	$-1
$002E	$2829			GOTO	$-5
$002F	$30B5			MOVLW	181
$0030	$00FA			MOVWF	STACK_10
$0031	$0BFA			DECFSZ	STACK_10, F
$0032	$2831			GOTO	$-1
$0033	$0000			NOP
;MoveTest01.c,16 :: 		PORTB.F1 =1;PORTB.F2 =0;      // Motor B Backward
$0034	$1486			BSF	PORTB, 1
$0035	$1106			BCF	PORTB, 2
;MoveTest01.c,17 :: 		Delay_ms(800);
$0036	$3015			MOVLW	21
$0037	$00FC			MOVWF	STACK_12
$0038	$30FF			MOVLW	255
$0039	$00FB			MOVWF	STACK_11
$003A	$30FF			MOVLW	255
$003B	$00FA			MOVWF	STACK_10
$003C	$0BFC			DECFSZ	STACK_12, F
$003D	$283F			GOTO	$+2
$003E	$2846			GOTO	$+8
$003F	$0BFB			DECFSZ	STACK_11, F
$0040	$2842			GOTO	$+2
$0041	$2845			GOTO	$+4
$0042	$0BFA			DECFSZ	STACK_10, F
$0043	$2842			GOTO	$-1
$0044	$283F			GOTO	$-5
$0045	$283C			GOTO	$-9
$0046	$3066			MOVLW	102
$0047	$00FB			MOVWF	STACK_11
$0048	$30FF			MOVLW	255
$0049	$00FA			MOVWF	STACK_10
$004A	$0BFB			DECFSZ	STACK_11, F
$004B	$284D			GOTO	$+2
$004C	$2850			GOTO	$+4
$004D	$0BFA			DECFSZ	STACK_10, F
$004E	$284D			GOTO	$-1
$004F	$284A			GOTO	$-5
$0050	$3012			MOVLW	18
$0051	$00FA			MOVWF	STACK_10
$0052	$0BFA			DECFSZ	STACK_10, F
$0053	$2852			GOTO	$-1
$0054	$0000			NOP
$0055	$0000			NOP
;MoveTest01.c,18 :: 		}
$0056	$2811			GOTO	L_main_0
;MoveTest01.c,19 :: 		}
$0057	$2857			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		main


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_main:
$0011		L_main_0:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0006		PORTB
$0007		PORTC
$0008		PORTD
$000A		PCLATH
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0086		TRISB
$0087		TRISC
$0088		TRISD
$0189		ANSELH


