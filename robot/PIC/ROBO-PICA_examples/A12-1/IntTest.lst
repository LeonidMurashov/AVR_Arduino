;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 4/6/2008 15:09:25
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2961			GOTO	_main
$0033	$	_SDIV3232L:
$0033	$1303			BCF	STATUS, RP1
$0034	$1283			BCF	STATUS, RP0
$0035	$0874			MOVF	STACK_4, W
$0036	$02F8			SUBWF	STACK_8, F
$0037	$0875			MOVF	STACK_5, W
$0038	$1C03			BTFSS	STATUS, C
$0039	$0F75			INCFSZ	STACK_5, W
$003A	$02F9			SUBWF	STACK_9, F
$003B	$0876			MOVF	STACK_6, W
$003C	$1C03			BTFSS	STATUS, C
$003D	$0F76			INCFSZ	STACK_6, W
$003E	$02FA			SUBWF	STACK_10, F
$003F	$0877			MOVF	STACK_7, W
$0040	$1C03			BTFSS	STATUS, C
$0041	$0F77			INCFSZ	STACK_7, W
$0042	$02FB			SUBWF	STACK_11, F
$0043	$0DF3			RLF	STACK_3, F
$0044	$3007			MOVLW	7
$0045	$00FC			MOVWF	STACK_12
$0046	$	LOOPS3232A:
$0046	$0D73			RLF	STACK_3, W
$0047	$0DF8			RLF	STACK_8, F
$0048	$0DF9			RLF	STACK_9, F
$0049	$0DFA			RLF	STACK_10, F
$004A	$0DFB			RLF	STACK_11, F
$004B	$0874			MOVF	STACK_4, W
$004C	$1C73			BTFSS	STACK_3, 0
$004D	$285C			GOTO	SADD22LA
$004E	$02F8			SUBWF	STACK_8, F
$004F	$0875			MOVF	STACK_5, W
$0050	$1C03			BTFSS	STATUS, C
$0051	$0F75			INCFSZ	STACK_5, W
$0052	$02F9			SUBWF	STACK_9, F
$0053	$0876			MOVF	STACK_6, W
$0054	$1C03			BTFSS	STATUS, C
$0055	$0F76			INCFSZ	STACK_6, W
$0056	$02FA			SUBWF	STACK_10, F
$0057	$0877			MOVF	STACK_7, W
$0058	$1C03			BTFSS	STATUS, C
$0059	$0F77			INCFSZ	STACK_7, W
$005A	$02FB			SUBWF	STACK_11, F
$005B	$2869			GOTO	SOK22LA
$005C	$	SADD22LA:
$005C	$07F8			ADDWF	STACK_8, F
$005D	$0875			MOVF	STACK_5, W
$005E	$1803			BTFSC	STATUS, C
$005F	$0F75			INCFSZ	STACK_5, W
$0060	$07F9			ADDWF	STACK_9, F
$0061	$0876			MOVF	STACK_6, W
$0062	$1803			BTFSC	STATUS, C
$0063	$0F76			INCFSZ	STACK_6, W
$0064	$07FA			ADDWF	STACK_10, F
$0065	$0877			MOVF	STACK_7, W
$0066	$1803			BTFSC	STATUS, C
$0067	$0F77			INCFSZ	STACK_7, W
$0068	$07FB			ADDWF	STACK_11, F
$0069	$	SOK22LA:
$0069	$0DF3			RLF	STACK_3, F
$006A	$0BFC			DECFSZ	STACK_12, F
$006B	$2846			GOTO	LOOPS3232A
$006C	$0D72			RLF	STACK_2, W
$006D	$0DF8			RLF	STACK_8, F
$006E	$0DF9			RLF	STACK_9, F
$006F	$0DFA			RLF	STACK_10, F
$0070	$0DFB			RLF	STACK_11, F
$0071	$0874			MOVF	STACK_4, W
$0072	$1C73			BTFSS	STACK_3, 0
$0073	$2882			GOTO	SADD22L8
$0074	$02F8			SUBWF	STACK_8, F
$0075	$0875			MOVF	STACK_5, W
$0076	$1C03			BTFSS	STATUS, C
$0077	$0F75			INCFSZ	STACK_5, W
$0078	$02F9			SUBWF	STACK_9, F
$0079	$0876			MOVF	STACK_6, W
$007A	$1C03			BTFSS	STATUS, C
$007B	$0F76			INCFSZ	STACK_6, W
$007C	$02FA			SUBWF	STACK_10, F
$007D	$0877			MOVF	STACK_7, W
$007E	$1C03			BTFSS	STATUS, C
$007F	$0F77			INCFSZ	STACK_7, W
$0080	$02FB			SUBWF	STACK_11, F
$0081	$288F			GOTO	SOK22L8
$0082	$	SADD22L8:
$0082	$07F8			ADDWF	STACK_8, F
$0083	$0875			MOVF	STACK_5, W
$0084	$1803			BTFSC	STATUS, C
$0085	$0F75			INCFSZ	STACK_5, W
$0086	$07F9			ADDWF	STACK_9, F
$0087	$0876			MOVF	STACK_6, W
$0088	$1803			BTFSC	STATUS, C
$0089	$0F76			INCFSZ	STACK_6, W
$008A	$07FA			ADDWF	STACK_10, F
$008B	$0877			MOVF	STACK_7, W
$008C	$1803			BTFSC	STATUS, C
$008D	$0F77			INCFSZ	STACK_7, W
$008E	$07FB			ADDWF	STACK_11, F
$008F	$	SOK22L8:
$008F	$0DF2			RLF	STACK_2, F
$0090	$3007			MOVLW	7
$0091	$00FC			MOVWF	STACK_12
$0092	$	LOOPS3232B:
$0092	$0D72			RLF	STACK_2, W
$0093	$0DF8			RLF	STACK_8, F
$0094	$0DF9			RLF	STACK_9, F
$0095	$0DFA			RLF	STACK_10, F
$0096	$0DFB			RLF	STACK_11, F
$0097	$0874			MOVF	STACK_4, W
$0098	$1C72			BTFSS	STACK_2, 0
$0099	$28A8			GOTO	SADD22LB
$009A	$02F8			SUBWF	STACK_8, F
$009B	$0875			MOVF	STACK_5, W
$009C	$1C03			BTFSS	STATUS, C
$009D	$0F75			INCFSZ	STACK_5, W
$009E	$02F9			SUBWF	STACK_9, F
$009F	$0876			MOVF	STACK_6, W
$00A0	$1C03			BTFSS	STATUS, C
$00A1	$0F76			INCFSZ	STACK_6, W
$00A2	$02FA			SUBWF	STACK_10, F
$00A3	$0877			MOVF	STACK_7, W
$00A4	$1C03			BTFSS	STATUS, C
$00A5	$0F77			INCFSZ	STACK_7, W
$00A6	$02FB			SUBWF	STACK_11, F
$00A7	$28B5			GOTO	SOK22LB
$00A8	$	SADD22LB:
$00A8	$07F8			ADDWF	STACK_8, F
$00A9	$0875			MOVF	STACK_5, W
$00AA	$1803			BTFSC	STATUS, C
$00AB	$0F75			INCFSZ	STACK_5, W
$00AC	$07F9			ADDWF	STACK_9, F
$00AD	$0876			MOVF	STACK_6, W
$00AE	$1803			BTFSC	STATUS, C
$00AF	$0F76			INCFSZ	STACK_6, W
$00B0	$07FA			ADDWF	STACK_10, F
$00B1	$0877			MOVF	STACK_7, W
$00B2	$1803			BTFSC	STATUS, C
$00B3	$0F77			INCFSZ	STACK_7, W
$00B4	$07FB			ADDWF	STACK_11, F
$00B5	$	SOK22LB:
$00B5	$0DF2			RLF	STACK_2, F
$00B6	$0BFC			DECFSZ	STACK_12, F
$00B7	$2892			GOTO	LOOPS3232B
$00B8	$0D71			RLF	STACK_1, W
$00B9	$0DF8			RLF	STACK_8, F
$00BA	$0DF9			RLF	STACK_9, F
$00BB	$0DFA			RLF	STACK_10, F
$00BC	$0DFB			RLF	STACK_11, F
$00BD	$0874			MOVF	STACK_4, W
$00BE	$1C72			BTFSS	STACK_2, 0
$00BF	$28CE			GOTO	SADD22L16
$00C0	$02F8			SUBWF	STACK_8, F
$00C1	$0875			MOVF	STACK_5, W
$00C2	$1C03			BTFSS	STATUS, C
$00C3	$0F75			INCFSZ	STACK_5, W
$00C4	$02F9			SUBWF	STACK_9, F
$00C5	$0876			MOVF	STACK_6, W
$00C6	$1C03			BTFSS	STATUS, C
$00C7	$0F76			INCFSZ	STACK_6, W
$00C8	$02FA			SUBWF	STACK_10, F
$00C9	$0877			MOVF	STACK_7, W
$00CA	$1C03			BTFSS	STATUS, C
$00CB	$0F77			INCFSZ	STACK_7, W
$00CC	$02FB			SUBWF	STACK_11, F
$00CD	$28DB			GOTO	SOK22L16
$00CE	$	SADD22L16:
$00CE	$07F8			ADDWF	STACK_8, F
$00CF	$0875			MOVF	STACK_5, W
$00D0	$1803			BTFSC	STATUS, C
$00D1	$0F75			INCFSZ	STACK_5, W
$00D2	$07F9			ADDWF	STACK_9, F
$00D3	$0876			MOVF	STACK_6, W
$00D4	$1803			BTFSC	STATUS, C
$00D5	$0F76			INCFSZ	STACK_6, W
$00D6	$07FA			ADDWF	STACK_10, F
$00D7	$0877			MOVF	STACK_7, W
$00D8	$1803			BTFSC	STATUS, C
$00D9	$0F77			INCFSZ	STACK_7, W
$00DA	$07FB			ADDWF	STACK_11, F
$00DB	$	SOK22L16:
$00DB	$0DF1			RLF	STACK_1, F
$00DC	$3007			MOVLW	7
$00DD	$00FC			MOVWF	STACK_12
$00DE	$	LOOPS3232C:
$00DE	$0D71			RLF	STACK_1, W
$00DF	$0DF8			RLF	STACK_8, F
$00E0	$0DF9			RLF	STACK_9, F
$00E1	$0DFA			RLF	STACK_10, F
$00E2	$0DFB			RLF	STACK_11, F
$00E3	$0874			MOVF	STACK_4, W
$00E4	$1C71			BTFSS	STACK_1, 0
$00E5	$28F4			GOTO	SADD22LC
$00E6	$02F8			SUBWF	STACK_8, F
$00E7	$0875			MOVF	STACK_5, W
$00E8	$1C03			BTFSS	STATUS, C
$00E9	$0F75			INCFSZ	STACK_5, W
$00EA	$02F9			SUBWF	STACK_9, F
$00EB	$0876			MOVF	STACK_6, W
$00EC	$1C03			BTFSS	STATUS, C
$00ED	$0F76			INCFSZ	STACK_6, W
$00EE	$02FA			SUBWF	STACK_10, F
$00EF	$0877			MOVF	STACK_7, W
$00F0	$1C03			BTFSS	STATUS, C
$00F1	$0F77			INCFSZ	STACK_7, W
$00F2	$02FB			SUBWF	STACK_11, F
$00F3	$2901			GOTO	SOK22LC
$00F4	$	SADD22LC:
$00F4	$07F8			ADDWF	STACK_8, F
$00F5	$0875			MOVF	STACK_5, W
$00F6	$1803			BTFSC	STATUS, C
$00F7	$0F75			INCFSZ	STACK_5, W
$00F8	$07F9			ADDWF	STACK_9, F
$00F9	$0876			MOVF	STACK_6, W
$00FA	$1803			BTFSC	STATUS, C
$00FB	$0F76			INCFSZ	STACK_6, W
$00FC	$07FA			ADDWF	STACK_10, F
$00FD	$0877			MOVF	STACK_7, W
$00FE	$1803			BTFSC	STATUS, C
$00FF	$0F77			INCFSZ	STACK_7, W
$0100	$07FB			ADDWF	STACK_11, F
$0101	$	SOK22LC:
$0101	$0DF1			RLF	STACK_1, F
$0102	$0BFC			DECFSZ	STACK_12, F
$0103	$28DE			GOTO	LOOPS3232C
$0104	$0D70			RLF	STACK_0, W
$0105	$0DF8			RLF	STACK_8, F
$0106	$0DF9			RLF	STACK_9, F
$0107	$0DFA			RLF	STACK_10, F
$0108	$0DFB			RLF	STACK_11, F
$0109	$0874			MOVF	STACK_4, W
$010A	$1C71			BTFSS	STACK_1, 0
$010B	$291A			GOTO	SADD22L24
$010C	$02F8			SUBWF	STACK_8, F
$010D	$0875			MOVF	STACK_5, W
$010E	$1C03			BTFSS	STATUS, C
$010F	$0F75			INCFSZ	STACK_5, W
$0110	$02F9			SUBWF	STACK_9, F
$0111	$0876			MOVF	STACK_6, W
$0112	$1C03			BTFSS	STATUS, C
$0113	$0F76			INCFSZ	STACK_6, W
$0114	$02FA			SUBWF	STACK_10, F
$0115	$0877			MOVF	STACK_7, W
$0116	$1C03			BTFSS	STATUS, C
$0117	$0F77			INCFSZ	STACK_7, W
$0118	$02FB			SUBWF	STACK_11, F
$0119	$2927			GOTO	SOK22L24
$011A	$	SADD22L24:
$011A	$07F8			ADDWF	STACK_8, F
$011B	$0875			MOVF	STACK_5, W
$011C	$1803			BTFSC	STATUS, C
$011D	$0F75			INCFSZ	STACK_5, W
$011E	$07F9			ADDWF	STACK_9, F
$011F	$0876			MOVF	STACK_6, W
$0120	$1803			BTFSC	STATUS, C
$0121	$0F76			INCFSZ	STACK_6, W
$0122	$07FA			ADDWF	STACK_10, F
$0123	$0877			MOVF	STACK_7, W
$0124	$1803			BTFSC	STATUS, C
$0125	$0F77			INCFSZ	STACK_7, W
$0126	$07FB			ADDWF	STACK_11, F
$0127	$	SOK22L24:
$0127	$0DF0			RLF	STACK_0, F
$0128	$3007			MOVLW	7
$0129	$00FC			MOVWF	STACK_12
$012A	$	LOOPS3232D:
$012A	$0D70			RLF	STACK_0, W
$012B	$0DF8			RLF	STACK_8, F
$012C	$0DF9			RLF	STACK_9, F
$012D	$0DFA			RLF	STACK_10, F
$012E	$0DFB			RLF	STACK_11, F
$012F	$0874			MOVF	STACK_4, W
$0130	$1C70			BTFSS	STACK_0, 0
$0131	$2940			GOTO	SADD22LD
$0132	$02F8			SUBWF	STACK_8, F
$0133	$0875			MOVF	STACK_5, W
$0134	$1C03			BTFSS	STATUS, C
$0135	$0F75			INCFSZ	STACK_5, W
$0136	$02F9			SUBWF	STACK_9, F
$0137	$0876			MOVF	STACK_6, W
$0138	$1C03			BTFSS	STATUS, C
$0139	$0F76			INCFSZ	STACK_6, W
$013A	$02FA			SUBWF	STACK_10, F
$013B	$0877			MOVF	STACK_7, W
$013C	$1C03			BTFSS	STATUS, C
$013D	$0F77			INCFSZ	STACK_7, W
$013E	$02FB			SUBWF	STACK_11, F
$013F	$294D			GOTO	SOK22LD
$0140	$	SADD22LD:
$0140	$07F8			ADDWF	STACK_8, F
$0141	$0875			MOVF	STACK_5, W
$0142	$1803			BTFSC	STATUS, C
$0143	$0F75			INCFSZ	STACK_5, W
$0144	$07F9			ADDWF	STACK_9, F
$0145	$0876			MOVF	STACK_6, W
$0146	$1803			BTFSC	STATUS, C
$0147	$0F76			INCFSZ	STACK_6, W
$0148	$07FA			ADDWF	STACK_10, F
$0149	$0877			MOVF	STACK_7, W
$014A	$1803			BTFSC	STATUS, C
$014B	$0F77			INCFSZ	STACK_7, W
$014C	$07FB			ADDWF	STACK_11, F
$014D	$	SOK22LD:
$014D	$0DF0			RLF	STACK_0, F
$014E	$0BFC			DECFSZ	STACK_12, F
$014F	$292A			GOTO	LOOPS3232D
$0150	$1870			BTFSC	STACK_0, 0
$0151	$2960			GOTO	SOK22L
$0152	$0874			MOVF	STACK_4, W
$0153	$07F8			ADDWF	STACK_8, F
$0154	$0875			MOVF	STACK_5, W
$0155	$1803			BTFSC	STATUS, C
$0156	$0F75			INCFSZ	STACK_5, W
$0157	$07F9			ADDWF	STACK_9, F
$0158	$0876			MOVF	STACK_6, W
$0159	$1803			BTFSC	STATUS, C
$015A	$0F76			INCFSZ	STACK_6, W
$015B	$07FA			ADDWF	STACK_10, F
$015C	$0877			MOVF	STACK_7, W
$015D	$1803			BTFSC	STATUS, C
$015E	$0F77			INCFSZ	STACK_7, W
$015F	$07FB			ADDWF	STACK_11, F
$0160	$	SOK22L:
$0160	$0008			RETURN
$04D5	$	_COMFREM:
$04D5	$1303			BCF	STATUS, RP1
$04D6	$1283			BCF	STATUS, RP0
$04D7	$09FB			COMF	STACK_11, F
$04D8	$09FA			COMF	STACK_10, F
$04D9	$09F9			COMF	STACK_9, F
$04DA	$09F8			COMF	STACK_8, F
$04DB	$0AF8			INCF	STACK_8, F
$04DC	$1903			BTFSC	STATUS, Z
$04DD	$0AF9			INCF	STACK_9, F
$04DE	$1903			BTFSC	STATUS, Z
$04DF	$0AFA			INCF	STACK_10, F
$04E0	$1903			BTFSC	STATUS, Z
$04E1	$0AFB			INCF	STACK_11, F
$04E2	$0008			RETURN
$04EC	$	_Get_Fosc_kHz:
;delays.c,1 :: 		unsigned long Get_Fosc_kHz(){
;delays.c,3 :: 		return Clock_kHz();
$04EC	$3020			MOVLW	32
$04ED	$1303			BCF	STATUS, RP1
$04EE	$1283			BCF	STATUS, RP0
$04EF	$00F0			MOVWF	STACK_0
$04F0	$304E			MOVLW	78
$04F1	$00F1			MOVWF	STACK_0+1
$04F2	$01F2			CLRF	STACK_0+2
$04F3	$01F3			CLRF	STACK_0+3
;delays.c,5 :: 		}
$04F4	$0008			RETURN
$04B3	$	_Delay_Cyc:
;delays.c,53 :: 		void Delay_Cyc(char cycles_div_by_10)  { // Cycles_div_by_10: min 3, max 255
;delays.c,55 :: 		--cycles_div_by_10;
$04B3	$1303			BCF	STATUS, RP1
$04B4	$1283			BCF	STATUS, RP0
$04B5	$03B7			DECF	FARG_Delay_Cyc+0, 1
;delays.c,56 :: 		--cycles_div_by_10;
$04B6	$03B7			DECF	FARG_Delay_Cyc+0, 1
;delays.c,57 :: 		while (cycles_div_by_10 > 0) {
$04B7	$	L_Delay_Cyc_0:
$04B7	$0837			MOVF	FARG_Delay_Cyc+0, 0
$04B8	$3C00			SUBLW	0
$04B9	$1803			BTFSC	STATUS, C
$04BA	$2CC0			GOTO	L_Delay_Cyc_1
;delays.c,58 :: 		--cycles_div_by_10;
$04BB	$03B7			DECF	FARG_Delay_Cyc+0, 1
;delays.c,59 :: 		asm nop;
$04BC	$0000			NOP
;delays.c,60 :: 		asm nop;
$04BD	$0000			NOP
;delays.c,61 :: 		asm nop;
$04BE	$0000			NOP
;delays.c,62 :: 		}
$04BF	$2CB7			GOTO	L_Delay_Cyc_0
$04C0	$	L_Delay_Cyc_1:
;delays.c,63 :: 		asm nop;
$04C0	$0000			NOP
;delays.c,64 :: 		asm nop;
$04C1	$0000			NOP
;delays.c,65 :: 		asm nop;
$04C2	$0000			NOP
;delays.c,66 :: 		}
$04C3	$0008			RETURN
$0443	$	_Mul_32x32_U:
$0443	$1303			BCF	STATUS, RP1
$0444	$1283			BCF	STATUS, RP0
$0445	$3022			MOVLW	34
$0446	$00FC			MOVWF	STACK_12
$0447	$01F8			CLRF	STACK_8
$0448	$01F9			CLRF	STACK_9
$0449	$01FA			CLRF	STACK_10
$044A	$01FB			CLRF	STACK_11
$044B	$	_NEXT:
$044B	$03FC			DECF	STACK_12, F
$044C	$1903			BTFSC	STATUS, Z
$044D	$2C79			GOTO	_EXIT2
$044E	$1003			BCF	STATUS, C
$044F	$	_LOOP:
$044F	$0CFB			RRF	STACK_11, F
$0450	$0CFA			RRF	STACK_10, F
$0451	$0CF9			RRF	STACK_9, F
$0452	$0CF8			RRF	STACK_8, F
$0453	$0CF3			RRF	STACK_3, F
$0454	$0CF2			RRF	STACK_2, F
$0455	$0CF1			RRF	STACK_1, F
$0456	$0CF0			RRF	STACK_0, F
$0457	$1C03			BTFSS	STATUS, C
$0458	$2C4B			GOTO	_NEXT
$0459	$03FC			DECF	STACK_12, F
$045A	$1903			BTFSC	STATUS, Z
$045B	$2C6B			GOTO	_EXIT1
$045C	$0874			MOVF	STACK_4, W
$045D	$07F8			ADDWF	STACK_8, F
$045E	$0875			MOVF	STACK_5, W
$045F	$1803			BTFSC	STATUS, C
$0460	$0F75			INCFSZ	STACK_5, W
$0461	$07F9			ADDWF	STACK_9, F
$0462	$0876			MOVF	STACK_6, W
$0463	$1803			BTFSC	STATUS, C
$0464	$0F76			INCFSZ	STACK_6, W
$0465	$07FA			ADDWF	STACK_10, F
$0466	$0877			MOVF	STACK_7, W
$0467	$1803			BTFSC	STATUS, C
$0468	$0F77			INCFSZ	STACK_7, W
$0469	$07FB			ADDWF	STACK_11, F
$046A	$2C4F			GOTO	_LOOP
$046B	$	_EXIT1:
$046B	$0874			MOVF	STACK_4, W
$046C	$07F8			ADDWF	STACK_8, F
$046D	$0875			MOVF	STACK_5, W
$046E	$1803			BTFSC	STATUS, C
$046F	$0F75			INCFSZ	STACK_5, W
$0470	$07F9			ADDWF	STACK_9, F
$0471	$0876			MOVF	STACK_6, W
$0472	$1803			BTFSC	STATUS, C
$0473	$0F76			INCFSZ	STACK_6, W
$0474	$07FA			ADDWF	STACK_10, F
$0475	$0877			MOVF	STACK_7, W
$0476	$1803			BTFSC	STATUS, C
$0477	$0F77			INCFSZ	STACK_7, W
$0478	$07FB			ADDWF	STACK_11, F
$0479	$	_EXIT2:
$0479	$0008			RETURN
$02DC	$	_Div_32x32_S:
$02DC	$1303			BCF	STATUS, RP1
$02DD	$1283			BCF	STATUS, RP0
$02DE	$	FXD3232S:
$02DE	$01FC			CLRF	STACK_12
$02DF	$1BF7			BTFSC	STACK_7, 7
$02E0	$0AFC			INCF	STACK_12, F
$02E1	$01FD			CLRF	STACK_13
$02E2	$01FB			CLRF	STACK_11
$02E3	$01FA			CLRF	STACK_10
$02E4	$01F9			CLRF	STACK_9
$02E5	$01F8			CLRF	STACK_8
$02E6	$0873			MOVF	STACK_3, W
$02E7	$0472			IORWF	STACK_2, W
$02E8	$0471			IORWF	STACK_1, W
$02E9	$0470			IORWF	STACK_0, W
$02EA	$1903			BTFSC	STATUS, Z
$02EB	$2B70			GOTO	END_ALL
$02EC	$0873			MOVF	STACK_3, W
$02ED	$0677			XORWF	STACK_7, W
$02EE	$00A0			MOVWF	___math_tempb
$02EF	$1BA0			BTFSC	___math_tempb, 7
$02F0	$09FD			COMF	STACK_13, F
$02F1	$1FF7			BTFSS	STACK_7, 7
$02F2	$2AFE			GOTO	CA3232S
$02F3	$09F4			COMF	STACK_4, F
$02F4	$09F5			COMF	STACK_5, F
$02F5	$09F6			COMF	STACK_6, F
$02F6	$09F7			COMF	STACK_7, F
$02F7	$0AF4			INCF	STACK_4, F
$02F8	$1903			BTFSC	STATUS, Z
$02F9	$0AF5			INCF	STACK_5, F
$02FA	$1903			BTFSC	STATUS, Z
$02FB	$0AF6			INCF	STACK_6, F
$02FC	$1903			BTFSC	STATUS, Z
$02FD	$0AF7			INCF	STACK_7, F
$02FE	$	CA3232S:
$02FE	$1FF3			BTFSS	STACK_3, 7
$02FF	$2B0B			GOTO	C3232SX
$0300	$09F0			COMF	STACK_0, F
$0301	$09F1			COMF	STACK_1, F
$0302	$09F2			COMF	STACK_2, F
$0303	$09F3			COMF	STACK_3, F
$0304	$0AF0			INCF	STACK_0, F
$0305	$1903			BTFSC	STATUS, Z
$0306	$0AF1			INCF	STACK_1, F
$0307	$1903			BTFSC	STATUS, Z
$0308	$0AF2			INCF	STACK_2, F
$0309	$1903			BTFSC	STATUS, Z
$030A	$0AF3			INCF	STACK_3, F
$030B	$	C3232SX:
$030B	$0873			MOVF	STACK_3, W
$030C	$0477			IORWF	STACK_7, W
$030D	$00A0			MOVWF	___math_tempb
$030E	$1BA0			BTFSC	___math_tempb, 7
$030F	$2B2C			GOTO	C3232SX1
$0310	$	C3232S:
$0310	$2033			CALL	_SDIV3232L
$0311	$	C3232S2:
$0311	$1BFC			BTFSC	STACK_12, 7
$0312	$2B49			GOTO	C3232SX4
$0313	$	C3232SOK:
$0313	$1FFD			BTFSS	STACK_13, 7
$0314	$2B70			GOTO	END_ALL
$0315	$09F0			COMF	STACK_0, F
$0316	$09F1			COMF	STACK_1, F
$0317	$09F2			COMF	STACK_2, F
$0318	$09F3			COMF	STACK_3, F
$0319	$0AF0			INCF	STACK_0, F
$031A	$1903			BTFSC	STATUS, Z
$031B	$0AF1			INCF	STACK_1, F
$031C	$1903			BTFSC	STATUS, Z
$031D	$0AF2			INCF	STACK_2, F
$031E	$1903			BTFSC	STATUS, Z
$031F	$0AF3			INCF	STACK_3, F
$0320	$09F8			COMF	STACK_8, F
$0321	$09F9			COMF	STACK_9, F
$0322	$09FA			COMF	STACK_10, F
$0323	$09FB			COMF	STACK_11, F
$0324	$0AF8			INCF	STACK_8, F
$0325	$1903			BTFSC	STATUS, Z
$0326	$0AF9			INCF	STACK_9, F
$0327	$1903			BTFSC	STATUS, Z
$0328	$0AFA			INCF	STACK_10, F
$0329	$1903			BTFSC	STATUS, Z
$032A	$0AFB			INCF	STACK_11, F
$032B	$2B70			GOTO	END_ALL
$032C	$	C3232SX1:
$032C	$1FF7			BTFSS	STACK_7, 7
$032D	$2B43			GOTO	C3232SX3
$032E	$1BF3			BTFSC	STACK_3, 7
$032F	$2B3D			GOTO	C3232SX2
$0330	$0873			MOVF	STACK_3, W
$0331	$00FB			MOVWF	STACK_11
$0332	$0872			MOVF	STACK_2, W
$0333	$00FA			MOVWF	STACK_10
$0334	$0871			MOVF	STACK_1, W
$0335	$00F9			MOVWF	STACK_9
$0336	$0870			MOVF	STACK_0, W
$0337	$00F8			MOVWF	STACK_8
$0338	$01F3			CLRF	STACK_3
$0339	$01F2			CLRF	STACK_2
$033A	$01F1			CLRF	STACK_1
$033B	$01F0			CLRF	STACK_0
$033C	$2B13			GOTO	C3232SOK
$033D	$	C3232SX2:
$033D	$01F3			CLRF	STACK_3
$033E	$01F2			CLRF	STACK_2
$033F	$01F1			CLRF	STACK_1
$0340	$01F0			CLRF	STACK_0
$0341	$0AF0			INCF	STACK_0, F
$0342	$3400			RETLW	0x00
$0343	$	C3232SX3:
$0343	$09F3			COMF	STACK_3, F
$0344	$09F2			COMF	STACK_2, F
$0345	$09F1			COMF	STACK_1, F
$0346	$09F0			COMF	STACK_0, F
$0347	$17FC			BSF	STACK_12, 7
$0348	$2B10			GOTO	C3232S
$0349	$	C3232SX4:
$0349	$0AF8			INCF	STACK_8, F
$034A	$1903			BTFSC	STATUS, Z
$034B	$0AF9			INCF	STACK_9, F
$034C	$1903			BTFSC	STATUS, Z
$034D	$0AFA			INCF	STACK_10, F
$034E	$1903			BTFSC	STATUS, Z
$034F	$0AFB			INCF	STACK_11, F
$0350	$0874			MOVF	STACK_4, W
$0351	$0278			SUBWF	STACK_8, W
$0352	$1D03			BTFSS	STATUS, Z
$0353	$2B13			GOTO	C3232SOK
$0354	$0875			MOVF	STACK_5, W
$0355	$0279			SUBWF	STACK_9, W
$0356	$1D03			BTFSS	STATUS, Z
$0357	$2B13			GOTO	C3232SOK
$0358	$0876			MOVF	STACK_6, W
$0359	$027A			SUBWF	STACK_10, W
$035A	$1D03			BTFSS	STATUS, Z
$035B	$2B13			GOTO	C3232SOK
$035C	$0877			MOVF	STACK_7, W
$035D	$027B			SUBWF	STACK_11, W
$035E	$1D03			BTFSS	STATUS, Z
$035F	$2B13			GOTO	C3232SOK
$0360	$01FB			CLRF	STACK_11
$0361	$01FA			CLRF	STACK_10
$0362	$01F9			CLRF	STACK_9
$0363	$01F8			CLRF	STACK_8
$0364	$0AF0			INCF	STACK_0, F
$0365	$1903			BTFSC	STATUS, Z
$0366	$0AF1			INCF	STACK_1, F
$0367	$1903			BTFSC	STATUS, Z
$0368	$0AF2			INCF	STACK_2, F
$0369	$1903			BTFSC	STATUS, Z
$036A	$0AF3			INCF	STACK_3, F
$036B	$1FF3			BTFSS	STACK_3, 7
$036C	$2B13			GOTO	C3232SOK
$036D	$01A0			CLRF	___math_tempb
$036E	$1620			BSF	___math_tempb, 4
$036F	$34FF			RETLW	0xFF
$0370	$	END_ALL:
$0370	$01A0			CLRF	___math_tempb
$0371	$1C7C			BTFSS	STACK_12, 0
$0372	$2B74			GOTO	avoid_comfrem
$0373	$24D5			CALL	_COMFREM
$0374	$	avoid_comfrem:
$0374	$3F00			ADDLW	0x00
$0375	$0008			RETURN
$047A	$	_Div_16x16_U:
$047A	$1303			BCF	STATUS, RP1
$047B	$1283			BCF	STATUS, RP0
$047C	$01F8			CLRF	STACK_8
$047D	$01F9			CLRF	STACK_9
$047E	$3010			MOVLW	16
$047F	$00FC			MOVWF	STACK_12
$0480	$0D71			RLF	STACK_1, W
$0481	$0DF8			RLF	STACK_8, F
$0482	$0DF9			RLF	STACK_9, F
$0483	$0874			MOVF	STACK_4, W
$0484	$02F8			SUBWF	STACK_8, F
$0485	$0875			MOVF	STACK_5, W
$0486	$1C03			BTFSS	STATUS, C
$0487	$0F75			INCFSZ	STACK_5, W
$0488	$02F9			SUBWF	STACK_9, F
$0489	$1803			BTFSC	STATUS, C
$048A	$2C92			GOTO	$+8
$048B	$0874			MOVF	STACK_4, W
$048C	$07F8			ADDWF	STACK_8, F
$048D	$0875			MOVF	STACK_5, W
$048E	$1803			BTFSC	STATUS, C
$048F	$0F75			INCFSZ	STACK_5, W
$0490	$07F9			ADDWF	STACK_9, F
$0491	$1003			BCF	STATUS, C
$0492	$0DF0			RLF	STACK_0, F
$0493	$0DF1			RLF	STACK_1, F
$0494	$0BFC			DECFSZ	STACK_12, F
$0495	$2C80			GOTO	$-21
$0496	$0008			RETURN
$0236	$	_Sound_Play:
$0236	$24EC			CALL	_Get_Fosc_kHz
$0237	$30E8			MOVLW	232
$0238	$00F4			MOVWF	STACK_4
$0239	$3003			MOVLW	3
$023A	$00F5			MOVWF	STACK_4+1
$023B	$01F6			CLRF	STACK_4+2
$023C	$01F7			CLRF	STACK_4+3
$023D	$2443			CALL	_mul_32x32_u
$023E	$0870			MOVF	STACK_0, 0
$023F	$00AF			MOVWF	Sound_Play_per_nc_L0
$0240	$0871			MOVF	STACK_0+1, 0
$0241	$00B0			MOVWF	Sound_Play_per_nc_L0+1
$0242	$0872			MOVF	STACK_0+2, 0
$0243	$00B1			MOVWF	Sound_Play_per_nc_L0+2
$0244	$0873			MOVF	STACK_0+3, 0
$0245	$00B2			MOVWF	Sound_Play_per_nc_L0+3
$0246	$0829			MOVF	FARG_Sound_Play+0, 0
$0247	$00F4			MOVWF	STACK_4
$0248	$082A			MOVF	FARG_Sound_Play+1, 0
$0249	$00F5			MOVWF	STACK_4+1
$024A	$01F6			CLRF	STACK_4+2
$024B	$01F7			CLRF	STACK_4+3
$024C	$22DC			CALL	_div_32x32_s
$024D	$0870			MOVF	STACK_0, 0
$024E	$00AF			MOVWF	Sound_Play_per_nc_L0
$024F	$0871			MOVF	STACK_0+1, 0
$0250	$00B0			MOVWF	Sound_Play_per_nc_L0+1
$0251	$0872			MOVF	STACK_0+2, 0
$0252	$00B1			MOVWF	Sound_Play_per_nc_L0+2
$0253	$0873			MOVF	STACK_0+3, 0
$0254	$00B2			MOVWF	Sound_Play_per_nc_L0+3
$0255	$3003			MOVLW	3
$0256	$00F4			MOVWF	STACK_4
$0257	$0874			MOVF	STACK_4, 0
$0258	$	L_Sound_Play_5:
$0258	$1903			BTFSC	STATUS, Z
$0259	$2A61			GOTO	L_Sound_Play_6
$025A	$0CF3			RRF	STACK_0+3, 1
$025B	$0CF2			RRF	STACK_0+2, 1
$025C	$0CF1			RRF	STACK_0+1, 1
$025D	$0CF0			RRF	STACK_0, 1
$025E	$13F3			BCF	STACK_0+3, 7
$025F	$3FFF			ADDLW	255
$0260	$2A58			GOTO	L_Sound_Play_5
$0261	$	L_Sound_Play_6:
$0261	$0870			MOVF	STACK_0, 0
$0262	$00AD			MOVWF	Sound_Play_nc_L0
$0263	$0871			MOVF	STACK_0+1, 0
$0264	$00AE			MOVWF	Sound_Play_nc_L0+1
$0265	$24EC			CALL	_Get_Fosc_kHz
$0266	$082B			MOVF	FARG_Sound_Play+2, 0
$0267	$00F4			MOVWF	STACK_4
$0268	$082C			MOVF	FARG_Sound_Play+3, 0
$0269	$00F5			MOVWF	STACK_4+1
$026A	$01F6			CLRF	STACK_4+2
$026B	$01F7			CLRF	STACK_4+3
$026C	$2443			CALL	_mul_32x32_u
$026D	$0870			MOVF	STACK_0, 0
$026E	$00B3			MOVWF	FLOC_Sound_Play+6
$026F	$0871			MOVF	STACK_0+1, 0
$0270	$00B4			MOVWF	FLOC_Sound_Play+7
$0271	$0872			MOVF	STACK_0+2, 0
$0272	$00B5			MOVWF	FLOC_Sound_Play+8
$0273	$0873			MOVF	STACK_0+3, 0
$0274	$00B6			MOVWF	FLOC_Sound_Play+9
$0275	$082D			MOVF	Sound_Play_nc_L0, 0
$0276	$00F0			MOVWF	STACK_0
$0277	$082E			MOVF	Sound_Play_nc_L0+1, 0
$0278	$00F1			MOVWF	STACK_0+1
$0279	$01F2			CLRF	STACK_0+2
$027A	$01F3			CLRF	STACK_0+3
$027B	$3003			MOVLW	3
$027C	$00F4			MOVWF	STACK_4
$027D	$0874			MOVF	STACK_4, 0
$027E	$	L_Sound_Play_7:
$027E	$1903			BTFSC	STATUS, Z
$027F	$2A87			GOTO	L_Sound_Play_8
$0280	$0DF0			RLF	STACK_0, 1
$0281	$0DF1			RLF	STACK_0+1, 1
$0282	$0DF2			RLF	STACK_0+2, 1
$0283	$0DF3			RLF	STACK_0+3, 1
$0284	$1070			BCF	STACK_0, 0
$0285	$3FFF			ADDLW	255
$0286	$2A7E			GOTO	L_Sound_Play_7
$0287	$	L_Sound_Play_8:
$0287	$0870			MOVF	STACK_0, 0
$0288	$00F4			MOVWF	STACK_4
$0289	$0871			MOVF	STACK_0+1, 0
$028A	$00F5			MOVWF	STACK_4+1
$028B	$0872			MOVF	STACK_0+2, 0
$028C	$00F6			MOVWF	STACK_4+2
$028D	$0873			MOVF	STACK_0+3, 0
$028E	$00F7			MOVWF	STACK_4+3
$028F	$0833			MOVF	FLOC_Sound_Play+6, 0
$0290	$00F0			MOVWF	STACK_0
$0291	$0834			MOVF	FLOC_Sound_Play+7, 0
$0292	$00F1			MOVWF	STACK_0+1
$0293	$0835			MOVF	FLOC_Sound_Play+8, 0
$0294	$00F2			MOVWF	STACK_0+2
$0295	$0836			MOVF	FLOC_Sound_Play+9, 0
$0296	$00F3			MOVWF	STACK_0+3
$0297	$22DC			CALL	_div_32x32_s
$0298	$0870			MOVF	STACK_0, 0
$0299	$00AF			MOVWF	Sound_Play_per_nc_L0
$029A	$0871			MOVF	STACK_0+1, 0
$029B	$00B0			MOVWF	Sound_Play_per_nc_L0+1
$029C	$0872			MOVF	STACK_0+2, 0
$029D	$00B1			MOVWF	Sound_Play_per_nc_L0+2
$029E	$0873			MOVF	STACK_0+3, 0
$029F	$00B2			MOVWF	Sound_Play_per_nc_L0+3
$02A0	$300A			MOVLW	10
$02A1	$00F4			MOVWF	STACK_4
$02A2	$3000			MOVLW	0
$02A3	$00F5			MOVWF	STACK_4+1
$02A4	$082D			MOVF	Sound_Play_nc_L0, 0
$02A5	$00F0			MOVWF	STACK_0
$02A6	$082E			MOVF	Sound_Play_nc_L0+1, 0
$02A7	$00F1			MOVWF	STACK_0+1
$02A8	$247A			CALL	_div_16x16_u
$02A9	$0870			MOVF	STACK_0, 0
$02AA	$00AD			MOVWF	Sound_Play_nc_L0
$02AB	$0871			MOVF	STACK_0+1, 0
$02AC	$00AE			MOVWF	Sound_Play_nc_L0+1
$02AD	$3000			MOVLW	0
$02AE	$0271			SUBWF	STACK_0+1, 0
$02AF	$1D03			BTFSS	STATUS, Z
$02B0	$2AB3			GOTO	L_Sound_Play_9
$02B1	$3003			MOVLW	3
$02B2	$0270			SUBWF	STACK_0, 0
$02B3	$	L_Sound_Play_9:
$02B3	$1803			BTFSC	STATUS, C
$02B4	$2AB6			GOTO	L_Sound_Play_0
$02B5	$0008			RETURN
$02B6	$	L_Sound_Play_0:
$02B6	$0821			MOVF	Sound_soundPortAddr, 0
$02B7	$0084			MOVWF	FSR
$02B8	$	L_Sound_Play_1:
$02B8	$082F			MOVF	Sound_Play_per_nc_L0, 0
$02B9	$00F0			MOVWF	STACK_0
$02BA	$0830			MOVF	Sound_Play_per_nc_L0+1, 0
$02BB	$00F1			MOVWF	STACK_0+1
$02BC	$0831			MOVF	Sound_Play_per_nc_L0+2, 0
$02BD	$00F2			MOVWF	STACK_0+2
$02BE	$0832			MOVF	Sound_Play_per_nc_L0+3, 0
$02BF	$00F3			MOVWF	STACK_0+3
$02C0	$3001			MOVLW	1
$02C1	$02AF			SUBWF	Sound_Play_per_nc_L0, 1
$02C2	$1C03			BTFSS	STATUS, C
$02C3	$02B0			SUBWF	Sound_Play_per_nc_L0+1, 1
$02C4	$1C03			BTFSS	STATUS, C
$02C5	$02B1			SUBWF	Sound_Play_per_nc_L0+2, 1
$02C6	$1C03			BTFSS	STATUS, C
$02C7	$02B2			SUBWF	Sound_Play_per_nc_L0+3, 1
$02C8	$0870			MOVF	STACK_0, 0
$02C9	$0471			IORWF	STACK_0+1, 0
$02CA	$0472			IORWF	STACK_0+2, 0
$02CB	$0473			IORWF	STACK_0+3, 0
$02CC	$1903			BTFSC	STATUS, Z
$02CD	$2AD9			GOTO	L_Sound_Play_2
$02CE	$0822			MOVF	Sound_pinMask1, 0
$02CF	$0480			IORWF	INDF, 1
$02D0	$082D			MOVF	Sound_Play_nc_L0, 0
$02D1	$00B7			MOVWF	FARG_Delay_Cyc+0
$02D2	$24B3			CALL	_Delay_Cyc
$02D3	$0823			MOVF	Sound_pinMask0, 0
$02D4	$0580			ANDWF	INDF, 1
$02D5	$082D			MOVF	Sound_Play_nc_L0, 0
$02D6	$00B7			MOVWF	FARG_Delay_Cyc+0
$02D7	$24B3			CALL	_Delay_Cyc
$02D8	$2AB8			GOTO	L_Sound_Play_1
$02D9	$	L_Sound_Play_2:
$02D9	$0823			MOVF	Sound_pinMask0, 0
$02DA	$0580			ANDWF	INDF, 1
$02DB	$0008			RETURN
$0004	$	_interrupt:
$0004	$00FF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00A7			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00A6			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00A8			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$087C			MOVF	STACK_12, 0
$000E	$00EF			MOVWF	STSAVED_12
$000F	$087B			MOVF	STACK_11, 0
$0010	$00EE			MOVWF	STSAVED_11
$0011	$087A			MOVF	STACK_10, 0
$0012	$00ED			MOVWF	STSAVED_10
$0013	$0871			MOVF	STACK_1, 0
$0014	$00EC			MOVWF	STSAVED_1
$0015	$0870			MOVF	STACK_0, 0
$0016	$00EB			MOVWF	STSAVED_0
;IntTest.c,1 :: 		void interrupt()                             // Interrupt Service routine
;IntTest.c,3 :: 		Sound_Play(2000,200);                    // Show Sound
$0017	$30D0			MOVLW	208
$0018	$00A9			MOVWF	FARG_Sound_Play+0
$0019	$3007			MOVLW	7
$001A	$00AA			MOVWF	FARG_Sound_Play+1
$001B	$30C8			MOVLW	200
$001C	$00AB			MOVWF	FARG_Sound_Play+2
$001D	$01AC			CLRF	FARG_Sound_Play+3
$001E	$2236			CALL	_Sound_Play
;IntTest.c,4 :: 		INTCON.INTF=0;                          // Clear Flag Interrupt
$001F	$108B			BCF	INTCON, 1
;IntTest.c,5 :: 		}
$0020	$	L_Interrupt_end:
$0020	$086F			MOVF	STSAVED_12, 0
$0021	$00FC			MOVWF	STACK_12
$0022	$086E			MOVF	STSAVED_11, 0
$0023	$00FB			MOVWF	STACK_11
$0024	$086D			MOVF	STSAVED_10, 0
$0025	$00FA			MOVWF	STACK_10
$0026	$086C			MOVF	STSAVED_1, 0
$0027	$00F1			MOVWF	STACK_1
$0028	$086B			MOVF	STSAVED_0, 0
$0029	$00F0			MOVWF	STACK_0
$002A	$0828			MOVF	?savePCLATH, 0
$002B	$008A			MOVWF	PCLATH
$002C	$0826			MOVF	?saveFSR, 0
$002D	$0084			MOVWF	FSR
$002E	$0E27			SWAPF	?saveSTATUS, 0
$002F	$0083			MOVWF	STATUS
$0030	$0EFF			SWAPF	STACK_15, 1
$0031	$0E7F			SWAPF	STACK_15, 0
$0032	$0009			RETFIE
$04F5	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,8 :: 		Delay_us(1);
$04F5	$3001			MOVLW	1
$04F6	$1303			BCF	STATUS, RP1
$04F7	$1283			BCF	STATUS, RP0
$04F8	$00FA			MOVWF	STACK_10
$04F9	$0BFA			DECFSZ	STACK_10, F
$04FA	$2CF9			GOTO	$-1
$04FB	$0000			NOP
;delays.c,9 :: 		}
$04FC	$0008			RETURN
$04C4	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$04C4	$3024			MOVLW	36
$04C5	$1303			BCF	STATUS, RP1
$04C6	$1283			BCF	STATUS, RP0
$04C7	$00FB			MOVWF	STACK_11
$04C8	$30FF			MOVLW	255
$04C9	$00FA			MOVWF	STACK_10
$04CA	$0BFB			DECFSZ	STACK_11, F
$04CB	$2CCD			GOTO	$+2
$04CC	$2CD0			GOTO	$+4
$04CD	$0BFA			DECFSZ	STACK_10, F
$04CE	$2CCD			GOTO	$-1
$04CF	$2CCA			GOTO	$-5
$04D0	$309E			MOVLW	158
$04D1	$00FA			MOVWF	STACK_10
$04D2	$0BFA			DECFSZ	STACK_10, F
$04D3	$2CD2			GOTO	$-1
;delays.c,33 :: 		}
$04D4	$0008			RETURN
$04FD	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$04FD	$3053			MOVLW	83
$04FE	$1303			BCF	STATUS, RP1
$04FF	$1283			BCF	STATUS, RP0
$0500	$00FA			MOVWF	STACK_10
$0501	$0BFA			DECFSZ	STACK_10, F
$0502	$2D01			GOTO	$-1
;delays.c,21 :: 		}
$0503	$0008			RETURN
$03C2	$	_Lcd_Cmd:
$03C2	$1303			BCF	STATUS, RP1
$03C3	$1283			BCF	STATUS, RP0
$03C4	$0824			MOVF	LCD_port_address, 0
$03C5	$0084			MOVWF	FSR
$03C6	$086A			MOVF	FARG_Lcd_Cmd+0, 0
$03C7	$1903			BTFSC	STATUS, Z
$03C8	$2BC9			GOTO	L_Lcd_Cmd_0
$03C9	$	L_Lcd_Cmd_0:
$03C9	$1180			BCF	INDF, ___ENABLE
$03CA	$1100			BCF	INDF, ___RS
$03CB	$1380			BCF	INDF, ___DB7
$03CC	$1300			BCF	INDF, ___DB6
$03CD	$1280			BCF	INDF, ___DB5
$03CE	$1200			BCF	INDF, ___DB4
$03CF	$1BEA			BTFSC	FARG_Lcd_Cmd+0, 7
$03D0	$1780			BSF	INDF, ___DB7
$03D1	$1B6A			BTFSC	FARG_Lcd_Cmd+0, 6
$03D2	$1700			BSF	INDF, ___DB6
$03D3	$1AEA			BTFSC	FARG_Lcd_Cmd+0, 5
$03D4	$1680			BSF	INDF, ___DB5
$03D5	$1A6A			BTFSC	FARG_Lcd_Cmd+0, 4
$03D6	$1600			BSF	INDF, ___DB4
$03D7	$0825			MOVF	LCD_cmd_status, 0
$03D8	$1903			BTFSC	STATUS, Z
$03D9	$2BDC			GOTO	L_Lcd_Cmd_1
$03DA	$1100			BCF	INDF, ___RS
$03DB	$2BDD			GOTO	L_Lcd_Cmd_2
$03DC	$	L_Lcd_Cmd_1:
$03DC	$1500			BSF	INDF, ___RS
$03DD	$	L_Lcd_Cmd_2:
$03DD	$1580			BSF	INDF, ___ENABLE
$03DE	$24F5			CALL	_Delay_1us
$03DF	$086A			MOVF	FARG_Lcd_Cmd+0, 0
$03E0	$1903			BTFSC	STATUS, Z
$03E1	$2BE2			GOTO	L_Lcd_Cmd_3
$03E2	$	L_Lcd_Cmd_3:
$03E2	$1180			BCF	INDF, ___ENABLE
$03E3	$1100			BCF	INDF, ___RS
$03E4	$1380			BCF	INDF, ___DB7
$03E5	$1300			BCF	INDF, ___DB6
$03E6	$1280			BCF	INDF, ___DB5
$03E7	$1200			BCF	INDF, ___DB4
$03E8	$19EA			BTFSC	FARG_Lcd_Cmd+0, 3
$03E9	$1780			BSF	INDF, ___DB7
$03EA	$196A			BTFSC	FARG_Lcd_Cmd+0, 2
$03EB	$1700			BSF	INDF, ___DB6
$03EC	$18EA			BTFSC	FARG_Lcd_Cmd+0, 1
$03ED	$1680			BSF	INDF, ___DB5
$03EE	$186A			BTFSC	FARG_Lcd_Cmd+0, 0
$03EF	$1600			BSF	INDF, ___DB4
$03F0	$0825			MOVF	LCD_cmd_status, 0
$03F1	$1903			BTFSC	STATUS, Z
$03F2	$2BF5			GOTO	L_Lcd_Cmd_4
$03F3	$1100			BCF	INDF, ___RS
$03F4	$2BF6			GOTO	L_Lcd_Cmd_5
$03F5	$	L_Lcd_Cmd_4:
$03F5	$1500			BSF	INDF, ___RS
$03F6	$	L_Lcd_Cmd_5:
$03F6	$1580			BSF	INDF, ___ENABLE
$03F7	$24F5			CALL	_Delay_1us
$03F8	$1180			BCF	INDF, ___ENABLE
$03F9	$0825			MOVF	LCD_cmd_status, 0
$03FA	$1903			BTFSC	STATUS, Z
$03FB	$2BFE			GOTO	L_Lcd_Cmd_6
$03FC	$24C4			CALL	_Delay_5500us
$03FD	$2BFF			GOTO	L_Lcd_Cmd_7
$03FE	$	L_Lcd_Cmd_6:
$03FE	$24FD			CALL	_Delay_50us
$03FF	$	L_Lcd_Cmd_7:
$03FF	$0008			RETURN
$04E3	$	_Lcd_Chr_CP:
$04E3	$1303			BCF	STATUS, RP1
$04E4	$1283			BCF	STATUS, RP0
$04E5	$01A5			CLRF	LCD_cmd_status, 1
$04E6	$0869			MOVF	FARG_Lcd_Chr_CP+0, 0
$04E7	$00EA			MOVWF	FARG_Lcd_Cmd+0
$04E8	$23C2			CALL	_Lcd_Cmd
$04E9	$3001			MOVLW	1
$04EA	$00A5			MOVWF	LCD_cmd_status
$04EB	$0008			RETURN
$0497	$	_Sound_Init:
$0497	$1303			BCF	STATUS, RP1
$0498	$1283			BCF	STATUS, RP0
$0499	$0865			MOVF	FARG_Sound_Init+0, 0
$049A	$00A1			MOVWF	Sound_soundPortAddr
$049B	$0866			MOVF	FARG_Sound_Init+1, 0
$049C	$00F1			MOVWF	STACK_1
$049D	$3001			MOVLW	1
$049E	$00F0			MOVWF	STACK_0
$049F	$0871			MOVF	STACK_1, 0
$04A0	$	L_Sound_Init_3:
$04A0	$1903			BTFSC	STATUS, Z
$04A1	$2CA6			GOTO	L_Sound_Init_4
$04A2	$0DF0			RLF	STACK_0, 1
$04A3	$1070			BCF	STACK_0, 0
$04A4	$3FFF			ADDLW	255
$04A5	$2CA0			GOTO	L_Sound_Init_3
$04A6	$	L_Sound_Init_4:
$04A6	$0870			MOVF	STACK_0, 0
$04A7	$00A2			MOVWF	Sound_pinMask1
$04A8	$09F0			COMF	STACK_0, F
$04A9	$0870			MOVF	STACK_0, 0
$04AA	$00A3			MOVWF	Sound_pinMask0
$04AB	$0865			MOVF	FARG_Sound_Init+0, 0
$04AC	$0084			MOVWF	FSR
$04AD	$0870			MOVF	STACK_0, 0
$04AE	$0580			ANDWF	INDF, 1
$04AF	$1784			BSF	FSR, 7
$04B0	$0870			MOVF	STACK_0, 0
$04B1	$0580			ANDWF	INDF, 1
$04B2	$0008			RETURN
$0376	$	_Lcd_Init:
$0376	$24C4			CALL	_Delay_5500us
$0377	$24C4			CALL	_Delay_5500us
$0378	$24C4			CALL	_Delay_5500us
$0379	$0865			MOVF	FARG_Lcd_Init+0, 0
$037A	$00A4			MOVWF	LCD_port_address
$037B	$0865			MOVF	FARG_Lcd_Init+0, 0
$037C	$0084			MOVWF	FSR
$037D	$1784			BSF	FSR, 7
$037E	$1180			BCF	INDF, ___ENABLE
$037F	$1100			BCF	INDF, ___RS
$0380	$1000			BCF	INDF, ___RW
$0381	$1380			BCF	INDF, ___DB7
$0382	$1300			BCF	INDF, ___DB6
$0383	$1280			BCF	INDF, ___DB5
$0384	$1200			BCF	INDF, ___DB4
$0385	$1384			BCF	FSR, 7
$0386	$1180			BCF	INDF, ___ENABLE
$0387	$1100			BCF	INDF, ___RS
$0388	$1000			BCF	INDF, ___RW
$0389	$1380			BCF	INDF, ___DB7
$038A	$1300			BCF	INDF, ___DB6
$038B	$1280			BCF	INDF, ___DB5
$038C	$1200			BCF	INDF, ___DB4
$038D	$1680			BSF	INDF, ___DB5
$038E	$1600			BSF	INDF, ___DB4
$038F	$1580			BSF	INDF, ___ENABLE
$0390	$1180			BCF	INDF, ___ENABLE
$0391	$24C4			CALL	_Delay_5500us
$0392	$1580			BSF	INDF, ___ENABLE
$0393	$1180			BCF	INDF, ___ENABLE
$0394	$24C4			CALL	_Delay_5500us
$0395	$1580			BSF	INDF, ___ENABLE
$0396	$1180			BCF	INDF, ___ENABLE
$0397	$24C4			CALL	_Delay_5500us
$0398	$1680			BSF	INDF, ___DB5
$0399	$1200			BCF	INDF, ___DB4
$039A	$1580			BSF	INDF, ___ENABLE
$039B	$1180			BCF	INDF, ___ENABLE
$039C	$24C4			CALL	_Delay_5500us
$039D	$0180			CLRF	INDF
$039E	$1680			BSF	INDF, ___DB5
$039F	$1580			BSF	INDF, ___ENABLE
$03A0	$1180			BCF	INDF, ___ENABLE
$03A1	$0180			CLRF	INDF
$03A2	$1780			BSF	INDF, ___DB7
$03A3	$1580			BSF	INDF, ___ENABLE
$03A4	$1180			BCF	INDF, ___ENABLE
$03A5	$24C4			CALL	_Delay_5500us
$03A6	$0180			CLRF	INDF
$03A7	$1600			BSF	INDF, ___DB4
$03A8	$1580			BSF	INDF, ___ENABLE
$03A9	$1180			BCF	INDF, ___ENABLE
$03AA	$0180			CLRF	INDF
$03AB	$1580			BSF	INDF, ___ENABLE
$03AC	$1180			BCF	INDF, ___ENABLE
$03AD	$24C4			CALL	_Delay_5500us
$03AE	$0180			CLRF	INDF
$03AF	$1580			BSF	INDF, ___ENABLE
$03B0	$1180			BCF	INDF, ___ENABLE
$03B1	$1600			BSF	INDF, ___DB4
$03B2	$1580			BSF	INDF, ___ENABLE
$03B3	$1180			BCF	INDF, ___ENABLE
$03B4	$24C4			CALL	_Delay_5500us
$03B5	$0180			CLRF	INDF
$03B6	$1580			BSF	INDF, ___ENABLE
$03B7	$1180			BCF	INDF, ___ENABLE
$03B8	$1600			BSF	INDF, ___DB4
$03B9	$1680			BSF	INDF, ___DB5
$03BA	$1700			BSF	INDF, ___DB6
$03BB	$1780			BSF	INDF, ___DB7
$03BC	$1580			BSF	INDF, ___ENABLE
$03BD	$1180			BCF	INDF, ___ENABLE
$03BE	$24C4			CALL	_Delay_5500us
$03BF	$3001			MOVLW	1
$03C0	$00A5			MOVWF	LCD_cmd_status
$03C1	$0008			RETURN
$0400	$	_LCD_Out:
$0400	$2C12			GOTO	L_LCD_Out_17
$0401	$	L_LCD_Out_19:
$0401	$3080			MOVLW	128
$0402	$1303			BCF	STATUS, RP1
$0403	$1283			BCF	STATUS, RP0
$0404	$00E5			MOVWF	FARG_LCD_Out+0
$0405	$2C25			GOTO	L_LCD_Out_18
$0406	$	L_LCD_Out_20:
$0406	$30C0			MOVLW	192
$0407	$00E5			MOVWF	FARG_LCD_Out+0
$0408	$2C25			GOTO	L_LCD_Out_18
$0409	$	L_LCD_Out_21:
$0409	$3094			MOVLW	148
$040A	$00E5			MOVWF	FARG_LCD_Out+0
$040B	$2C25			GOTO	L_LCD_Out_18
$040C	$	L_LCD_Out_22:
$040C	$30D4			MOVLW	212
$040D	$00E5			MOVWF	FARG_LCD_Out+0
$040E	$2C25			GOTO	L_LCD_Out_18
$040F	$	L_LCD_Out_23:
$040F	$3080			MOVLW	128
$0410	$00E5			MOVWF	FARG_LCD_Out+0
$0411	$2C25			GOTO	L_LCD_Out_18
$0412	$	L_LCD_Out_17:
$0412	$1303			BCF	STATUS, RP1
$0413	$1283			BCF	STATUS, RP0
$0414	$0865			MOVF	FARG_LCD_Out+0, 0
$0415	$3A01			XORLW	1
$0416	$1903			BTFSC	STATUS, Z
$0417	$2C01			GOTO	L_LCD_Out_19
$0418	$0865			MOVF	FARG_LCD_Out+0, 0
$0419	$3A02			XORLW	2
$041A	$1903			BTFSC	STATUS, Z
$041B	$2C06			GOTO	L_LCD_Out_20
$041C	$0865			MOVF	FARG_LCD_Out+0, 0
$041D	$3A03			XORLW	3
$041E	$1903			BTFSC	STATUS, Z
$041F	$2C09			GOTO	L_LCD_Out_21
$0420	$0865			MOVF	FARG_LCD_Out+0, 0
$0421	$3A04			XORLW	4
$0422	$1903			BTFSC	STATUS, Z
$0423	$2C0C			GOTO	L_LCD_Out_22
$0424	$2C0F			GOTO	L_LCD_Out_23
$0425	$	L_LCD_Out_18:
$0425	$0366			DECF	FARG_LCD_Out+1, 0
$0426	$00F0			MOVWF	STACK_0
$0427	$0865			MOVF	FARG_LCD_Out+0, 0
$0428	$07F0			ADDWF	STACK_0, 1
$0429	$0870			MOVF	STACK_0, 0
$042A	$00E5			MOVWF	FARG_LCD_Out+0
$042B	$0870			MOVF	STACK_0, 0
$042C	$00EA			MOVWF	FARG_Lcd_Cmd+0
$042D	$23C2			CALL	_Lcd_Cmd
$042E	$01A5			CLRF	LCD_cmd_status, 1
$042F	$01E8			CLRF	LCD_Out_i_L0, 1
$0430	$	L_LCD_Out_24:
$0430	$0868			MOVF	LCD_Out_i_L0, 0
$0431	$0767			ADDWF	FARG_LCD_Out+2, 0
$0432	$0084			MOVWF	FSR
$0433	$0800			MOVF	INDF, 0
$0434	$00F0			MOVWF	STACK_0
$0435	$0870			MOVF	STACK_0, 0
$0436	$1903			BTFSC	STATUS, Z
$0437	$2C40			GOTO	L_LCD_Out_25
$0438	$0868			MOVF	LCD_Out_i_L0, 0
$0439	$0767			ADDWF	FARG_LCD_Out+2, 0
$043A	$0084			MOVWF	FSR
$043B	$0800			MOVF	INDF, 0
$043C	$00E9			MOVWF	FARG_Lcd_Chr_CP+0
$043D	$24E3			CALL	_Lcd_Chr_CP
$043E	$0AE8			INCF	LCD_Out_i_L0, 1
$043F	$2C30			GOTO	L_LCD_Out_24
$0440	$	L_LCD_Out_25:
$0440	$3001			MOVLW	1
$0441	$00A5			MOVWF	LCD_cmd_status
$0442	$0008			RETURN
$0161	$	_main:
$0161	$303C			MOVLW	60
$0162	$1303			BCF	STATUS, RP1
$0163	$1283			BCF	STATUS, RP0
$0164	$00B8			MOVWF	lstr1_IntTest+0
$0165	$303C			MOVLW	60
$0166	$00B9			MOVWF	lstr1_IntTest+1
$0167	$3020			MOVLW	32
$0168	$00BA			MOVWF	lstr1_IntTest+2
$0169	$3052			MOVLW	82
$016A	$00BB			MOVWF	lstr1_IntTest+3
$016B	$3041			MOVLW	65
$016C	$00BC			MOVWF	lstr1_IntTest+4
$016D	$3034			MOVLW	52
$016E	$00BD			MOVWF	lstr1_IntTest+5
$016F	$3020			MOVLW	32
$0170	$00BE			MOVWF	lstr1_IntTest+6
$0171	$303E			MOVLW	62
$0172	$00BF			MOVWF	lstr1_IntTest+7
$0173	$303E			MOVLW	62
$0174	$00C0			MOVWF	lstr1_IntTest+8
$0175	$3020			MOVLW	32
$0176	$00C1			MOVWF	lstr1_IntTest+9
$0177	$3053			MOVLW	83
$0178	$00C2			MOVWF	lstr1_IntTest+10
$0179	$3074			MOVLW	116
$017A	$00C3			MOVWF	lstr1_IntTest+11
$017B	$3061			MOVLW	97
$017C	$00C4			MOVWF	lstr1_IntTest+12
$017D	$3072			MOVLW	114
$017E	$00C5			MOVWF	lstr1_IntTest+13
$017F	$3074			MOVLW	116
$0180	$00C6			MOVWF	lstr1_IntTest+14
$0181	$01C7			CLRF	lstr1_IntTest+15
$0182	$3054			MOVLW	84
$0183	$00C8			MOVWF	lstr2_IntTest+0
$0184	$3065			MOVLW	101
$0185	$00C9			MOVWF	lstr2_IntTest+1
$0186	$3073			MOVLW	115
$0187	$00CA			MOVWF	lstr2_IntTest+2
$0188	$3074			MOVLW	116
$0189	$00CB			MOVWF	lstr2_IntTest+3
$018A	$3020			MOVLW	32
$018B	$00CC			MOVWF	lstr2_IntTest+4
$018C	$3049			MOVLW	73
$018D	$00CD			MOVWF	lstr2_IntTest+5
$018E	$306E			MOVLW	110
$018F	$00CE			MOVWF	lstr2_IntTest+6
$0190	$3074			MOVLW	116
$0191	$00CF			MOVWF	lstr2_IntTest+7
$0192	$3065			MOVLW	101
$0193	$00D0			MOVWF	lstr2_IntTest+8
$0194	$3072			MOVLW	114
$0195	$00D1			MOVWF	lstr2_IntTest+9
$0196	$3072			MOVLW	114
$0197	$00D2			MOVWF	lstr2_IntTest+10
$0198	$3075			MOVLW	117
$0199	$00D3			MOVWF	lstr2_IntTest+11
$019A	$3070			MOVLW	112
$019B	$00D4			MOVWF	lstr2_IntTest+12
$019C	$3074			MOVLW	116
$019D	$00D5			MOVWF	lstr2_IntTest+13
$019E	$01D6			CLRF	lstr2_IntTest+14
$019F	$3053			MOVLW	83
$01A0	$00D7			MOVWF	lstr3_IntTest+0
$01A1	$3074			MOVLW	116
$01A2	$00D8			MOVWF	lstr3_IntTest+1
$01A3	$3061			MOVLW	97
$01A4	$00D9			MOVWF	lstr3_IntTest+2
$01A5	$3072			MOVLW	114
$01A6	$00DA			MOVWF	lstr3_IntTest+3
$01A7	$3074			MOVLW	116
$01A8	$00DB			MOVWF	lstr3_IntTest+4
$01A9	$3020			MOVLW	32
$01AA	$00DC			MOVWF	lstr3_IntTest+5
$01AB	$3050			MOVLW	80
$01AC	$00DD			MOVWF	lstr3_IntTest+6
$01AD	$3072			MOVLW	114
$01AE	$00DE			MOVWF	lstr3_IntTest+7
$01AF	$306F			MOVLW	111
$01B0	$00DF			MOVWF	lstr3_IntTest+8
$01B1	$3067			MOVLW	103
$01B2	$00E0			MOVWF	lstr3_IntTest+9
$01B3	$3072			MOVLW	114
$01B4	$00E1			MOVWF	lstr3_IntTest+10
$01B5	$3061			MOVLW	97
$01B6	$00E2			MOVWF	lstr3_IntTest+11
$01B7	$306D			MOVLW	109
$01B8	$00E3			MOVWF	lstr3_IntTest+12
$01B9	$01E4			CLRF	lstr3_IntTest+13
;IntTest.c,6 :: 		void main()
;IntTest.c,9 :: 		ANSELH.F4=0;                            // RB0 ==> Digital IO
$01BA	$1703			BSF	STATUS, RP1
$01BB	$1683			BSF	STATUS, RP0
$01BC	$1209			BCF	ANSELH, 4
;IntTest.c,10 :: 		OPTION_REG.INTEDG = 0;                  // INT falling edge
$01BD	$1303			BCF	STATUS, RP1
$01BE	$1301			BCF	OPTION_REG, 6
;IntTest.c,11 :: 		INTCON.INTE =1;                         // Enable INT/PB0
$01BF	$160B			BSF	INTCON, 4
;IntTest.c,12 :: 		INTCON.GIE =1;                          // Enable Global interrupt
$01C0	$178B			BSF	INTCON, 7
;IntTest.c,14 :: 		TRISB.F3=0;
$01C1	$1186			BCF	TRISB, 3
;IntTest.c,15 :: 		Sound_Init(&PORTC,0);                   // Init Sound ==> RC0
$01C2	$3007			MOVLW	PORTC
$01C3	$1283			BCF	STATUS, RP0
$01C4	$00E5			MOVWF	FARG_Sound_Init+0
$01C5	$01E6			CLRF	FARG_Sound_Init+1, 1
$01C6	$2497			CALL	_Sound_Init
;IntTest.c,16 :: 		Lcd_Init(&PORTD);                       // Init LCD PORT D
$01C7	$3008			MOVLW	PORTD
$01C8	$00E5			MOVWF	FARG_Lcd_Init+0
$01C9	$2376			CALL	_Lcd_Init
;IntTest.c,17 :: 		Lcd_Cmd(LCD_CURSOR_OFF);                // LCD cursor off
$01CA	$300C			MOVLW	12
$01CB	$00EA			MOVWF	FARG_Lcd_Cmd+0
$01CC	$23C2			CALL	_Lcd_Cmd
;IntTest.c,18 :: 		Lcd_Cmd(LCD_CLEAR);
$01CD	$3001			MOVLW	1
$01CE	$00EA			MOVWF	FARG_Lcd_Cmd+0
$01CF	$23C2			CALL	_Lcd_Cmd
;IntTest.c,19 :: 		Lcd_Out(1,1, "<< RA4 >> Start");
$01D0	$3001			MOVLW	1
$01D1	$00E5			MOVWF	FARG_LCD_Out+0
$01D2	$3001			MOVLW	1
$01D3	$00E6			MOVWF	FARG_LCD_Out+1
$01D4	$3038			MOVLW	lstr1_IntTest
$01D5	$00E7			MOVWF	FARG_LCD_Out+2
$01D6	$2400			CALL	_LCD_Out
;IntTest.c,20 :: 		Lcd_Out(2,1,"Test Interrupt");
$01D7	$3002			MOVLW	2
$01D8	$00E5			MOVWF	FARG_LCD_Out+0
$01D9	$3001			MOVLW	1
$01DA	$00E6			MOVWF	FARG_LCD_Out+1
$01DB	$3048			MOVLW	lstr2_IntTest
$01DC	$00E7			MOVWF	FARG_LCD_Out+2
$01DD	$2400			CALL	_LCD_Out
;IntTest.c,21 :: 		while(PORTA.F4==1);                     // Start Program when Press RA4
$01DE	$	L_main_0:
$01DE	$3000			MOVLW	0
$01DF	$1A05			BTFSC	PORTA, 4
$01E0	$3001			MOVLW	1
$01E1	$00F1			MOVWF	STACK_1
$01E2	$0871			MOVF	STACK_1, 0
$01E3	$3A01			XORLW	1
$01E4	$1903			BTFSC	STATUS, Z
$01E5	$29DE			GOTO	L_main_0
$01E6	$	L_main_1:
;IntTest.c,23 :: 		Lcd_Cmd(LCD_CLEAR);
$01E6	$3001			MOVLW	1
$01E7	$00EA			MOVWF	FARG_Lcd_Cmd+0
$01E8	$23C2			CALL	_Lcd_Cmd
;IntTest.c,24 :: 		Lcd_Out(1,1, "Start Program");          // Main Program
$01E9	$3001			MOVLW	1
$01EA	$00E5			MOVWF	FARG_LCD_Out+0
$01EB	$3001			MOVLW	1
$01EC	$00E6			MOVWF	FARG_LCD_Out+1
$01ED	$3057			MOVLW	lstr3_IntTest
$01EE	$00E7			MOVWF	FARG_LCD_Out+2
$01EF	$2400			CALL	_LCD_Out
;IntTest.c,25 :: 		while(1)
$01F0	$	L_main_2:
;IntTest.c,27 :: 		PORTB.F3=1;                        // Blinking LED
$01F0	$1586			BSF	PORTB, 3
;IntTest.c,28 :: 		Delay_ms(500);
$01F1	$300D			MOVLW	13
$01F2	$00FC			MOVWF	STACK_12
$01F3	$30FF			MOVLW	255
$01F4	$00FB			MOVWF	STACK_11
$01F5	$30FF			MOVLW	255
$01F6	$00FA			MOVWF	STACK_10
$01F7	$0BFC			DECFSZ	STACK_12, F
$01F8	$29FA			GOTO	$+2
$01F9	$2A01			GOTO	$+8
$01FA	$0BFB			DECFSZ	STACK_11, F
$01FB	$29FD			GOTO	$+2
$01FC	$2A00			GOTO	$+4
$01FD	$0BFA			DECFSZ	STACK_10, F
$01FE	$29FD			GOTO	$-1
$01FF	$29FA			GOTO	$-5
$0200	$29F7			GOTO	$-9
$0201	$30BF			MOVLW	191
$0202	$00FB			MOVWF	STACK_11
$0203	$30FF			MOVLW	255
$0204	$00FA			MOVWF	STACK_10
$0205	$0BFB			DECFSZ	STACK_11, F
$0206	$2A08			GOTO	$+2
$0207	$2A0B			GOTO	$+4
$0208	$0BFA			DECFSZ	STACK_10, F
$0209	$2A08			GOTO	$-1
$020A	$2A05			GOTO	$-5
$020B	$302B			MOVLW	43
$020C	$00FA			MOVWF	STACK_10
$020D	$0BFA			DECFSZ	STACK_10, F
$020E	$2A0D			GOTO	$-1
$020F	$0000			NOP
$0210	$0000			NOP
$0211	$0000			NOP
;IntTest.c,29 :: 		PORTB.F3=0;
$0212	$1186			BCF	PORTB, 3
;IntTest.c,30 :: 		Delay_ms(500);
$0213	$300D			MOVLW	13
$0214	$00FC			MOVWF	STACK_12
$0215	$30FF			MOVLW	255
$0216	$00FB			MOVWF	STACK_11
$0217	$30FF			MOVLW	255
$0218	$00FA			MOVWF	STACK_10
$0219	$0BFC			DECFSZ	STACK_12, F
$021A	$2A1C			GOTO	$+2
$021B	$2A23			GOTO	$+8
$021C	$0BFB			DECFSZ	STACK_11, F
$021D	$2A1F			GOTO	$+2
$021E	$2A22			GOTO	$+4
$021F	$0BFA			DECFSZ	STACK_10, F
$0220	$2A1F			GOTO	$-1
$0221	$2A1C			GOTO	$-5
$0222	$2A19			GOTO	$-9
$0223	$30BF			MOVLW	191
$0224	$00FB			MOVWF	STACK_11
$0225	$30FF			MOVLW	255
$0226	$00FA			MOVWF	STACK_10
$0227	$0BFB			DECFSZ	STACK_11, F
$0228	$2A2A			GOTO	$+2
$0229	$2A2D			GOTO	$+4
$022A	$0BFA			DECFSZ	STACK_10, F
$022B	$2A2A			GOTO	$-1
$022C	$2A27			GOTO	$-5
$022D	$302B			MOVLW	43
$022E	$00FA			MOVWF	STACK_10
$022F	$0BFA			DECFSZ	STACK_10, F
$0230	$2A2F			GOTO	$-1
$0231	$0000			NOP
$0232	$0000			NOP
$0233	$0000			NOP
;IntTest.c,31 :: 		}
$0234	$29F0			GOTO	L_main_2
;IntTest.c,32 :: 		}
$0235	$2A35			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		interrupt
$0033		SDIV3232L
$0161		main
$0236		Sound_Play
$02DC		Div_32x32_S
$0376		Lcd_Init
$03C2		Lcd_Cmd
$0400		LCD_Out
$0443		Mul_32x32_U
$047A		Div_16x16_U
$0497		Sound_Init
$04B3		Delay_Cyc
$04C4		Delay_5500us
$04D5		COMFREM
$04E3		Lcd_Chr_CP
$04EC		Get_Fosc_kHz
$04F5		Delay_1us
$04FD		Delay_50us


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_interrupt:
$0020		L_Interrupt_end:
$0033		_SDIV3232L:
$0046		LOOPS3232A:
$005C		SADD22LA:
$0069		SOK22LA:
$0082		SADD22L8:
$008F		SOK22L8:
$0092		LOOPS3232B:
$00A8		SADD22LB:
$00B5		SOK22LB:
$00CE		SADD22L16:
$00DB		SOK22L16:
$00DE		LOOPS3232C:
$00F4		SADD22LC:
$0101		SOK22LC:
$011A		SADD22L24:
$0127		SOK22L24:
$012A		LOOPS3232D:
$0140		SADD22LD:
$014D		SOK22LD:
$0160		SOK22L:
$0161		_main:
$01DE		L_main_0:
$01E6		L_main_1:
$01F0		L_main_2:
$0236		_Sound_Play:
$0258		L_Sound_Play_5:
$0261		L_Sound_Play_6:
$027E		L_Sound_Play_7:
$0287		L_Sound_Play_8:
$02B3		L_Sound_Play_9:
$02B6		L_Sound_Play_0:
$02B8		L_Sound_Play_1:
$02D9		L_Sound_Play_2:
$02DC		_Div_32x32_S:
$02DE		FXD3232S:
$02FE		CA3232S:
$030B		C3232SX:
$0310		C3232S:
$0311		C3232S2:
$0313		C3232SOK:
$032C		C3232SX1:
$033D		C3232SX2:
$0343		C3232SX3:
$0349		C3232SX4:
$0370		END_ALL:
$0374		avoid_comfrem:
$0376		_Lcd_Init:
$03C2		_Lcd_Cmd:
$03C9		L_Lcd_Cmd_0:
$03DC		L_Lcd_Cmd_1:
$03DD		L_Lcd_Cmd_2:
$03E2		L_Lcd_Cmd_3:
$03F5		L_Lcd_Cmd_4:
$03F6		L_Lcd_Cmd_5:
$03FE		L_Lcd_Cmd_6:
$03FF		L_Lcd_Cmd_7:
$0400		_LCD_Out:
$0401		L_LCD_Out_19:
$0406		L_LCD_Out_20:
$0409		L_LCD_Out_21:
$040C		L_LCD_Out_22:
$040F		L_LCD_Out_23:
$0412		L_LCD_Out_17:
$0425		L_LCD_Out_18:
$0430		L_LCD_Out_24:
$0440		L_LCD_Out_25:
$0443		_Mul_32x32_U:
$044B		_NEXT:
$044F		_LOOP:
$046B		_EXIT1:
$0479		_EXIT2:
$047A		_Div_16x16_U:
$0497		_Sound_Init:
$04A0		L_Sound_Init_3:
$04A6		L_Sound_Init_4:
$04B3		_Delay_Cyc:
$04B7		L_Delay_Cyc_0:
$04C0		L_Delay_Cyc_1:
$04C4		_Delay_5500us:
$04D5		_COMFREM:
$04E3		_Lcd_Chr_CP:
$04EC		_Get_Fosc_kHz:
$04F5		_Delay_1us:
$04FD		_Delay_50us:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0007		PORTC
$0008		PORTD
$000A		PCLATH
$000B		INTCON
$0020		___math_tempb
$0021		Sound_soundPortAddr
$0022		Sound_pinMask1
$0023		Sound_pinMask0
$0024		LCD_port_address
$0025		LCD_cmd_status
$0026		?saveFSR
$0027		?saveSTATUS
$0028		?savePCLATH
$0029		FARG_Sound_Play+0
$002B		FARG_Sound_Play+2
$002D		Sound_Play_nc_L0
$002F		Sound_Play_per_nc_L0
$0033		
$0037		FARG_Delay_Cyc+0
$0038		lstr1_IntTest
$0048		lstr2_IntTest
$0057		lstr3_IntTest
$0065		FARG_Lcd_Init+0
$0065		FARG_LCD_Out+0
$0065		FARG_Sound_Init+0
$0066		FARG_LCD_Out+1
$0066		FARG_Sound_Init+1
$0067		FARG_LCD_Out+2
$0068		LCD_Out_i_L0
$0069		FARG_Lcd_Chr_CP+0
$006A		FARG_Lcd_Cmd+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0081		OPTION_REG
$0086		TRISB
$0189		ANSELH


