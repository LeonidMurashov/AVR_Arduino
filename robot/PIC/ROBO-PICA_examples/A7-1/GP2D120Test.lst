;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 4/6/2008 14:46:41
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2A00			GOTO	_main
$08B1	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,8 :: 		Delay_us(1);
$08B1	$3001			MOVLW	1
$08B2	$1303			BCF	STATUS, RP1
$08B3	$1283			BCF	STATUS, RP0
$08B4	$00FA			MOVWF	STACK_10
$08B5	$0BFA			DECFSZ	STACK_10, F
$08B6	$28B5			GOTO	$-1
$08B7	$0000			NOP
;delays.c,9 :: 		}
$08B8	$0008			RETURN
$0729	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$0729	$3024			MOVLW	36
$072A	$1303			BCF	STATUS, RP1
$072B	$1283			BCF	STATUS, RP0
$072C	$00FB			MOVWF	STACK_11
$072D	$30FF			MOVLW	255
$072E	$00FA			MOVWF	STACK_10
$072F	$0BFB			DECFSZ	STACK_11, F
$0730	$2F32			GOTO	$+2
$0731	$2F35			GOTO	$+4
$0732	$0BFA			DECFSZ	STACK_10, F
$0733	$2F32			GOTO	$-1
$0734	$2F2F			GOTO	$-5
$0735	$309E			MOVLW	158
$0736	$00FA			MOVWF	STACK_10
$0737	$0BFA			DECFSZ	STACK_10, F
$0738	$2F37			GOTO	$-1
;delays.c,33 :: 		}
$0739	$0008			RETURN
$073A	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$073A	$3053			MOVLW	83
$073B	$1303			BCF	STATUS, RP1
$073C	$1283			BCF	STATUS, RP0
$073D	$00FA			MOVWF	STACK_10
$073E	$0BFA			DECFSZ	STACK_10, F
$073F	$2F3E			GOTO	$-1
;delays.c,21 :: 		}
$0740	$0008			RETURN
$08A8	$	_RES032:
$08A8	$1303			BCF	STATUS, RP1
$08A9	$1283			BCF	STATUS, RP0
$08AA	$01F2			CLRF	STACK_2
$08AB	$01F1			CLRF	STACK_1
$08AC	$01F0			CLRF	STACK_0
$08AD	$01F8			CLRF	STACK_8
$08AE	$01F3			CLRF	STACK_3
$08AF	$3000			MOVLW	0
$08B0	$0008			RETURN
$0887	$	_SETFUN32:
$0887	$1303			BCF	STATUS, RP1
$0888	$1283			BCF	STATUS, RP0
$0889	$157B			BSF	STACK_11, 2
$088A	$1FFB			BTFSS	STACK_11, 7
$088B	$2893			GOTO	SETFUN32EEE
$088C	$3001			MOVLW	0x01
$088D	$00F3			MOVWF	STACK_3
$088E	$01F2			CLRF	STACK_2
$088F	$01F1			CLRF	STACK_1
$0890	$01F0			CLRF	STACK_0
$0891	$0DFA			RLF	STACK_10, F
$0892	$0CF2			RRF	STACK_2, F
$0893	$	SETFUN32EEE:
$0893	$30FF			MOVLW	0xFF
$0894	$0008			RETURN
$08B9	$	_FIXSIGN32:
$08B9	$1303			BCF	STATUS, RP1
$08BA	$1283			BCF	STATUS, RP0
$08BB	$1FFA			BTFSS	STACK_10, 7
$08BC	$13F2			BCF	STACK_2, 7
$08BD	$3000			MOVLW	0
$08BE	$0008			RETURN
$0879	$	_SETFOV32:
$0879	$1303			BCF	STATUS, RP1
$087A	$1283			BCF	STATUS, RP0
$087B	$14FB			BSF	STACK_11, 1
$087C	$1FFB			BTFSS	STACK_11, 7
$087D	$2885			GOTO	SETFOV32EEE
$087E	$30FF			MOVLW	0xFF
$087F	$00F3			MOVWF	STACK_3
$0880	$00F2			MOVWF	STACK_2
$0881	$00F1			MOVWF	STACK_1
$0882	$00F0			MOVWF	STACK_0
$0883	$0DFA			RLF	STACK_10, F
$0884	$0CF2			RRF	STACK_2, F
$0885	$	SETFOV32EEE:
$0885	$30FF			MOVLW	0xFF
$0886	$0008			RETURN
$0638	$	_Lcd_Cmd:
$0638	$1303			BCF	STATUS, RP1
$0639	$1283			BCF	STATUS, RP0
$063A	$0821			MOVF	LCD_port_address, 0
$063B	$0084			MOVWF	FSR
$063C	$0867			MOVF	FARG_Lcd_Cmd+0, 0
$063D	$1903			BTFSC	STATUS, Z
$063E	$2E3F			GOTO	L_Lcd_Cmd_0
$063F	$	L_Lcd_Cmd_0:
$063F	$1180			BCF	INDF, ___ENABLE
$0640	$1100			BCF	INDF, ___RS
$0641	$1380			BCF	INDF, ___DB7
$0642	$1300			BCF	INDF, ___DB6
$0643	$1280			BCF	INDF, ___DB5
$0644	$1200			BCF	INDF, ___DB4
$0645	$1BE7			BTFSC	FARG_Lcd_Cmd+0, 7
$0646	$1780			BSF	INDF, ___DB7
$0647	$1B67			BTFSC	FARG_Lcd_Cmd+0, 6
$0648	$1700			BSF	INDF, ___DB6
$0649	$1AE7			BTFSC	FARG_Lcd_Cmd+0, 5
$064A	$1680			BSF	INDF, ___DB5
$064B	$1A67			BTFSC	FARG_Lcd_Cmd+0, 4
$064C	$1600			BSF	INDF, ___DB4
$064D	$0822			MOVF	LCD_cmd_status, 0
$064E	$1903			BTFSC	STATUS, Z
$064F	$2E52			GOTO	L_Lcd_Cmd_1
$0650	$1100			BCF	INDF, ___RS
$0651	$2E53			GOTO	L_Lcd_Cmd_2
$0652	$	L_Lcd_Cmd_1:
$0652	$1500			BSF	INDF, ___RS
$0653	$	L_Lcd_Cmd_2:
$0653	$1580			BSF	INDF, ___ENABLE
$0654	$158A			BSF	PCLATH, 3
$0655	$20B1			CALL	_Delay_1us
$0656	$118A			BCF	PCLATH, 3
$0657	$0867			MOVF	FARG_Lcd_Cmd+0, 0
$0658	$1903			BTFSC	STATUS, Z
$0659	$2E5A			GOTO	L_Lcd_Cmd_3
$065A	$	L_Lcd_Cmd_3:
$065A	$1180			BCF	INDF, ___ENABLE
$065B	$1100			BCF	INDF, ___RS
$065C	$1380			BCF	INDF, ___DB7
$065D	$1300			BCF	INDF, ___DB6
$065E	$1280			BCF	INDF, ___DB5
$065F	$1200			BCF	INDF, ___DB4
$0660	$19E7			BTFSC	FARG_Lcd_Cmd+0, 3
$0661	$1780			BSF	INDF, ___DB7
$0662	$1967			BTFSC	FARG_Lcd_Cmd+0, 2
$0663	$1700			BSF	INDF, ___DB6
$0664	$18E7			BTFSC	FARG_Lcd_Cmd+0, 1
$0665	$1680			BSF	INDF, ___DB5
$0666	$1867			BTFSC	FARG_Lcd_Cmd+0, 0
$0667	$1600			BSF	INDF, ___DB4
$0668	$0822			MOVF	LCD_cmd_status, 0
$0669	$1903			BTFSC	STATUS, Z
$066A	$2E6D			GOTO	L_Lcd_Cmd_4
$066B	$1100			BCF	INDF, ___RS
$066C	$2E6E			GOTO	L_Lcd_Cmd_5
$066D	$	L_Lcd_Cmd_4:
$066D	$1500			BSF	INDF, ___RS
$066E	$	L_Lcd_Cmd_5:
$066E	$1580			BSF	INDF, ___ENABLE
$066F	$158A			BSF	PCLATH, 3
$0670	$20B1			CALL	_Delay_1us
$0671	$118A			BCF	PCLATH, 3
$0672	$1180			BCF	INDF, ___ENABLE
$0673	$0822			MOVF	LCD_cmd_status, 0
$0674	$1903			BTFSC	STATUS, Z
$0675	$2E78			GOTO	L_Lcd_Cmd_6
$0676	$2729			CALL	_Delay_5500us
$0677	$2E79			GOTO	L_Lcd_Cmd_7
$0678	$	L_Lcd_Cmd_6:
$0678	$273A			CALL	_Delay_50us
$0679	$	L_Lcd_Cmd_7:
$0679	$0008			RETURN
$052B	$	_NRM4032:
$052B	$1303			BCF	STATUS, RP1
$052C	$1283			BCF	STATUS, RP0
$052D	$187C			BTFSC	STACK_12, 0
$052E	$2D63			GOTO	NRMRND4032
$052F	$18FC			BTFSC	STACK_12, 1
$0530	$2D34			GOTO	NRM4032
$0531	$197C			BTFSC	STACK_12, 2
$0532	$2D88			GOTO	JMPSETFOV32
$0533	$2D2D			GOTO	$-6
$0534	$	NRM4032:
$0534	$01A0			CLRF	__math_tempbD
$0535	$0872			MOVF	STACK_2, W
$0536	$1D03			BTFSS	STATUS, Z
$0537	$2D54			GOTO	NORM4032
$0538	$0871			MOVF	STACK_1, W
$0539	$00F2			MOVWF	STACK_2
$053A	$0870			MOVF	STACK_0, W
$053B	$00F1			MOVWF	STACK_1
$053C	$0878			MOVF	STACK_8, W
$053D	$00F0			MOVWF	STACK_0
$053E	$01F8			CLRF	STACK_8
$053F	$15A0			BSF	__math_tempbD, 3
$0540	$0872			MOVF	STACK_2, W
$0541	$1D03			BTFSS	STATUS, Z
$0542	$2D54			GOTO	NORM4032
$0543	$0871			MOVF	STACK_1, W
$0544	$00F2			MOVWF	STACK_2
$0545	$0870			MOVF	STACK_0, W
$0546	$00F1			MOVWF	STACK_1
$0547	$01F0			CLRF	STACK_0
$0548	$11A0			BCF	__math_tempbD, 3
$0549	$1620			BSF	__math_tempbD, 4
$054A	$0872			MOVF	STACK_2, W
$054B	$1D03			BTFSS	STATUS, Z
$054C	$2D54			GOTO	NORM4032
$054D	$0871			MOVF	STACK_1, W
$054E	$00F2			MOVWF	STACK_2
$054F	$01F1			CLRF	STACK_1
$0550	$15A0			BSF	__math_tempbD, 3
$0551	$0872			MOVF	STACK_2, W
$0552	$1903			BTFSC	STATUS, Z
$0553	$2D76			GOTO	JMPRES032
$0554	$	NORM4032:
$0554	$0820			MOVF	__math_tempbD, W
$0555	$02F3			SUBWF	STACK_3, F
$0556	$1D03			BTFSS	STATUS, Z
$0557	$1C03			BTFSS	STATUS, C
$0558	$2D7C			GOTO	JMPSETFUN32
$0559	$1003			BCF	STATUS, C
$055A	$	NORM4032A:
$055A	$1BF2			BTFSC	STACK_2, 7
$055B	$2D63			GOTO	NRMRND4032
$055C	$0DF8			RLF	STACK_8, F
$055D	$0DF0			RLF	STACK_0, F
$055E	$0DF1			RLF	STACK_1, F
$055F	$0DF2			RLF	STACK_2, F
$0560	$0BF3			DECFSZ	STACK_3, F
$0561	$2D5A			GOTO	NORM4032A
$0562	$2D7C			GOTO	JMPSETFUN32
$0563	$	NRMRND4032:
$0563	$1B7B			BTFSC	STACK_11, 6
$0564	$1C70			BTFSS	STACK_0, 0
$0565	$2D82			GOTO	JMPFIXSIGN32
$0566	$1FF8			BTFSS	STACK_8, 7
$0567	$2D82			GOTO	JMPFIXSIGN32
$0568	$0AF0			INCF	STACK_0, F
$0569	$1903			BTFSC	STATUS, Z
$056A	$0AF1			INCF	STACK_1, F
$056B	$1903			BTFSC	STATUS, Z
$056C	$0AF2			INCF	STACK_2, F
$056D	$1D03			BTFSS	STATUS, Z
$056E	$2D82			GOTO	JMPFIXSIGN32
$056F	$0CF2			RRF	STACK_2, F
$0570	$0CF1			RRF	STACK_1, F
$0571	$0CF0			RRF	STACK_0, F
$0572	$0AF3			INCF	STACK_3, F
$0573	$1903			BTFSC	STATUS, Z
$0574	$2D88			GOTO	JMPSETFOV32
$0575	$2D82			GOTO	JMPFIXSIGN32
$0576	$	JMPRES032:
$0576	$3001			MOVLW	0x01
$0577	$00FC			MOVWF	STACK_12
$0578	$158A			BSF	PCLATH, 3
$0579	$20A8			CALL	_RES032
$057A	$118A			BCF	PCLATH, 3
$057B	$2D8D			GOTO	NRM4032EEE
$057C	$	JMPSETFUN32:
$057C	$3002			MOVLW	0x02
$057D	$00FC			MOVWF	STACK_12
$057E	$158A			BSF	PCLATH, 3
$057F	$2087			CALL	_SETFUN32
$0580	$118A			BCF	PCLATH, 3
$0581	$2D8D			GOTO	NRM4032EEE
$0582	$	JMPFIXSIGN32:
$0582	$3004			MOVLW	0x04
$0583	$00FC			MOVWF	STACK_12
$0584	$158A			BSF	PCLATH, 3
$0585	$20B9			CALL	_FIXSIGN32
$0586	$118A			BCF	PCLATH, 3
$0587	$2D8D			GOTO	NRM4032EEE
$0588	$	JMPSETFOV32:
$0588	$3008			MOVLW	0x08
$0589	$00FC			MOVWF	STACK_12
$058A	$158A			BSF	PCLATH, 3
$058B	$2079			CALL	_SETFOV32
$058C	$118A			BCF	PCLATH, 3
$058D	$	NRM4032EEE:
$058D	$0000			NOP
$058E	$0008			RETURN
$0800	$	_NRM3232:
$0800	$1303			BCF	STATUS, RP1
$0801	$1283			BCF	STATUS, RP0
$0802	$01A0			CLRF	__math_tempbD
$0803	$0872			MOVF	STACK_2, W
$0804	$1D03			BTFSS	STATUS, Z
$0805	$2817			GOTO	NORM3232
$0806	$0871			MOVF	STACK_1, W
$0807	$00F2			MOVWF	STACK_2
$0808	$0870			MOVF	STACK_0, W
$0809	$00F1			MOVWF	STACK_1
$080A	$01F0			CLRF	STACK_0
$080B	$15A0			BSF	__math_tempbD, 3
$080C	$0872			MOVF	STACK_2, W
$080D	$1D03			BTFSS	STATUS, Z
$080E	$2817			GOTO	NORM3232
$080F	$0871			MOVF	STACK_1, W
$0810	$00F2			MOVWF	STACK_2
$0811	$01F1			CLRF	STACK_1
$0812	$11A0			BCF	__math_tempbD, 3
$0813	$1620			BSF	__math_tempbD, 4
$0814	$0872			MOVF	STACK_2, W
$0815	$1903			BTFSC	STATUS, Z
$0816	$2825			GOTO	JPNRES032
$0817	$	NORM3232:
$0817	$0820			MOVF	__math_tempbD, W
$0818	$02F3			SUBWF	STACK_3, F
$0819	$1D03			BTFSS	STATUS, Z
$081A	$1C03			BTFSS	STATUS, C
$081B	$2829			GOTO	JPNSETFUN32
$081C	$1003			BCF	STATUS, C
$081D	$	NORM3232A:
$081D	$1BF2			BTFSC	STACK_2, 7
$081E	$282D			GOTO	JMPNFIXSIGN32
$081F	$0DF0			RLF	STACK_0, F
$0820	$0DF1			RLF	STACK_1, F
$0821	$0DF2			RLF	STACK_2, F
$0822	$0BF3			DECFSZ	STACK_3, F
$0823	$281D			GOTO	NORM3232A
$0824	$2829			GOTO	JPNSETFUN32
$0825	$	JPNRES032:
$0825	$3001			MOVLW	0x01
$0826	$00FC			MOVWF	STACK_12
$0827	$20A8			CALL	_RES032
$0828	$2830			GOTO	NORM32EEE
$0829	$	JPNSETFUN32:
$0829	$3002			MOVLW	0x02
$082A	$00FC			MOVWF	STACK_12
$082B	$2087			CALL	_SETFUN32
$082C	$2830			GOTO	NORM32EEE
$082D	$	JMPNFIXSIGN32:
$082D	$3004			MOVLW	0x04
$082E	$00FC			MOVWF	STACK_12
$082F	$20B9			CALL	_FIXSIGN32
$0830	$	NORM32EEE:
$0830	$0008			RETURN
$0831	$	_Div_16x16_U:
$0831	$1303			BCF	STATUS, RP1
$0832	$1283			BCF	STATUS, RP0
$0833	$01F8			CLRF	STACK_8
$0834	$01F9			CLRF	STACK_9
$0835	$3010			MOVLW	16
$0836	$00FC			MOVWF	STACK_12
$0837	$0D71			RLF	STACK_1, W
$0838	$0DF8			RLF	STACK_8, F
$0839	$0DF9			RLF	STACK_9, F
$083A	$0874			MOVF	STACK_4, W
$083B	$02F8			SUBWF	STACK_8, F
$083C	$0875			MOVF	STACK_5, W
$083D	$1C03			BTFSS	STATUS, C
$083E	$0F75			INCFSZ	STACK_5, W
$083F	$02F9			SUBWF	STACK_9, F
$0840	$1803			BTFSC	STATUS, C
$0841	$2849			GOTO	$+8
$0842	$0874			MOVF	STACK_4, W
$0843	$07F8			ADDWF	STACK_8, F
$0844	$0875			MOVF	STACK_5, W
$0845	$1803			BTFSC	STATUS, C
$0846	$0F75			INCFSZ	STACK_5, W
$0847	$07F9			ADDWF	STACK_9, F
$0848	$1003			BCF	STATUS, C
$0849	$0DF0			RLF	STACK_0, F
$084A	$0DF1			RLF	STACK_1, F
$084B	$0BFC			DECFSZ	STACK_12, F
$084C	$2837			GOTO	$-21
$084D	$0008			RETURN
$0895	$	_Lcd_Chr_CP:
$0895	$1303			BCF	STATUS, RP1
$0896	$1283			BCF	STATUS, RP0
$0897	$01A2			CLRF	LCD_cmd_status, 1
$0898	$0864			MOVF	FARG_Lcd_Chr_CP+0, 0
$0899	$00E7			MOVWF	FARG_Lcd_Cmd+0
$089A	$118A			BCF	PCLATH, 3
$089B	$2638			CALL	_Lcd_Cmd
$089C	$158A			BSF	PCLATH, 3
$089D	$3001			MOVLW	1
$089E	$00A2			MOVWF	LCD_cmd_status
$089F	$0008			RETURN
$084E	$	_strcpy:
$084E	$1303			BCF	STATUS, RP1
$084F	$1283			BCF	STATUS, RP0
$0850	$0864			MOVF	FARG_strcpy+0, 0
$0851	$00E6			MOVWF	strcpy_cp_L0
$0852	$	L_strcpy_31:
$0852	$0866			MOVF	strcpy_cp_L0, 0
$0853	$00F1			MOVWF	STACK_1
$0854	$0AE6			INCF	strcpy_cp_L0, 1
$0855	$0865			MOVF	FARG_strcpy+1, 0
$0856	$0084			MOVWF	FSR
$0857	$0AE5			INCF	FARG_strcpy+1, 1
$0858	$0800			MOVF	INDF, 0
$0859	$00F0			MOVWF	STACK_0
$085A	$0871			MOVF	STACK_1, 0
$085B	$0084			MOVWF	FSR
$085C	$0870			MOVF	STACK_0, 0
$085D	$0080			MOVWF	INDF
$085E	$0871			MOVF	STACK_1, 0
$085F	$0084			MOVWF	FSR
$0860	$0800			MOVF	INDF, 0
$0861	$00F0			MOVWF	STACK_0
$0862	$0870			MOVF	STACK_0, 0
$0863	$1D03			BTFSS	STATUS, Z
$0864	$2852			GOTO	L_strcpy_31
$0865	$	L_strcpy_32:
$0865	$0864			MOVF	FARG_strcpy+0, 0
$0866	$00F0			MOVWF	STACK_0
$0867	$0008			RETURN
$05E8	$	_Compare_Double:
$05E8	$1303			BCF	STATUS, RP1
$05E9	$1283			BCF	STATUS, RP0
$05EA	$01FA			CLRF	STACK_10
$05EB	$0873			MOVF	STACK_3, W
$05EC	$1D03			BTFSS	STATUS, Z
$05ED	$147A			BSF	STACK_10, 0
$05EE	$0877			MOVF	STACK_7, W
$05EF	$1D03			BTFSS	STATUS, Z
$05F0	$14FA			BSF	STACK_10, 1
$05F1	$087A			MOVF	STACK_10, W
$05F2	$1903			BTFSC	STATUS, Z
$05F3	$2E34			GOTO	COMPARE_EQU
$05F4	$3A03			XORLW	0x03
$05F5	$1903			BTFSC	STATUS, Z
$05F6	$2DFF			GOTO	COMPARE_NOTZERO
$05F7	$187A			BTFSC	STACK_10, 0
$05F8	$2DFC			GOTO	COMPARE_XNOTZERO
$05F9	$	COMPARE_YNOTZERO:
$05F9	$1FF6			BTFSS	STACK_6, 7
$05FA	$2E32			GOTO	COMPARE_LT
$05FB	$2E30			GOTO	COMPARE_GT
$05FC	$	COMPARE_XNOTZERO:
$05FC	$1FF2			BTFSS	STACK_2, 7
$05FD	$2E30			GOTO	COMPARE_GT
$05FE	$2E32			GOTO	COMPARE_LT
$05FF	$	COMPARE_NOTZERO:
$05FF	$0872			MOVF	STACK_2, W
$0600	$3980			ANDLW	0x80
$0601	$00FA			MOVWF	STACK_10
$0602	$13F2			BCF	STACK_2, 7
$0603	$0876			MOVF	STACK_6, W
$0604	$3980			ANDLW	0x80
$0605	$13F6			BCF	STACK_6, 7
$0606	$067A			XORWF	STACK_10, W
$0607	$1903			BTFSC	STATUS, Z
$0608	$2E0D			GOTO	COMPARE_TESTALL
$0609	$087A			MOVF	STACK_10, W
$060A	$1903			BTFSC	STATUS, Z
$060B	$2E30			GOTO	COMPARE_GT
$060C	$2E32			GOTO	COMPARE_LT
$060D	$	COMPARE_TESTALL:
$060D	$0877			MOVF	STACK_7, W
$060E	$0273			SUBWF	STACK_3, W
$060F	$1903			BTFSC	STATUS, Z
$0610	$2E14			GOTO	COMPARE_C1
$0611	$1C03			BTFSS	STATUS, C
$0612	$2E28			GOTO	GT_FALSE
$0613	$2E2C			GOTO	GT_TRUE
$0614	$	COMPARE_C1:
$0614	$0876			MOVF	STACK_6, W
$0615	$0272			SUBWF	STACK_2, W
$0616	$1903			BTFSC	STATUS, Z
$0617	$2E1B			GOTO	COMPARE_C2
$0618	$1C03			BTFSS	STATUS, C
$0619	$2E28			GOTO	GT_FALSE
$061A	$2E2C			GOTO	GT_TRUE
$061B	$	COMPARE_C2:
$061B	$0875			MOVF	STACK_5, W
$061C	$0271			SUBWF	STACK_1, W
$061D	$1903			BTFSC	STATUS, Z
$061E	$2E22			GOTO	COMPARE_C3
$061F	$1C03			BTFSS	STATUS, C
$0620	$2E28			GOTO	GT_FALSE
$0621	$2E2C			GOTO	GT_TRUE
$0622	$	COMPARE_C3:
$0622	$0874			MOVF	STACK_4, W
$0623	$0270			SUBWF	STACK_0, W
$0624	$1903			BTFSC	STATUS, Z
$0625	$2E34			GOTO	COMPARE_EQU
$0626	$1803			BTFSC	STATUS, C
$0627	$2E2C			GOTO	GT_TRUE
$0628	$	GT_FALSE:
$0628	$08FA			MOVF	STACK_10, F
$0629	$1903			BTFSC	STATUS, Z
$062A	$2E32			GOTO	COMPARE_LT
$062B	$2E30			GOTO	COMPARE_GT
$062C	$	GT_TRUE:
$062C	$08FA			MOVF	STACK_10, F
$062D	$1903			BTFSC	STATUS, Z
$062E	$2E30			GOTO	COMPARE_GT
$062F	$2E32			GOTO	COMPARE_LT
$0630	$	COMPARE_GT:
$0630	$1403			BSF	STATUS, C
$0631	$0008			RETURN
$0632	$	COMPARE_LT:
$0632	$1003			BCF	STATUS, C
$0633	$0008			RETURN
$0634	$	COMPARE_EQU:
$0634	$1403			BSF	STATUS, C
$0635	$1503			BSF	STATUS, Z
$0636	$0008			RETURN
$0637	$0008			RETURN
$04C4	$	_Mul_32x32_FP:
$04C4	$1303			BCF	STATUS, RP1
$04C5	$1283			BCF	STATUS, RP0
$04C6	$	FPM32:
$04C6	$01FB			CLRF	STACK_11
$04C7	$0873			MOVF	STACK_3, W
$04C8	$1D03			BTFSS	STATUS, Z
$04C9	$0877			MOVF	STACK_7, W
$04CA	$1903			BTFSC	STATUS, Z
$04CB	$2D1B			GOTO	JPMRES032
$04CC	$	M32BNE0:
$04CC	$0872			MOVF	STACK_2, W
$04CD	$0676			XORWF	STACK_6, W
$04CE	$00FA			MOVWF	STACK_10
$04CF	$0877			MOVF	STACK_7, W
$04D0	$07F3			ADDWF	STACK_3, F
$04D1	$307E			MOVLW	126
$04D2	$1C03			BTFSS	STATUS, C
$04D3	$2CD8			GOTO	MTUN32
$04D4	$02F3			SUBWF	STACK_3, F
$04D5	$1803			BTFSC	STATUS, C
$04D6	$2D20			GOTO	JPMSETFOV32
$04D7	$2CDB			GOTO	MOK32
$04D8	$	MTUN32:
$04D8	$02F3			SUBWF	STACK_3, F
$04D9	$1C03			BTFSS	STATUS, C
$04DA	$2D25			GOTO	JPMSETFUN32
$04DB	$	MOK32:
$04DB	$0872			MOVF	STACK_2, W
$04DC	$00F8			MOVWF	STACK_8
$04DD	$0871			MOVF	STACK_1, W
$04DE	$00FC			MOVWF	STACK_12
$04DF	$0870			MOVF	STACK_0, W
$04E0	$00FD			MOVWF	STACK_13
$04E1	$17F8			BSF	STACK_8, 7
$04E2	$17F6			BSF	STACK_6, 7
$04E3	$1003			BCF	STATUS, C
$04E4	$01F2			CLRF	STACK_2
$04E5	$01F1			CLRF	STACK_1
$04E6	$01F0			CLRF	STACK_0
$04E7	$3018			MOVLW	24
$04E8	$00A0			MOVWF	__math_tempbD
$04E9	$	MLOOP32:
$04E9	$1C7D			BTFSS	STACK_13, 0
$04EA	$2CF5			GOTO	MNOADD32
$04EB	$	MADD32:
$04EB	$0874			MOVF	STACK_4, W
$04EC	$07F0			ADDWF	STACK_0, F
$04ED	$0875			MOVF	STACK_5, W
$04EE	$1803			BTFSC	STATUS, C
$04EF	$0F75			INCFSZ	STACK_5, W
$04F0	$07F1			ADDWF	STACK_1, F
$04F1	$0876			MOVF	STACK_6, W
$04F2	$1803			BTFSC	STATUS, C
$04F3	$0F76			INCFSZ	STACK_6, W
$04F4	$07F2			ADDWF	STACK_2, F
$04F5	$	MNOADD32:
$04F5	$0CF2			RRF	STACK_2, F
$04F6	$0CF1			RRF	STACK_1, F
$04F7	$0CF0			RRF	STACK_0, F
$04F8	$0CF8			RRF	STACK_8, F
$04F9	$0CFC			RRF	STACK_12, F
$04FA	$0CFD			RRF	STACK_13, F
$04FB	$1003			BCF	STATUS, C
$04FC	$0BA0			DECFSZ	__math_tempbD, F
$04FD	$2CE9			GOTO	MLOOP32
$04FE	$1BF2			BTFSC	STACK_2, 7
$04FF	$2D05			GOTO	MROUND32
$0500	$0DF8			RLF	STACK_8, F
$0501	$0DF0			RLF	STACK_0, F
$0502	$0DF1			RLF	STACK_1, F
$0503	$0DF2			RLF	STACK_2, F
$0504	$03F3			DECF	STACK_3, F
$0505	$	MROUND32:
$0505	$1B7B			BTFSC	STACK_11, 6
$0506	$1C70			BTFSS	STACK_0, 0
$0507	$2D17			GOTO	MUL32OK
$0508	$1FF8			BTFSS	STACK_8, 7
$0509	$2D17			GOTO	MUL32OK
$050A	$0AF0			INCF	STACK_0, F
$050B	$1903			BTFSC	STATUS, Z
$050C	$0AF1			INCF	STACK_1, F
$050D	$1903			BTFSC	STATUS, Z
$050E	$0AF2			INCF	STACK_2, F
$050F	$1D03			BTFSS	STATUS, Z
$0510	$2D17			GOTO	MUL32OK
$0511	$0CF2			RRF	STACK_2, F
$0512	$0CF1			RRF	STACK_1, F
$0513	$0CF0			RRF	STACK_0, F
$0514	$0AF3			INCF	STACK_3, F
$0515	$1903			BTFSC	STATUS, Z
$0516	$2D20			GOTO	JPMSETFOV32
$0517	$	MUL32OK:
$0517	$1FFA			BTFSS	STACK_10, 7
$0518	$13F2			BCF	STACK_2, 7
$0519	$3000			MOVLW	0x00
$051A	$2D29			GOTO	MUL32EEE
$051B	$	JPMRES032:
$051B	$3001			MOVLW	0x01
$051C	$158A			BSF	PCLATH, 3
$051D	$20A8			CALL	_RES032
$051E	$118A			BCF	PCLATH, 3
$051F	$2D29			GOTO	MUL32EEE
$0520	$	JPMSETFOV32:
$0520	$3002			MOVLW	0x02
$0521	$158A			BSF	PCLATH, 3
$0522	$2079			CALL	_SETFOV32
$0523	$118A			BCF	PCLATH, 3
$0524	$2D29			GOTO	MUL32EEE
$0525	$	JPMSETFUN32:
$0525	$3004			MOVLW	0x04
$0526	$158A			BSF	PCLATH, 3
$0527	$2087			CALL	_SETFUN32
$0528	$118A			BCF	PCLATH, 3
$0529	$	MUL32EEE:
$0529	$0000			NOP
$052A	$0008			RETURN
$0868	$	_Div_8x8_U:
$0868	$1303			BCF	STATUS, RP1
$0869	$1283			BCF	STATUS, RP0
$086A	$01F8			CLRF	STACK_8, F
$086B	$3008			MOVLW	8
$086C	$00FC			MOVWF	STACK_12
$086D	$0D70			RLF	STACK_0, W
$086E	$0DF8			RLF	STACK_8, F
$086F	$0874			MOVF	STACK_4, W
$0870	$02F8			SUBWF	STACK_8, F
$0871	$1803			BTFSC	STATUS, C
$0872	$2875			GOTO	$+3
$0873	$07F8			ADDWF	STACK_8, F
$0874	$1003			BCF	STATUS, C
$0875	$0DF0			RLF	STACK_0, F
$0876	$0BFC			DECFSZ	STACK_12, F
$0877	$286D			GOTO	$-10
$0878	$0008			RETURN
$08BF	$	_SETFDZ32:
$08BF	$1303			BCF	STATUS, RP1
$08C0	$1283			BCF	STATUS, RP0
$08C1	$15FB			BSF	STACK_11, 3
$08C2	$30FF			MOVLW	0xFF
$08C3	$0008			RETURN
$02A8	$	_Add_32x32_FP:
$02A8	$1303			BCF	STATUS, RP1
$02A9	$1283			BCF	STATUS, RP0
$02AA	$0872			MOVF	STACK_2, W
$02AB	$0676			XORWF	STACK_6, W
$02AC	$00A0			MOVWF	__math_tempbD
$02AD	$01F8			CLRF	STACK_8
$02AE	$01F9			CLRF	STACK_9
$02AF	$0873			MOVF	STACK_3, W
$02B0	$0277			SUBWF	STACK_7, W
$02B1	$1C03			BTFSS	STATUS, C
$02B2	$2ACB			GOTO	USEA32
$02B3	$0877			MOVF	STACK_7, W
$02B4	$00FD			MOVWF	STACK_13
$02B5	$0873			MOVF	STACK_3, W
$02B6	$00F7			MOVWF	STACK_7
$02B7	$087D			MOVF	STACK_13, W
$02B8	$00F3			MOVWF	STACK_3
$02B9	$0876			MOVF	STACK_6, W
$02BA	$00FD			MOVWF	STACK_13
$02BB	$0872			MOVF	STACK_2, W
$02BC	$00F6			MOVWF	STACK_6
$02BD	$087D			MOVF	STACK_13, W
$02BE	$00F2			MOVWF	STACK_2
$02BF	$0875			MOVF	STACK_5, W
$02C0	$00FD			MOVWF	STACK_13
$02C1	$0871			MOVF	STACK_1, W
$02C2	$00F5			MOVWF	STACK_5
$02C3	$087D			MOVF	STACK_13, W
$02C4	$00F1			MOVWF	STACK_1
$02C5	$0874			MOVF	STACK_4, W
$02C6	$00FD			MOVWF	STACK_13
$02C7	$0870			MOVF	STACK_0, W
$02C8	$00F4			MOVWF	STACK_4
$02C9	$087D			MOVF	STACK_13, W
$02CA	$00F0			MOVWF	STACK_0
$02CB	$	USEA32:
$02CB	$0877			MOVF	STACK_7, W
$02CC	$1903			BTFSC	STATUS, Z
$02CD	$2B48			GOTO	JMPEEE
$02CE	$0872			MOVF	STACK_2, W
$02CF	$00FA			MOVWF	STACK_10
$02D0	$17F2			BSF	STACK_2, 7
$02D1	$17F6			BSF	STACK_6, 7
$02D2	$0877			MOVF	STACK_7, W
$02D3	$0273			SUBWF	STACK_3, W
$02D4	$00F7			MOVWF	STACK_7
$02D5	$1903			BTFSC	STATUS, Z
$02D6	$2AFE			GOTO	ALIGNED32
$02D7	$3008			MOVLW	8
$02D8	$0277			SUBWF	STACK_7, W
$02D9	$1C03			BTFSS	STATUS, C
$02DA	$2AF4			GOTO	ALIGNB32
$02DB	$00F7			MOVWF	STACK_7
$02DC	$0874			MOVF	STACK_4, W
$02DD	$00F9			MOVWF	STACK_9
$02DE	$0875			MOVF	STACK_5, W
$02DF	$00F4			MOVWF	STACK_4
$02E0	$0876			MOVF	STACK_6, W
$02E1	$00F5			MOVWF	STACK_5
$02E2	$01F6			CLRF	STACK_6
$02E3	$3008			MOVLW	8
$02E4	$0277			SUBWF	STACK_7, W
$02E5	$1C03			BTFSS	STATUS, C
$02E6	$2AF4			GOTO	ALIGNB32
$02E7	$00F7			MOVWF	STACK_7
$02E8	$0874			MOVF	STACK_4, W
$02E9	$00F9			MOVWF	STACK_9
$02EA	$0875			MOVF	STACK_5, W
$02EB	$00F4			MOVWF	STACK_4
$02EC	$01F5			CLRF	STACK_5
$02ED	$3008			MOVLW	8
$02EE	$0277			SUBWF	STACK_7, W
$02EF	$1C03			BTFSS	STATUS, C
$02F0	$2AF4			GOTO	ALIGNB32
$02F1	$087A			MOVF	STACK_10, W
$02F2	$00F2			MOVWF	STACK_2
$02F3	$2B48			GOTO	JMPEEE
$02F4	$	ALIGNB32:
$02F4	$0877			MOVF	STACK_7, W
$02F5	$1903			BTFSC	STATUS, Z
$02F6	$2AFE			GOTO	ALIGNED32
$02F7	$	ALOOPB32:
$02F7	$1003			BCF	STATUS, C
$02F8	$0CF6			RRF	STACK_6, F
$02F9	$0CF5			RRF	STACK_5, F
$02FA	$0CF4			RRF	STACK_4, F
$02FB	$0CF9			RRF	STACK_9, F
$02FC	$0BF7			DECFSZ	STACK_7, F
$02FD	$2AF7			GOTO	ALOOPB32
$02FE	$	ALIGNED32:
$02FE	$1FA0			BTFSS	__math_tempbD, 7
$02FF	$2B0B			GOTO	AOK32
$0300	$09F9			COMF	STACK_9, F
$0301	$09F4			COMF	STACK_4, F
$0302	$09F5			COMF	STACK_5, F
$0303	$09F6			COMF	STACK_6, F
$0304	$0AF9			INCF	STACK_9, F
$0305	$1903			BTFSC	STATUS, Z
$0306	$0AF4			INCF	STACK_4, F
$0307	$1903			BTFSC	STATUS, Z
$0308	$0AF5			INCF	STACK_5, F
$0309	$1903			BTFSC	STATUS, Z
$030A	$0AF6			INCF	STACK_6, F
$030B	$	AOK32:
$030B	$0879			MOVF	STACK_9, W
$030C	$07F8			ADDWF	STACK_8, F
$030D	$0874			MOVF	STACK_4, W
$030E	$1803			BTFSC	STATUS, C
$030F	$0F74			INCFSZ	STACK_4, W
$0310	$07F0			ADDWF	STACK_0, F
$0311	$0875			MOVF	STACK_5, W
$0312	$1803			BTFSC	STATUS, C
$0313	$0F75			INCFSZ	STACK_5, W
$0314	$07F1			ADDWF	STACK_1, F
$0315	$0876			MOVF	STACK_6, W
$0316	$1803			BTFSC	STATUS, C
$0317	$0F76			INCFSZ	STACK_6, W
$0318	$07F2			ADDWF	STACK_2, F
$0319	$1BA0			BTFSC	__math_tempbD, 7
$031A	$2B24			GOTO	ACOMP32
$031B	$1C03			BTFSS	STATUS, C
$031C	$2B34			GOTO	JMPNRMRND4032
$031D	$0CF2			RRF	STACK_2, F
$031E	$0CF1			RRF	STACK_1, F
$031F	$0CF0			RRF	STACK_0, F
$0320	$0CF8			RRF	STACK_8, F
$0321	$0FF3			INCFSZ	STACK_3, F
$0322	$2B34			GOTO	JMPNRMRND4032
$0323	$2B42			GOTO	ADD_JMPSETFOV32
$0324	$	ACOMP32:
$0324	$1803			BTFSC	STATUS, C
$0325	$2B38			GOTO	JMPNRM4032
$0326	$09F8			COMF	STACK_8, F
$0327	$09F0			COMF	STACK_0, F
$0328	$09F1			COMF	STACK_1, F
$0329	$09F2			COMF	STACK_2, F
$032A	$0AF8			INCF	STACK_8, F
$032B	$1903			BTFSC	STATUS, Z
$032C	$0AF0			INCF	STACK_0, F
$032D	$1903			BTFSC	STATUS, Z
$032E	$0AF1			INCF	STACK_1, F
$032F	$1903			BTFSC	STATUS, Z
$0330	$0AF2			INCF	STACK_2, F
$0331	$3080			MOVLW	0x80
$0332	$06FA			XORWF	STACK_10, F
$0333	$2B3C			GOTO	JMPNRM32
$0334	$	JMPNRMRND4032:
$0334	$3001			MOVLW	0x01
$0335	$00FC			MOVWF	STACK_12
$0336	$252B			CALL	_NRM4032
$0337	$2B4A			GOTO	ADD32EEE
$0338	$	JMPNRM4032:
$0338	$3002			MOVLW	0x02
$0339	$00FC			MOVWF	STACK_12
$033A	$252B			CALL	_NRM4032
$033B	$2B4A			GOTO	ADD32EEE
$033C	$	JMPNRM32:
$033C	$3004			MOVLW	0x04
$033D	$00FC			MOVWF	STACK_12
$033E	$158A			BSF	PCLATH, 3
$033F	$2000			CALL	_NRM3232
$0340	$118A			BCF	PCLATH, 3
$0341	$2B4A			GOTO	ADD32EEE
$0342	$	ADD_JMPSETFOV32:
$0342	$3008			MOVLW	0x08
$0343	$00FC			MOVWF	STACK_12
$0344	$158A			BSF	PCLATH, 3
$0345	$2079			CALL	_SETFOV32
$0346	$118A			BCF	PCLATH, 3
$0347	$2B4A			GOTO	ADD32EEE
$0348	$	JMPEEE:
$0348	$3000			MOVLW	0x00
$0349	$00FC			MOVWF	STACK_12
$034A	$	ADD32EEE:
$034A	$0000			NOP
$034B	$0008			RETURN
$0478	$	_Lcd_Init:
$0478	$2729			CALL	_Delay_5500us
$0479	$2729			CALL	_Delay_5500us
$047A	$2729			CALL	_Delay_5500us
$047B	$085F			MOVF	FARG_Lcd_Init+0, 0
$047C	$00A1			MOVWF	LCD_port_address
$047D	$085F			MOVF	FARG_Lcd_Init+0, 0
$047E	$0084			MOVWF	FSR
$047F	$1784			BSF	FSR, 7
$0480	$1180			BCF	INDF, ___ENABLE
$0481	$1100			BCF	INDF, ___RS
$0482	$1000			BCF	INDF, ___RW
$0483	$1380			BCF	INDF, ___DB7
$0484	$1300			BCF	INDF, ___DB6
$0485	$1280			BCF	INDF, ___DB5
$0486	$1200			BCF	INDF, ___DB4
$0487	$1384			BCF	FSR, 7
$0488	$1180			BCF	INDF, ___ENABLE
$0489	$1100			BCF	INDF, ___RS
$048A	$1000			BCF	INDF, ___RW
$048B	$1380			BCF	INDF, ___DB7
$048C	$1300			BCF	INDF, ___DB6
$048D	$1280			BCF	INDF, ___DB5
$048E	$1200			BCF	INDF, ___DB4
$048F	$1680			BSF	INDF, ___DB5
$0490	$1600			BSF	INDF, ___DB4
$0491	$1580			BSF	INDF, ___ENABLE
$0492	$1180			BCF	INDF, ___ENABLE
$0493	$2729			CALL	_Delay_5500us
$0494	$1580			BSF	INDF, ___ENABLE
$0495	$1180			BCF	INDF, ___ENABLE
$0496	$2729			CALL	_Delay_5500us
$0497	$1580			BSF	INDF, ___ENABLE
$0498	$1180			BCF	INDF, ___ENABLE
$0499	$2729			CALL	_Delay_5500us
$049A	$1680			BSF	INDF, ___DB5
$049B	$1200			BCF	INDF, ___DB4
$049C	$1580			BSF	INDF, ___ENABLE
$049D	$1180			BCF	INDF, ___ENABLE
$049E	$2729			CALL	_Delay_5500us
$049F	$0180			CLRF	INDF
$04A0	$1680			BSF	INDF, ___DB5
$04A1	$1580			BSF	INDF, ___ENABLE
$04A2	$1180			BCF	INDF, ___ENABLE
$04A3	$0180			CLRF	INDF
$04A4	$1780			BSF	INDF, ___DB7
$04A5	$1580			BSF	INDF, ___ENABLE
$04A6	$1180			BCF	INDF, ___ENABLE
$04A7	$2729			CALL	_Delay_5500us
$04A8	$0180			CLRF	INDF
$04A9	$1600			BSF	INDF, ___DB4
$04AA	$1580			BSF	INDF, ___ENABLE
$04AB	$1180			BCF	INDF, ___ENABLE
$04AC	$0180			CLRF	INDF
$04AD	$1580			BSF	INDF, ___ENABLE
$04AE	$1180			BCF	INDF, ___ENABLE
$04AF	$2729			CALL	_Delay_5500us
$04B0	$0180			CLRF	INDF
$04B1	$1580			BSF	INDF, ___ENABLE
$04B2	$1180			BCF	INDF, ___ENABLE
$04B3	$1600			BSF	INDF, ___DB4
$04B4	$1580			BSF	INDF, ___ENABLE
$04B5	$1180			BCF	INDF, ___ENABLE
$04B6	$2729			CALL	_Delay_5500us
$04B7	$0180			CLRF	INDF
$04B8	$1580			BSF	INDF, ___ENABLE
$04B9	$1180			BCF	INDF, ___ENABLE
$04BA	$1600			BSF	INDF, ___DB4
$04BB	$1680			BSF	INDF, ___DB5
$04BC	$1700			BSF	INDF, ___DB6
$04BD	$1780			BSF	INDF, ___DB7
$04BE	$1580			BSF	INDF, ___ENABLE
$04BF	$1180			BCF	INDF, ___ENABLE
$04C0	$2729			CALL	_Delay_5500us
$04C1	$3001			MOVLW	1
$04C2	$00A2			MOVWF	LCD_cmd_status
$04C3	$0008			RETURN
$03F0	$	_Adc_Rd:
;adc.h,1 :: 		
;adc.h,4 :: 		
$03F0	$3000			MOVLW	0
$03F1	$1303			BCF	STATUS, RP1
$03F2	$1283			BCF	STATUS, RP0
$03F3	$025F			SUBWF	FARG_Adc_Rd+0, 0
$03F4	$1C03			BTFSS	STATUS, C
$03F5	$2C09			GOTO	L_Adc_Rd_2
$03F6	$085F			MOVF	FARG_Adc_Rd+0, 0
$03F7	$3C03			SUBLW	3
$03F8	$1C03			BTFSS	STATUS, C
$03F9	$2C09			GOTO	L_Adc_Rd_2
$03FA	$	L10_ex_L_Adc_Rd_2:
;adc.h,5 :: 		
$03FA	$085F			MOVF	FARG_Adc_Rd+0, 0
$03FB	$00F2			MOVWF	STACK_2
$03FC	$3001			MOVLW	1
$03FD	$00F0			MOVWF	STACK_0
$03FE	$0872			MOVF	STACK_2, 0
$03FF	$	L_Adc_Rd_15:
$03FF	$1903			BTFSC	STATUS, Z
$0400	$2C05			GOTO	L_Adc_Rd_16
$0401	$0DF0			RLF	STACK_0, 1
$0402	$1070			BCF	STACK_0, 0
$0403	$3FFF			ADDLW	255
$0404	$2BFF			GOTO	L_Adc_Rd_15
$0405	$	L_Adc_Rd_16:
$0405	$0870			MOVF	STACK_0, 0
$0406	$1683			BSF	STATUS, RP0
$0407	$0485			IORWF	TRISA, 1
$0408	$2C2B			GOTO	L_Adc_Rd_3
$0409	$	L_Adc_Rd_2:
;adc.h,6 :: 		
$0409	$1283			BCF	STATUS, RP0
$040A	$085F			MOVF	FARG_Adc_Rd+0, 0
$040B	$3A04			XORLW	4
$040C	$1D03			BTFSS	STATUS, Z
$040D	$2C11			GOTO	L_Adc_Rd_4
;adc.h,7 :: 		
$040E	$1683			BSF	STATUS, RP0
$040F	$1685			BSF	TRISA, 5
$0410	$2C2B			GOTO	L_Adc_Rd_5
$0411	$	L_Adc_Rd_4:
;adc.h,8 :: 		
$0411	$3005			MOVLW	5
$0412	$1283			BCF	STATUS, RP0
$0413	$025F			SUBWF	FARG_Adc_Rd+0, 0
$0414	$1C03			BTFSS	STATUS, C
$0415	$2C2B			GOTO	L_Adc_Rd_8
$0416	$085F			MOVF	FARG_Adc_Rd+0, 0
$0417	$3C07			SUBLW	7
$0418	$1C03			BTFSS	STATUS, C
$0419	$2C2B			GOTO	L_Adc_Rd_8
$041A	$	L33_ex_L_Adc_Rd_8:
;adc.h,9 :: 		
$041A	$3005			MOVLW	5
$041B	$025F			SUBWF	FARG_Adc_Rd+0, 0
$041C	$00F0			MOVWF	STACK_0
$041D	$0870			MOVF	STACK_0, 0
$041E	$00F2			MOVWF	STACK_2
$041F	$3001			MOVLW	1
$0420	$00F0			MOVWF	STACK_0
$0421	$0872			MOVF	STACK_2, 0
$0422	$	L_Adc_Rd_17:
$0422	$1903			BTFSC	STATUS, Z
$0423	$2C28			GOTO	L_Adc_Rd_18
$0424	$0DF0			RLF	STACK_0, 1
$0425	$1070			BCF	STACK_0, 0
$0426	$3FFF			ADDLW	255
$0427	$2C22			GOTO	L_Adc_Rd_17
$0428	$	L_Adc_Rd_18:
$0428	$0870			MOVF	STACK_0, 0
$0429	$1683			BSF	STATUS, RP0
$042A	$0489			IORWF	TRISE, 1
$042B	$	L_Adc_Rd_8:
$042B	$	L_Adc_Rd_5:
$042B	$	L_Adc_Rd_3:
;adc.h,10 :: 		
$042B	$1303			BCF	STATUS, RP1
$042C	$1683			BSF	STATUS, RP0
$042D	$1283			BCF	STATUS, RP0
$042E	$085F			MOVF	FARG_Adc_Rd+0, 0
$042F	$00F2			MOVWF	STACK_2
$0430	$3001			MOVLW	1
$0431	$00F0			MOVWF	STACK_0
$0432	$0872			MOVF	STACK_2, 0
$0433	$	L_Adc_Rd_19:
$0433	$1903			BTFSC	STATUS, Z
$0434	$2C39			GOTO	L_Adc_Rd_20
$0435	$0DF0			RLF	STACK_0, 1
$0436	$1070			BCF	STACK_0, 0
$0437	$3FFF			ADDLW	255
$0438	$2C33			GOTO	L_Adc_Rd_19
$0439	$	L_Adc_Rd_20:
$0439	$0870			MOVF	STACK_0, 0
$043A	$1703			BSF	STATUS, RP1
$043B	$1683			BSF	STATUS, RP0
$043C	$0488			IORWF	ANSEL, 1
;adc.h,11 :: 		
$043D	$3002			MOVLW	2
$043E	$00F4			MOVWF	STACK_4
$043F	$1303			BCF	STATUS, RP1
$0440	$1283			BCF	STATUS, RP0
$0441	$085F			MOVF	FARG_Adc_Rd+0, 0
$0442	$00F0			MOVWF	STACK_0
$0443	$0874			MOVF	STACK_4, 0
$0444	$	L_Adc_Rd_21:
$0444	$1903			BTFSC	STATUS, Z
$0445	$2C4A			GOTO	L_Adc_Rd_22
$0446	$0DF0			RLF	STACK_0, 1
$0447	$1070			BCF	STACK_0, 0
$0448	$3FFF			ADDLW	255
$0449	$2C44			GOTO	L_Adc_Rd_21
$044A	$	L_Adc_Rd_22:
$044A	$0870			MOVF	STACK_0, 0
$044B	$3FC1			ADDLW	193
$044C	$009F			MOVWF	ADCON0
;adc.h,12 :: 		
$044D	$3010			MOVLW	16
$044E	$00FA			MOVWF	STACK_10
$044F	$0BFA			DECFSZ	STACK_10, F
$0450	$2C4F			GOTO	$-1
$0451	$0000			NOP
;adc.h,13 :: 		
$0452	$149F			BSF	ADCON0, 1
;adc.h,14 :: 		
$0453	$	L_Adc_Rd_9:
$0453	$189F			BTFSC	ADCON0, 1
$0454	$2C53			GOTO	L_Adc_Rd_9
$0455	$	L_Adc_Rd_10:
;adc.h,15 :: 		
$0455	$3002			MOVLW	2
$0456	$00F4			MOVWF	STACK_4
$0457	$081E			MOVF	ADRESH, 0
$0458	$00E0			MOVWF	FLOC_Adc_Rd+0
$0459	$01E1			CLRF	FLOC_Adc_Rd+1
$045A	$0874			MOVF	STACK_4, 0
$045B	$	L_Adc_Rd_23:
$045B	$1903			BTFSC	STATUS, Z
$045C	$2C62			GOTO	L_Adc_Rd_24
$045D	$0DE0			RLF	FLOC_Adc_Rd+0, 1
$045E	$0DE1			RLF	FLOC_Adc_Rd+1, 1
$045F	$1060			BCF	FLOC_Adc_Rd+0, 0
$0460	$3FFF			ADDLW	255
$0461	$2C5B			GOTO	L_Adc_Rd_23
$0462	$	L_Adc_Rd_24:
$0462	$3006			MOVLW	6
$0463	$00F4			MOVWF	STACK_4
$0464	$1683			BSF	STATUS, RP0
$0465	$081E			MOVF	ADRESL, 0
$0466	$00F0			MOVWF	STACK_0
$0467	$0874			MOVF	STACK_4, 0
$0468	$	L_Adc_Rd_25:
$0468	$1903			BTFSC	STATUS, Z
$0469	$2C6E			GOTO	L_Adc_Rd_26
$046A	$0CF0			RRF	STACK_0, 1
$046B	$13F0			BCF	STACK_0, 7
$046C	$3FFF			ADDLW	255
$046D	$2C68			GOTO	L_Adc_Rd_25
$046E	$	L_Adc_Rd_26:
$046E	$3000			MOVLW	0
$046F	$00F1			MOVWF	STACK_0+1
$0470	$1283			BCF	STATUS, RP0
$0471	$0860			MOVF	FLOC_Adc_Rd+0, 0
$0472	$07F0			ADDWF	STACK_0, 1
$0473	$0861			MOVF	FLOC_Adc_Rd+1, 0
$0474	$1803			BTFSC	STATUS, C
$0475	$3F01			ADDLW	1
$0476	$07F1			ADDWF	STACK_0+1, 1
;adc.h,16 :: 		
;adc.h,17 :: 		
$0477	$0008			RETURN
$058F	$	_WordToStr:
$058F	$1303			BCF	STATUS, RP1
$0590	$1283			BCF	STATUS, RP0
$0591	$0861			MOVF	FARG_WordToStr+2, 0
$0592	$0084			MOVWF	FSR
$0593	$3020			MOVLW	32
$0594	$0080			MOVWF	INDF
$0595	$0A61			INCF	FARG_WordToStr+2, 0
$0596	$00F0			MOVWF	STACK_0
$0597	$0870			MOVF	STACK_0, 0
$0598	$0084			MOVWF	FSR
$0599	$3020			MOVLW	32
$059A	$0080			MOVWF	INDF
$059B	$3002			MOVLW	2
$059C	$0761			ADDWF	FARG_WordToStr+2, 0
$059D	$00F0			MOVWF	STACK_0
$059E	$0870			MOVF	STACK_0, 0
$059F	$0084			MOVWF	FSR
$05A0	$3020			MOVLW	32
$05A1	$0080			MOVWF	INDF
$05A2	$3003			MOVLW	3
$05A3	$0761			ADDWF	FARG_WordToStr+2, 0
$05A4	$00F0			MOVWF	STACK_0
$05A5	$0870			MOVF	STACK_0, 0
$05A6	$0084			MOVWF	FSR
$05A7	$3020			MOVLW	32
$05A8	$0080			MOVWF	INDF
$05A9	$3004			MOVLW	4
$05AA	$0761			ADDWF	FARG_WordToStr+2, 0
$05AB	$00F0			MOVWF	STACK_0
$05AC	$0870			MOVF	STACK_0, 0
$05AD	$0084			MOVWF	FSR
$05AE	$3030			MOVLW	48
$05AF	$0080			MOVWF	INDF
$05B0	$3005			MOVLW	5
$05B1	$0761			ADDWF	FARG_WordToStr+2, 0
$05B2	$00F0			MOVWF	STACK_0
$05B3	$0870			MOVF	STACK_0, 0
$05B4	$0084			MOVWF	FSR
$05B5	$0180			CLRF	INDF, 1
$05B6	$3004			MOVLW	4
$05B7	$00E2			MOVWF	WordToStr_pos_L0
$05B8	$	L_WordToStr_4:
$05B8	$0860			MOVF	FARG_WordToStr+1, 0
$05B9	$3C00			SUBLW	0
$05BA	$1D03			BTFSS	STATUS, Z
$05BB	$2DBE			GOTO	L_WordToStr_51
$05BC	$085F			MOVF	FARG_WordToStr+0, 0
$05BD	$3C00			SUBLW	0
$05BE	$	L_WordToStr_51:
$05BE	$1803			BTFSC	STATUS, C
$05BF	$2DE7			GOTO	L_WordToStr_5
$05C0	$0862			MOVF	WordToStr_pos_L0, 0
$05C1	$0761			ADDWF	FARG_WordToStr+2, 0
$05C2	$00E3			MOVWF	FLOC_WordToStr+1
$05C3	$300A			MOVLW	10
$05C4	$00F4			MOVWF	STACK_4
$05C5	$01F5			CLRF	STACK_4+1
$05C6	$085F			MOVF	FARG_WordToStr+0, 0
$05C7	$00F0			MOVWF	STACK_0
$05C8	$0860			MOVF	FARG_WordToStr+1, 0
$05C9	$00F1			MOVWF	STACK_0+1
$05CA	$158A			BSF	PCLATH, 3
$05CB	$2031			CALL	_div_16x16_u
$05CC	$118A			BCF	PCLATH, 3
$05CD	$0878			MOVF	STACK_8, 0
$05CE	$00F0			MOVWF	STACK_0
$05CF	$0879			MOVF	STACK_9, 0
$05D0	$00F1			MOVWF	STACK_1
$05D1	$3030			MOVLW	48
$05D2	$07F0			ADDWF	STACK_0, 1
$05D3	$0863			MOVF	FLOC_WordToStr+1, 0
$05D4	$0084			MOVWF	FSR
$05D5	$0870			MOVF	STACK_0, 0
$05D6	$0080			MOVWF	INDF
$05D7	$300A			MOVLW	10
$05D8	$00F4			MOVWF	STACK_4
$05D9	$01F5			CLRF	STACK_4+1
$05DA	$085F			MOVF	FARG_WordToStr+0, 0
$05DB	$00F0			MOVWF	STACK_0
$05DC	$0860			MOVF	FARG_WordToStr+1, 0
$05DD	$00F1			MOVWF	STACK_0+1
$05DE	$158A			BSF	PCLATH, 3
$05DF	$2031			CALL	_div_16x16_u
$05E0	$118A			BCF	PCLATH, 3
$05E1	$0870			MOVF	STACK_0, 0
$05E2	$00DF			MOVWF	FARG_WordToStr+0
$05E3	$0871			MOVF	STACK_0+1, 0
$05E4	$00E0			MOVWF	FARG_WordToStr+1
$05E5	$03E2			DECF	WordToStr_pos_L0, 1
$05E6	$2DB8			GOTO	L_WordToStr_4
$05E7	$	L_WordToStr_5:
$05E7	$0008			RETURN
$067A	$	_LCD_Out:
$067A	$2E8C			GOTO	L_LCD_Out_17
$067B	$	L_LCD_Out_19:
$067B	$3080			MOVLW	128
$067C	$1303			BCF	STATUS, RP1
$067D	$1283			BCF	STATUS, RP0
$067E	$00DF			MOVWF	FARG_LCD_Out+0
$067F	$2E9F			GOTO	L_LCD_Out_18
$0680	$	L_LCD_Out_20:
$0680	$30C0			MOVLW	192
$0681	$00DF			MOVWF	FARG_LCD_Out+0
$0682	$2E9F			GOTO	L_LCD_Out_18
$0683	$	L_LCD_Out_21:
$0683	$3094			MOVLW	148
$0684	$00DF			MOVWF	FARG_LCD_Out+0
$0685	$2E9F			GOTO	L_LCD_Out_18
$0686	$	L_LCD_Out_22:
$0686	$30D4			MOVLW	212
$0687	$00DF			MOVWF	FARG_LCD_Out+0
$0688	$2E9F			GOTO	L_LCD_Out_18
$0689	$	L_LCD_Out_23:
$0689	$3080			MOVLW	128
$068A	$00DF			MOVWF	FARG_LCD_Out+0
$068B	$2E9F			GOTO	L_LCD_Out_18
$068C	$	L_LCD_Out_17:
$068C	$1303			BCF	STATUS, RP1
$068D	$1283			BCF	STATUS, RP0
$068E	$085F			MOVF	FARG_LCD_Out+0, 0
$068F	$3A01			XORLW	1
$0690	$1903			BTFSC	STATUS, Z
$0691	$2E7B			GOTO	L_LCD_Out_19
$0692	$085F			MOVF	FARG_LCD_Out+0, 0
$0693	$3A02			XORLW	2
$0694	$1903			BTFSC	STATUS, Z
$0695	$2E80			GOTO	L_LCD_Out_20
$0696	$085F			MOVF	FARG_LCD_Out+0, 0
$0697	$3A03			XORLW	3
$0698	$1903			BTFSC	STATUS, Z
$0699	$2E83			GOTO	L_LCD_Out_21
$069A	$085F			MOVF	FARG_LCD_Out+0, 0
$069B	$3A04			XORLW	4
$069C	$1903			BTFSC	STATUS, Z
$069D	$2E86			GOTO	L_LCD_Out_22
$069E	$2E89			GOTO	L_LCD_Out_23
$069F	$	L_LCD_Out_18:
$069F	$0360			DECF	FARG_LCD_Out+1, 0
$06A0	$00F0			MOVWF	STACK_0
$06A1	$085F			MOVF	FARG_LCD_Out+0, 0
$06A2	$07F0			ADDWF	STACK_0, 1
$06A3	$0870			MOVF	STACK_0, 0
$06A4	$00DF			MOVWF	FARG_LCD_Out+0
$06A5	$0870			MOVF	STACK_0, 0
$06A6	$00E7			MOVWF	FARG_Lcd_Cmd+0
$06A7	$2638			CALL	_Lcd_Cmd
$06A8	$01A2			CLRF	LCD_cmd_status, 1
$06A9	$01E2			CLRF	LCD_Out_i_L0, 1
$06AA	$	L_LCD_Out_24:
$06AA	$0862			MOVF	LCD_Out_i_L0, 0
$06AB	$0761			ADDWF	FARG_LCD_Out+2, 0
$06AC	$0084			MOVWF	FSR
$06AD	$0800			MOVF	INDF, 0
$06AE	$00F0			MOVWF	STACK_0
$06AF	$0870			MOVF	STACK_0, 0
$06B0	$1903			BTFSC	STATUS, Z
$06B1	$2EBC			GOTO	L_LCD_Out_25
$06B2	$0862			MOVF	LCD_Out_i_L0, 0
$06B3	$0761			ADDWF	FARG_LCD_Out+2, 0
$06B4	$0084			MOVWF	FSR
$06B5	$0800			MOVF	INDF, 0
$06B6	$00E4			MOVWF	FARG_Lcd_Chr_CP+0
$06B7	$158A			BSF	PCLATH, 3
$06B8	$2095			CALL	_Lcd_Chr_CP
$06B9	$118A			BCF	PCLATH, 3
$06BA	$0AE2			INCF	LCD_Out_i_L0, 1
$06BB	$2EAA			GOTO	L_LCD_Out_24
$06BC	$	L_LCD_Out_25:
$06BC	$3001			MOVLW	1
$06BD	$00A2			MOVWF	LCD_cmd_status
$06BE	$0008			RETURN
$0004	$	_FloatToStr:
$0004	$304E			MOVLW	78
$0005	$1303			BCF	STATUS, RP1
$0006	$1683			BSF	STATUS, RP0
$0007	$00A0			MOVWF	lstr1_conv+0
$0008	$3061			MOVLW	97
$0009	$00A1			MOVWF	lstr1_conv+1
$000A	$304E			MOVLW	78
$000B	$00A2			MOVWF	lstr1_conv+2
$000C	$01A3			CLRF	lstr1_conv+3
$000D	$3030			MOVLW	48
$000E	$00A4			MOVWF	lstr2_conv+0
$000F	$01A5			CLRF	lstr2_conv+1
$0010	$3049			MOVLW	73
$0011	$00A6			MOVWF	lstr3_conv+0
$0012	$304E			MOVLW	78
$0013	$00A7			MOVWF	lstr3_conv+1
$0014	$3046			MOVLW	70
$0015	$00A8			MOVWF	lstr3_conv+2
$0016	$01A9			CLRF	lstr3_conv+3
$0017	$01AA			CLRF	FloatToStr_bpoint_L0, 1
$0018	$01AD			CLRF	FloatToStr_dexpon_L0, 1
$0019	$1283			BCF	STATUS, RP0
$001A	$085F			MOVF	FARG_FloatToStr+0, 0
$001B	$1683			BSF	STATUS, RP0
$001C	$00AE			MOVWF	FloatToStr_un_L0
$001D	$1283			BCF	STATUS, RP0
$001E	$0860			MOVF	FARG_FloatToStr+1, 0
$001F	$1683			BSF	STATUS, RP0
$0020	$00AF			MOVWF	FloatToStr_un_L0+1
$0021	$1283			BCF	STATUS, RP0
$0022	$0861			MOVF	FARG_FloatToStr+2, 0
$0023	$1683			BSF	STATUS, RP0
$0024	$00B0			MOVWF	FloatToStr_un_L0+2
$0025	$1283			BCF	STATUS, RP0
$0026	$0862			MOVF	FARG_FloatToStr+3, 0
$0027	$1683			BSF	STATUS, RP0
$0028	$00B1			MOVWF	FloatToStr_un_L0+3
$0029	$0831			MOVF	FloatToStr_un_L0+3, 0
$002A	$3AFF			XORLW	255
$002B	$1D03			BTFSS	STATUS, Z
$002C	$2837			GOTO	L_FloatToStr_60
$002D	$0830			MOVF	FloatToStr_un_L0+2, 0
$002E	$3AFF			XORLW	255
$002F	$1D03			BTFSS	STATUS, Z
$0030	$2837			GOTO	L_FloatToStr_60
$0031	$082F			MOVF	FloatToStr_un_L0+1, 0
$0032	$3AFF			XORLW	255
$0033	$1D03			BTFSS	STATUS, Z
$0034	$2837			GOTO	L_FloatToStr_60
$0035	$082E			MOVF	FloatToStr_un_L0, 0
$0036	$3AFF			XORLW	255
$0037	$	L_FloatToStr_60:
$0037	$1D03			BTFSS	STATUS, Z
$0038	$2844			GOTO	L_FloatToStr_29
$0039	$1283			BCF	STATUS, RP0
$003A	$0863			MOVF	FARG_FloatToStr+4, 0
$003B	$00E4			MOVWF	FARG_strcpy+0
$003C	$30A0			MOVLW	lstr1_conv
$003D	$00E5			MOVWF	FARG_strcpy+1
$003E	$158A			BSF	PCLATH, 3
$003F	$204E			CALL	_strcpy
$0040	$118A			BCF	PCLATH, 3
$0041	$3003			MOVLW	3
$0042	$00F0			MOVWF	STACK_0
$0043	$0008			RETURN
$0044	$	L_FloatToStr_29:
$0044	$3001			MOVLW	1
$0045	$1683			BSF	STATUS, RP0
$0046	$00AB			MOVWF	FloatToStr_i_L0
$0047	$1FB0			BTFSS	FloatToStr_un_L0+2, 7
$0048	$2852			GOTO	L_FloatToStr_30
$0049	$3080			MOVLW	128
$004A	$06B0			XORWF	FloatToStr_un_L0+2, 1
$004B	$0AAB			INCF	FloatToStr_i_L0, 1
$004C	$1283			BCF	STATUS, RP0
$004D	$0863			MOVF	FARG_FloatToStr+4, 0
$004E	$0084			MOVWF	FSR
$004F	$302D			MOVLW	45
$0050	$0080			MOVWF	INDF
$0051	$0AE3			INCF	FARG_FloatToStr+4, 1
$0052	$	L_FloatToStr_30:
$0052	$3000			MOVLW	0
$0053	$00F0			MOVWF	STACK_0
$0054	$1683			BSF	STATUS, RP0
$0055	$0631			XORWF	FloatToStr_un_L0+3, 0
$0056	$1D03			BTFSS	STATUS, Z
$0057	$2862			GOTO	L_FloatToStr_61
$0058	$0870			MOVF	STACK_0, 0
$0059	$0630			XORWF	FloatToStr_un_L0+2, 0
$005A	$1D03			BTFSS	STATUS, Z
$005B	$2862			GOTO	L_FloatToStr_61
$005C	$0870			MOVF	STACK_0, 0
$005D	$062F			XORWF	FloatToStr_un_L0+1, 0
$005E	$1D03			BTFSS	STATUS, Z
$005F	$2862			GOTO	L_FloatToStr_61
$0060	$082E			MOVF	FloatToStr_un_L0, 0
$0061	$3A00			XORLW	0
$0062	$	L_FloatToStr_61:
$0062	$1D03			BTFSS	STATUS, Z
$0063	$286E			GOTO	L_FloatToStr_31
$0064	$1283			BCF	STATUS, RP0
$0065	$0863			MOVF	FARG_FloatToStr+4, 0
$0066	$00E4			MOVWF	FARG_strcpy+0
$0067	$30A4			MOVLW	lstr2_conv
$0068	$00E5			MOVWF	FARG_strcpy+1
$0069	$158A			BSF	PCLATH, 3
$006A	$204E			CALL	_strcpy
$006B	$118A			BCF	PCLATH, 3
$006C	$01F0			CLRF	STACK_0, 1
$006D	$0008			RETURN
$006E	$	L_FloatToStr_31:
$006E	$1683			BSF	STATUS, RP0
$006F	$0831			MOVF	FloatToStr_un_L0+3, 0
$0070	$3A7F			XORLW	127
$0071	$1D03			BTFSS	STATUS, Z
$0072	$287D			GOTO	L_FloatToStr_62
$0073	$0830			MOVF	FloatToStr_un_L0+2, 0
$0074	$3A80			XORLW	128
$0075	$1D03			BTFSS	STATUS, Z
$0076	$287D			GOTO	L_FloatToStr_62
$0077	$082F			MOVF	FloatToStr_un_L0+1, 0
$0078	$3A00			XORLW	0
$0079	$1D03			BTFSS	STATUS, Z
$007A	$287D			GOTO	L_FloatToStr_62
$007B	$082E			MOVF	FloatToStr_un_L0, 0
$007C	$3A00			XORLW	0
$007D	$	L_FloatToStr_62:
$007D	$1D03			BTFSS	STATUS, Z
$007E	$288B			GOTO	L_FloatToStr_32
$007F	$1283			BCF	STATUS, RP0
$0080	$0863			MOVF	FARG_FloatToStr+4, 0
$0081	$00E4			MOVWF	FARG_strcpy+0
$0082	$30A6			MOVLW	lstr3_conv
$0083	$00E5			MOVWF	FARG_strcpy+1
$0084	$158A			BSF	PCLATH, 3
$0085	$204E			CALL	_strcpy
$0086	$118A			BCF	PCLATH, 3
$0087	$1683			BSF	STATUS, RP0
$0088	$082B			MOVF	FloatToStr_i_L0, 0
$0089	$00F0			MOVWF	STACK_0
$008A	$0008			RETURN
$008B	$	L_FloatToStr_32:
$008B	$	L_FloatToStr_33:
$008B	$3000			MOVLW	0
$008C	$00F4			MOVWF	STACK_4
$008D	$3000			MOVLW	0
$008E	$00F5			MOVWF	STACK_4+1
$008F	$3000			MOVLW	0
$0090	$00F6			MOVWF	STACK_4+2
$0091	$307F			MOVLW	127
$0092	$00F7			MOVWF	STACK_4+3
$0093	$082E			MOVF	FloatToStr_un_L0, 0
$0094	$00F0			MOVWF	STACK_0
$0095	$082F			MOVF	FloatToStr_un_L0+1, 0
$0096	$00F1			MOVWF	STACK_0+1
$0097	$0830			MOVF	FloatToStr_un_L0+2, 0
$0098	$00F2			MOVWF	STACK_0+2
$0099	$0831			MOVF	FloatToStr_un_L0+3, 0
$009A	$00F3			MOVWF	STACK_0+3
$009B	$25E8			CALL	_compare_double
$009C	$3001			MOVLW	1
$009D	$1803			BTFSC	STATUS, C
$009E	$3000			MOVLW	0
$009F	$00F0			MOVWF	STACK_0
$00A0	$0870			MOVF	STACK_0, 0
$00A1	$1903			BTFSC	STATUS, Z
$00A2	$28C0			GOTO	L_FloatToStr_34
$00A3	$1683			BSF	STATUS, RP0
$00A4	$082E			MOVF	FloatToStr_un_L0, 0
$00A5	$00F0			MOVWF	STACK_0
$00A6	$082F			MOVF	FloatToStr_un_L0+1, 0
$00A7	$00F1			MOVWF	STACK_0+1
$00A8	$0830			MOVF	FloatToStr_un_L0+2, 0
$00A9	$00F2			MOVWF	STACK_0+2
$00AA	$0831			MOVF	FloatToStr_un_L0+3, 0
$00AB	$00F3			MOVWF	STACK_0+3
$00AC	$3000			MOVLW	0
$00AD	$00F4			MOVWF	STACK_4
$00AE	$3000			MOVLW	0
$00AF	$00F5			MOVWF	STACK_4+1
$00B0	$3020			MOVLW	32
$00B1	$00F6			MOVWF	STACK_4+2
$00B2	$3082			MOVLW	130
$00B3	$00F7			MOVWF	STACK_4+3
$00B4	$24C4			CALL	_mul_32x32_fp
$00B5	$0870			MOVF	STACK_0, 0
$00B6	$1683			BSF	STATUS, RP0
$00B7	$00AE			MOVWF	FloatToStr_un_L0
$00B8	$0871			MOVF	STACK_0+1, 0
$00B9	$00AF			MOVWF	FloatToStr_un_L0+1
$00BA	$0872			MOVF	STACK_0+2, 0
$00BB	$00B0			MOVWF	FloatToStr_un_L0+2
$00BC	$0873			MOVF	STACK_0+3, 0
$00BD	$00B1			MOVWF	FloatToStr_un_L0+3
$00BE	$03AD			DECF	FloatToStr_dexpon_L0, 1
$00BF	$288B			GOTO	L_FloatToStr_33
$00C0	$	L_FloatToStr_34:
$00C0	$	L_FloatToStr_35:
$00C0	$1303			BCF	STATUS, RP1
$00C1	$1683			BSF	STATUS, RP0
$00C2	$3000			MOVLW	0
$00C3	$00F4			MOVWF	STACK_4
$00C4	$3000			MOVLW	0
$00C5	$00F5			MOVWF	STACK_4+1
$00C6	$3020			MOVLW	32
$00C7	$00F6			MOVWF	STACK_4+2
$00C8	$3082			MOVLW	130
$00C9	$00F7			MOVWF	STACK_4+3
$00CA	$082E			MOVF	FloatToStr_un_L0, 0
$00CB	$00F0			MOVWF	STACK_0
$00CC	$082F			MOVF	FloatToStr_un_L0+1, 0
$00CD	$00F1			MOVWF	STACK_0+1
$00CE	$0830			MOVF	FloatToStr_un_L0+2, 0
$00CF	$00F2			MOVWF	STACK_0+2
$00D0	$0831			MOVF	FloatToStr_un_L0+3, 0
$00D1	$00F3			MOVWF	STACK_0+3
$00D2	$25E8			CALL	_compare_double
$00D3	$3001			MOVLW	1
$00D4	$1C03			BTFSS	STATUS, C
$00D5	$3000			MOVLW	0
$00D6	$00F0			MOVWF	STACK_0
$00D7	$0870			MOVF	STACK_0, 0
$00D8	$1903			BTFSC	STATUS, Z
$00D9	$28F7			GOTO	L_FloatToStr_36
$00DA	$1683			BSF	STATUS, RP0
$00DB	$082E			MOVF	FloatToStr_un_L0, 0
$00DC	$00F0			MOVWF	STACK_0
$00DD	$082F			MOVF	FloatToStr_un_L0+1, 0
$00DE	$00F1			MOVWF	STACK_0+1
$00DF	$0830			MOVF	FloatToStr_un_L0+2, 0
$00E0	$00F2			MOVWF	STACK_0+2
$00E1	$0831			MOVF	FloatToStr_un_L0+3, 0
$00E2	$00F3			MOVWF	STACK_0+3
$00E3	$30CD			MOVLW	205
$00E4	$00F4			MOVWF	STACK_4
$00E5	$30CC			MOVLW	204
$00E6	$00F5			MOVWF	STACK_4+1
$00E7	$304C			MOVLW	76
$00E8	$00F6			MOVWF	STACK_4+2
$00E9	$307B			MOVLW	123
$00EA	$00F7			MOVWF	STACK_4+3
$00EB	$24C4			CALL	_mul_32x32_fp
$00EC	$0870			MOVF	STACK_0, 0
$00ED	$1683			BSF	STATUS, RP0
$00EE	$00AE			MOVWF	FloatToStr_un_L0
$00EF	$0871			MOVF	STACK_0+1, 0
$00F0	$00AF			MOVWF	FloatToStr_un_L0+1
$00F1	$0872			MOVF	STACK_0+2, 0
$00F2	$00B0			MOVWF	FloatToStr_un_L0+2
$00F3	$0873			MOVF	STACK_0+3, 0
$00F4	$00B1			MOVWF	FloatToStr_un_L0+3
$00F5	$0AAD			INCF	FloatToStr_dexpon_L0, 1
$00F6	$28C0			GOTO	L_FloatToStr_35
$00F7	$	L_FloatToStr_36:
$00F7	$1303			BCF	STATUS, RP1
$00F8	$1683			BSF	STATUS, RP0
$00F9	$30FF			MOVLW	255
$00FA	$052E			ANDWF	FloatToStr_un_L0, 0
$00FB	$00F5			MOVWF	STACK_5
$00FC	$30FF			MOVLW	255
$00FD	$052F			ANDWF	FloatToStr_un_L0+1, 0
$00FE	$00F6			MOVWF	STACK_5+1
$00FF	$307F			MOVLW	127
$0100	$0530			ANDWF	FloatToStr_un_L0+2, 0
$0101	$00F7			MOVWF	STACK_5+2
$0102	$3000			MOVLW	0
$0103	$0531			ANDWF	FloatToStr_un_L0+3, 0
$0104	$00F8			MOVWF	STACK_5+3
$0105	$0875			MOVF	STACK_5, 0
$0106	$00F0			MOVWF	STACK_0
$0107	$0876			MOVF	STACK_5+1, 0
$0108	$00F1			MOVWF	STACK_0+1
$0109	$0877			MOVF	STACK_5+2, 0
$010A	$00F2			MOVWF	STACK_0+2
$010B	$0878			MOVF	STACK_5+3, 0
$010C	$00F3			MOVWF	STACK_0+3
$010D	$0DF0			RLF	STACK_0, 1
$010E	$0DF1			RLF	STACK_0+1, 1
$010F	$0DF2			RLF	STACK_0+2, 1
$0110	$0DF3			RLF	STACK_0+3, 1
$0111	$1070			BCF	STACK_0, 0
$0112	$3000			MOVLW	0
$0113	$05AE			ANDWF	FloatToStr_un_L0, 1
$0114	$3000			MOVLW	0
$0115	$05AF			ANDWF	FloatToStr_un_L0+1, 1
$0116	$3000			MOVLW	0
$0117	$05B0			ANDWF	FloatToStr_un_L0+2, 1
$0118	$30FF			MOVLW	255
$0119	$05B1			ANDWF	FloatToStr_un_L0+3, 1
$011A	$0870			MOVF	STACK_0, 0
$011B	$04AE			IORWF	FloatToStr_un_L0, 1
$011C	$0871			MOVF	STACK_0+1, 0
$011D	$04AF			IORWF	FloatToStr_un_L0+1, 1
$011E	$0872			MOVF	STACK_0+2, 0
$011F	$04B0			IORWF	FloatToStr_un_L0+2, 1
$0120	$0873			MOVF	STACK_0+3, 0
$0121	$04B1			IORWF	FloatToStr_un_L0+3, 1
$0122	$307F			MOVLW	127
$0123	$0231			SUBWF	FloatToStr_un_L0+3, 0
$0124	$00F0			MOVWF	STACK_0
$0125	$0870			MOVF	STACK_0, 0
$0126	$00AC			MOVWF	FloatToStr_d_L0
$0127	$3001			MOVLW	1
$0128	$00B1			MOVWF	FloatToStr_un_L0+3
$0129	$0870			MOVF	STACK_0, 0
$012A	$	L_FloatToStr_63:
$012A	$1903			BTFSC	STATUS, Z
$012B	$2933			GOTO	L_FloatToStr_64
$012C	$0DAE			RLF	FloatToStr_un_L0, 1
$012D	$0DAF			RLF	FloatToStr_un_L0+1, 1
$012E	$0DB0			RLF	FloatToStr_un_L0+2, 1
$012F	$0DB1			RLF	FloatToStr_un_L0+3, 1
$0130	$102E			BCF	FloatToStr_un_L0, 0
$0131	$3FFF			ADDLW	255
$0132	$292A			GOTO	L_FloatToStr_63
$0133	$	L_FloatToStr_64:
$0133	$0831			MOVF	FloatToStr_un_L0+3, 0
$0134	$3F30			ADDLW	48
$0135	$00F0			MOVWF	STACK_0
$0136	$1283			BCF	STATUS, RP0
$0137	$0863			MOVF	FARG_FloatToStr+4, 0
$0138	$0084			MOVWF	FSR
$0139	$0870			MOVF	STACK_0, 0
$013A	$0080			MOVWF	INDF
$013B	$0AE3			INCF	FARG_FloatToStr+4, 1
$013C	$3080			MOVLW	128
$013D	$1683			BSF	STATUS, RP0
$013E	$062D			XORWF	FloatToStr_dexpon_L0, 0
$013F	$00F0			MOVWF	STACK_0
$0140	$3080			MOVLW	128
$0141	$3A01			XORLW	1
$0142	$0270			SUBWF	STACK_0, 0
$0143	$1C03			BTFSS	STATUS, C
$0144	$294D			GOTO	L374_ex_L_FloatToStr_39
$0145	$3080			MOVLW	128
$0146	$3A06			XORLW	6
$0147	$00F0			MOVWF	STACK_0
$0148	$3080			MOVLW	128
$0149	$062D			XORWF	FloatToStr_dexpon_L0, 0
$014A	$0270			SUBWF	STACK_0, 0
$014B	$1803			BTFSC	STATUS, C
$014C	$2956			GOTO	L_FloatToStr_39
$014D	$	L374_ex_L_FloatToStr_39:
$014D	$1283			BCF	STATUS, RP0
$014E	$0863			MOVF	FARG_FloatToStr+4, 0
$014F	$0084			MOVWF	FSR
$0150	$302E			MOVLW	46
$0151	$0080			MOVWF	INDF
$0152	$0AE3			INCF	FARG_FloatToStr+4, 1
$0153	$3001			MOVLW	1
$0154	$1683			BSF	STATUS, RP0
$0155	$00AA			MOVWF	FloatToStr_bpoint_L0
$0156	$	L_FloatToStr_39:
$0156	$3006			MOVLW	6
$0157	$00AC			MOVWF	FloatToStr_d_L0
$0158	$	L_FloatToStr_40:
$0158	$082C			MOVF	FloatToStr_d_L0, 0
$0159	$3A00			XORLW	0
$015A	$1903			BTFSC	STATUS, Z
$015B	$29A0			GOTO	L_FloatToStr_41
$015C	$01B1			CLRF	FloatToStr_un_L0+3, 1
$015D	$082E			MOVF	FloatToStr_un_L0, 0
$015E	$00F0			MOVWF	STACK_0
$015F	$082F			MOVF	FloatToStr_un_L0+1, 0
$0160	$00F1			MOVWF	STACK_0+1
$0161	$0830			MOVF	FloatToStr_un_L0+2, 0
$0162	$00F2			MOVWF	STACK_0+2
$0163	$0831			MOVF	FloatToStr_un_L0+3, 0
$0164	$00F3			MOVWF	STACK_0+3
$0165	$0DF0			RLF	STACK_0, 1
$0166	$0DF1			RLF	STACK_0+1, 1
$0167	$0DF2			RLF	STACK_0+2, 1
$0168	$0DF3			RLF	STACK_0+3, 1
$0169	$1070			BCF	STACK_0, 0
$016A	$0DF0			RLF	STACK_0, 1
$016B	$0DF1			RLF	STACK_0+1, 1
$016C	$0DF2			RLF	STACK_0+2, 1
$016D	$0DF3			RLF	STACK_0+3, 1
$016E	$1070			BCF	STACK_0, 0
$016F	$0870			MOVF	STACK_0, 0
$0170	$07AE			ADDWF	FloatToStr_un_L0, 1
$0171	$0871			MOVF	STACK_0+1, 0
$0172	$1803			BTFSC	STATUS, C
$0173	$0F71			INCFSZ	STACK_0+1, 0
$0174	$07AF			ADDWF	FloatToStr_un_L0+1, 1
$0175	$0872			MOVF	STACK_0+2, 0
$0176	$1803			BTFSC	STATUS, C
$0177	$0F72			INCFSZ	STACK_0+2, 0
$0178	$07B0			ADDWF	FloatToStr_un_L0+2, 1
$0179	$0873			MOVF	STACK_0+3, 0
$017A	$1803			BTFSC	STATUS, C
$017B	$0F73			INCFSZ	STACK_0+3, 0
$017C	$07B1			ADDWF	FloatToStr_un_L0+3, 1
$017D	$0DAE			RLF	FloatToStr_un_L0, 1
$017E	$0DAF			RLF	FloatToStr_un_L0+1, 1
$017F	$0DB0			RLF	FloatToStr_un_L0+2, 1
$0180	$0DB1			RLF	FloatToStr_un_L0+3, 1
$0181	$102E			BCF	FloatToStr_un_L0, 0
$0182	$0831			MOVF	FloatToStr_un_L0+3, 0
$0183	$3F30			ADDLW	48
$0184	$00F0			MOVWF	STACK_0
$0185	$1283			BCF	STATUS, RP0
$0186	$0863			MOVF	FARG_FloatToStr+4, 0
$0187	$0084			MOVWF	FSR
$0188	$0870			MOVF	STACK_0, 0
$0189	$0080			MOVWF	INDF
$018A	$0AE3			INCF	FARG_FloatToStr+4, 1
$018B	$1683			BSF	STATUS, RP0
$018C	$082A			MOVF	FloatToStr_bpoint_L0, 0
$018D	$3A00			XORLW	0
$018E	$1D03			BTFSS	STATUS, Z
$018F	$299E			GOTO	L_FloatToStr_43
$0190	$03AD			DECF	FloatToStr_dexpon_L0, 1
$0191	$082D			MOVF	FloatToStr_dexpon_L0, 0
$0192	$3A00			XORLW	0
$0193	$1D03			BTFSS	STATUS, Z
$0194	$299E			GOTO	L_FloatToStr_44
$0195	$1283			BCF	STATUS, RP0
$0196	$0863			MOVF	FARG_FloatToStr+4, 0
$0197	$0084			MOVWF	FSR
$0198	$302E			MOVLW	46
$0199	$0080			MOVWF	INDF
$019A	$0AE3			INCF	FARG_FloatToStr+4, 1
$019B	$3001			MOVLW	1
$019C	$1683			BSF	STATUS, RP0
$019D	$00AA			MOVWF	FloatToStr_bpoint_L0
$019E	$	L_FloatToStr_44:
$019E	$	L_FloatToStr_43:
$019E	$	L_FloatToStr_42:
$019E	$03AC			DECF	FloatToStr_d_L0, 1
$019F	$2958			GOTO	L_FloatToStr_40
$01A0	$	L_FloatToStr_41:
$01A0	$	L_FloatToStr_45:
$01A0	$30FF			MOVLW	255
$01A1	$1283			BCF	STATUS, RP0
$01A2	$0763			ADDWF	FARG_FloatToStr+4, 0
$01A3	$0084			MOVWF	FSR
$01A4	$0800			MOVF	INDF, 0
$01A5	$00F4			MOVWF	STACK_4
$01A6	$0874			MOVF	STACK_4, 0
$01A7	$3A30			XORLW	48
$01A8	$1D03			BTFSS	STATUS, Z
$01A9	$29AC			GOTO	L_FloatToStr_46
$01AA	$03E3			DECF	FARG_FloatToStr+4, 1
$01AB	$29A0			GOTO	L_FloatToStr_45
$01AC	$	L_FloatToStr_46:
$01AC	$30FF			MOVLW	255
$01AD	$0763			ADDWF	FARG_FloatToStr+4, 0
$01AE	$0084			MOVWF	FSR
$01AF	$0800			MOVF	INDF, 0
$01B0	$00F4			MOVWF	STACK_4
$01B1	$0874			MOVF	STACK_4, 0
$01B2	$3A2E			XORLW	46
$01B3	$1D03			BTFSS	STATUS, Z
$01B4	$29B6			GOTO	L_FloatToStr_47
$01B5	$03E3			DECF	FARG_FloatToStr+4, 1
$01B6	$	L_FloatToStr_47:
$01B6	$1683			BSF	STATUS, RP0
$01B7	$082D			MOVF	FloatToStr_dexpon_L0, 0
$01B8	$3A00			XORLW	0
$01B9	$1903			BTFSC	STATUS, Z
$01BA	$29F9			GOTO	L_FloatToStr_48
$01BB	$1283			BCF	STATUS, RP0
$01BC	$0863			MOVF	FARG_FloatToStr+4, 0
$01BD	$0084			MOVWF	FSR
$01BE	$3065			MOVLW	101
$01BF	$0080			MOVWF	INDF
$01C0	$0AE3			INCF	FARG_FloatToStr+4, 1
$01C1	$3080			MOVLW	128
$01C2	$1683			BSF	STATUS, RP0
$01C3	$062D			XORWF	FloatToStr_dexpon_L0, 0
$01C4	$00F0			MOVWF	STACK_0
$01C5	$3080			MOVLW	128
$01C6	$3A00			XORLW	0
$01C7	$0270			SUBWF	STACK_0, 0
$01C8	$1803			BTFSC	STATUS, C
$01C9	$29D4			GOTO	L_FloatToStr_49
$01CA	$1283			BCF	STATUS, RP0
$01CB	$0863			MOVF	FARG_FloatToStr+4, 0
$01CC	$0084			MOVWF	FSR
$01CD	$302D			MOVLW	45
$01CE	$0080			MOVWF	INDF
$01CF	$0AE3			INCF	FARG_FloatToStr+4, 1
$01D0	$1683			BSF	STATUS, RP0
$01D1	$082D			MOVF	FloatToStr_dexpon_L0, 0
$01D2	$3C00			SUBLW	0
$01D3	$00AD			MOVWF	FloatToStr_dexpon_L0
$01D4	$	L_FloatToStr_49:
$01D4	$082D			MOVF	FloatToStr_dexpon_L0, 0
$01D5	$00AC			MOVWF	FloatToStr_d_L0
$01D6	$082D			MOVF	FloatToStr_dexpon_L0, 0
$01D7	$3C09			SUBLW	9
$01D8	$1803			BTFSC	STATUS, C
$01D9	$29E8			GOTO	L_FloatToStr_50
$01DA	$300A			MOVLW	10
$01DB	$00F4			MOVWF	STACK_4
$01DC	$082C			MOVF	FloatToStr_d_L0, 0
$01DD	$00F0			MOVWF	STACK_0
$01DE	$158A			BSF	PCLATH, 3
$01DF	$2068			CALL	_div_8x8_u
$01E0	$118A			BCF	PCLATH, 3
$01E1	$3030			MOVLW	48
$01E2	$07F0			ADDWF	STACK_0, 1
$01E3	$0863			MOVF	FARG_FloatToStr+4, 0
$01E4	$0084			MOVWF	FSR
$01E5	$0870			MOVF	STACK_0, 0
$01E6	$0080			MOVWF	INDF
$01E7	$0AE3			INCF	FARG_FloatToStr+4, 1
$01E8	$	L_FloatToStr_50:
$01E8	$300A			MOVLW	10
$01E9	$00F4			MOVWF	STACK_4
$01EA	$1683			BSF	STATUS, RP0
$01EB	$082C			MOVF	FloatToStr_d_L0, 0
$01EC	$00F0			MOVWF	STACK_0
$01ED	$158A			BSF	PCLATH, 3
$01EE	$2068			CALL	_div_8x8_u
$01EF	$118A			BCF	PCLATH, 3
$01F0	$0878			MOVF	STACK_8, 0
$01F1	$00F0			MOVWF	STACK_0
$01F2	$3030			MOVLW	48
$01F3	$07F0			ADDWF	STACK_0, 1
$01F4	$0863			MOVF	FARG_FloatToStr+4, 0
$01F5	$0084			MOVWF	FSR
$01F6	$0870			MOVF	STACK_0, 0
$01F7	$0080			MOVWF	INDF
$01F8	$0AE3			INCF	FARG_FloatToStr+4, 1
$01F9	$	L_FloatToStr_48:
$01F9	$1303			BCF	STATUS, RP1
$01FA	$1283			BCF	STATUS, RP0
$01FB	$0863			MOVF	FARG_FloatToStr+4, 0
$01FC	$0084			MOVWF	FSR
$01FD	$0180			CLRF	INDF, 1
$01FE	$01F0			CLRF	STACK_0, 1
$01FF	$0008			RETURN
$06BF	$	GlobalIniGP2D120Test:
$06BF	$3000			MOVLW	0
$06C0	$1303			BCF	STATUS, RP1
$06C1	$1283			BCF	STATUS, RP0
$06C2	$00A3			MOVWF	_GP2+0
$06C3	$3000			MOVLW	0
$06C4	$00A4			MOVWF	_GP2+1
$06C5	$3052			MOVLW	82
$06C6	$00A5			MOVWF	lstr1_GP2D120Test+0
$06C7	$3041			MOVLW	65
$06C8	$00A6			MOVWF	lstr1_GP2D120Test+1
$06C9	$3057			MOVLW	87
$06CA	$00A7			MOVWF	lstr1_GP2D120Test+2
$06CB	$3020			MOVLW	32
$06CC	$00A8			MOVWF	lstr1_GP2D120Test+3
$06CD	$3056			MOVLW	86
$06CE	$00A9			MOVWF	lstr1_GP2D120Test+4
$06CF	$3061			MOVLW	97
$06D0	$00AA			MOVWF	lstr1_GP2D120Test+5
$06D1	$306C			MOVLW	108
$06D2	$00AB			MOVWF	lstr1_GP2D120Test+6
$06D3	$3075			MOVLW	117
$06D4	$00AC			MOVWF	lstr1_GP2D120Test+7
$06D5	$3065			MOVLW	101
$06D6	$00AD			MOVWF	lstr1_GP2D120Test+8
$06D7	$303D			MOVLW	61
$06D8	$00AE			MOVWF	lstr1_GP2D120Test+9
$06D9	$01AF			CLRF	lstr1_GP2D120Test+10
$06DA	$3025			MOVLW	lstr1_GP2D120Test
$06DB	$00B0			MOVWF	_text1+0
$06DC	$3046			MOVLW	70
$06DD	$00B1			MOVWF	lstr2_GP2D120Test+0
$06DE	$3061			MOVLW	97
$06DF	$00B2			MOVWF	lstr2_GP2D120Test+1
$06E0	$3072			MOVLW	114
$06E1	$00B3			MOVWF	lstr2_GP2D120Test+2
$06E2	$303D			MOVLW	61
$06E3	$00B4			MOVWF	lstr2_GP2D120Test+3
$06E4	$3020			MOVLW	32
$06E5	$00B5			MOVWF	lstr2_GP2D120Test+4
$06E6	$3043			MOVLW	67
$06E7	$00B6			MOVWF	lstr2_GP2D120Test+5
$06E8	$304D			MOVLW	77
$06E9	$00B7			MOVWF	lstr2_GP2D120Test+6
$06EA	$01B8			CLRF	lstr2_GP2D120Test+7
$06EB	$3031			MOVLW	lstr2_GP2D120Test
$06EC	$00B9			MOVWF	_text2+0
$06ED	$304F			MOVLW	79
$06EE	$00BA			MOVWF	lstr3_GP2D120Test+0
$06EF	$3075			MOVLW	117
$06F0	$00BB			MOVWF	lstr3_GP2D120Test+1
$06F1	$3074			MOVLW	116
$06F2	$00BC			MOVWF	lstr3_GP2D120Test+2
$06F3	$3020			MOVLW	32
$06F4	$00BD			MOVWF	lstr3_GP2D120Test+3
$06F5	$306F			MOVLW	111
$06F6	$00BE			MOVWF	lstr3_GP2D120Test+4
$06F7	$3066			MOVLW	102
$06F8	$00BF			MOVWF	lstr3_GP2D120Test+5
$06F9	$3020			MOVLW	32
$06FA	$00C0			MOVWF	lstr3_GP2D120Test+6
$06FB	$3052			MOVLW	82
$06FC	$00C1			MOVWF	lstr3_GP2D120Test+7
$06FD	$3061			MOVLW	97
$06FE	$00C2			MOVWF	lstr3_GP2D120Test+8
$06FF	$306E			MOVLW	110
$0700	$00C3			MOVWF	lstr3_GP2D120Test+9
$0701	$3067			MOVLW	103
$0702	$00C4			MOVWF	lstr3_GP2D120Test+10
$0703	$3065			MOVLW	101
$0704	$00C5			MOVWF	lstr3_GP2D120Test+11
$0705	$01C6			CLRF	lstr3_GP2D120Test+12
$0706	$303A			MOVLW	lstr3_GP2D120Test
$0707	$00C7			MOVWF	_text3+0
$0708	$0008			RETURN
$0709	$	_Int2Double:
$0709	$1303			BCF	STATUS, RP1
$070A	$1283			BCF	STATUS, RP0
$070B	$0870			MOVF	STACK_0, W
$070C	$00F8			MOVWF	STACK_8
$070D	$0871			MOVF	STACK_1, W
$070E	$00F0			MOVWF	STACK_0
$070F	$01F1			CLRF	STACK_1
$0710	$01F2			CLRF	STACK_2
$0711	$01F3			CLRF	STACK_3
$0712	$	FLO1632:
$0712	$01FB			CLRF	STACK_11
$0713	$01FC			CLRF	STACK_12
$0714	$3096			MOVLW	150
$0715	$00F3			MOVWF	STACK_3
$0716	$01FA			CLRF	STACK_10
$0717	$1FF0			BTFSS	STACK_0, 7
$0718	$2F1F			GOTO	FLO1632EEE
$0719	$09F8			COMF	STACK_8, F
$071A	$09F0			COMF	STACK_0, F
$071B	$0AF8			INCF	STACK_8, F
$071C	$1903			BTFSC	STATUS, Z
$071D	$0AF0			INCF	STACK_0, F
$071E	$17FA			BSF	STACK_10, 7
$071F	$	FLO1632EEE:
$071F	$0870			MOVF	STACK_0, W
$0720	$00F1			MOVWF	STACK_1
$0721	$0878			MOVF	STACK_8, W
$0722	$00F0			MOVWF	STACK_0
$0723	$01F8			CLRF	STACK_8
$0724	$01F2			CLRF	STACK_2
$0725	$158A			BSF	PCLATH, 3
$0726	$2000			CALL	_NRM3232
$0727	$118A			BCF	PCLATH, 3
$0728	$0008			RETURN
$034C	$	_Div_32x32_FP:
$034C	$1303			BCF	STATUS, RP1
$034D	$1283			BCF	STATUS, RP0
$034E	$	FPD32:
$034E	$0877			MOVF	STACK_7, W
$034F	$1903			BTFSC	STATUS, Z
$0350	$2BDB			GOTO	JPDSETFDZ32
$0351	$0873			MOVF	STACK_3, W
$0352	$1903			BTFSC	STATUS, Z
$0353	$2BE0			GOTO	JPDRES032
$0354	$	D32BNE0:
$0354	$0872			MOVF	STACK_2, W
$0355	$0676			XORWF	STACK_6, W
$0356	$3980			ANDLW	128
$0357	$00FA			MOVWF	STACK_10
$0358	$17F2			BSF	STACK_2, 7
$0359	$17F6			BSF	STACK_6, 7
$035A	$	TALIGN32:
$035A	$01A0			CLRF	__math_tempbD
$035B	$0872			MOVF	STACK_2, W
$035C	$00F8			MOVWF	STACK_8
$035D	$0871			MOVF	STACK_1, W
$035E	$00FC			MOVWF	STACK_12
$035F	$0870			MOVF	STACK_0, W
$0360	$00FD			MOVWF	STACK_13
$0361	$0874			MOVF	STACK_4, W
$0362	$02FD			SUBWF	STACK_13, F
$0363	$0875			MOVF	STACK_5, W
$0364	$1C03			BTFSS	STATUS, C
$0365	$0F75			INCFSZ	STACK_5, W
$0366	$	TS1ALIGN32:
$0366	$02FC			SUBWF	STACK_12, F
$0367	$0876			MOVF	STACK_6, W
$0368	$1C03			BTFSS	STATUS, C
$0369	$0F76			INCFSZ	STACK_6, W
$036A	$	TS2ALIGN32:
$036A	$02F8			SUBWF	STACK_8, F
$036B	$01F8			CLRF	STACK_8
$036C	$01FC			CLRF	STACK_12
$036D	$01FD			CLRF	STACK_13
$036E	$1C03			BTFSS	STATUS, C
$036F	$2B77			GOTO	DALIGN32OK
$0370	$1003			BCF	STATUS, C
$0371	$0CF2			RRF	STACK_2, F
$0372	$0CF1			RRF	STACK_1, F
$0373	$0CF0			RRF	STACK_0, F
$0374	$0CF8			RRF	STACK_8, F
$0375	$3001			MOVLW	0x01
$0376	$00A0			MOVWF	__math_tempbD
$0377	$	DALIGN32OK:
$0377	$0877			MOVF	STACK_7, W
$0378	$02F3			SUBWF	STACK_3, F
$0379	$1C03			BTFSS	STATUS, C
$037A	$2B81			GOTO	ALTB32
$037B	$	AGEB32:
$037B	$307E			MOVLW	126
$037C	$0720			ADDWF	__math_tempbD, W
$037D	$07F3			ADDWF	STACK_3, F
$037E	$1803			BTFSC	STATUS, C
$037F	$2BE5			GOTO	JPDSETFOV32
$0380	$2B86			GOTO	DARGOK32
$0381	$	ALTB32:
$0381	$307E			MOVLW	126
$0382	$0720			ADDWF	__math_tempbD, W
$0383	$07F3			ADDWF	STACK_3, F
$0384	$1C03			BTFSS	STATUS, C
$0385	$2BEA			GOTO	JPDSETFUN32
$0386	$	DARGOK32:
$0386	$3018			MOVLW	24
$0387	$07FA			ADDWF	STACK_10, F
$0388	$	DLOOP32:
$0388	$0DFD			RLF	STACK_13, F
$0389	$0DFC			RLF	STACK_12, F
$038A	$0DF8			RLF	STACK_8, F
$038B	$0DF0			RLF	STACK_0, F
$038C	$0DF1			RLF	STACK_1, F
$038D	$0DF2			RLF	STACK_2, F
$038E	$0DA0			RLF	__math_tempbD, F
$038F	$0874			MOVF	STACK_4, W
$0390	$02F0			SUBWF	STACK_0, F
$0391	$0875			MOVF	STACK_5, W
$0392	$1C03			BTFSS	STATUS, C
$0393	$0F75			INCFSZ	STACK_5, W
$0394	$	DS132:
$0394	$02F1			SUBWF	STACK_1, F
$0395	$0876			MOVF	STACK_6, W
$0396	$1C03			BTFSS	STATUS, C
$0397	$0F76			INCFSZ	STACK_6, W
$0398	$	DS232:
$0398	$02F2			SUBWF	STACK_2, F
$0399	$0D76			RLF	STACK_6, W
$039A	$04A0			IORWF	__math_tempbD, F
$039B	$1C20			BTFSS	__math_tempbD, 0
$039C	$2B9F			GOTO	DREST32
$039D	$147D			BSF	STACK_13, 0
$039E	$2BAA			GOTO	DOK32
$039F	$	DREST32:
$039F	$0874			MOVF	STACK_4, W
$03A0	$07F0			ADDWF	STACK_0, F
$03A1	$0875			MOVF	STACK_5, W
$03A2	$1803			BTFSC	STATUS, C
$03A3	$0F75			INCFSZ	STACK_5, W
$03A4	$	DAREST32:
$03A4	$07F1			ADDWF	STACK_1, F
$03A5	$0876			MOVF	STACK_6, W
$03A6	$1803			BTFSC	STATUS, C
$03A7	$0A76			INCF	STACK_6, W
$03A8	$07F2			ADDWF	STACK_2, F
$03A9	$107D			BCF	STACK_13, 0
$03AA	$	DOK32:
$03AA	$03FA			DECF	STACK_10, F
$03AB	$301F			MOVLW	31
$03AC	$057A			ANDWF	STACK_10, W
$03AD	$1D03			BTFSS	STATUS, Z
$03AE	$2B88			GOTO	DLOOP32
$03AF	$	DROUND32:
$03AF	$1B7B			BTFSC	STACK_11, 6
$03B0	$1C7D			BTFSS	STACK_13, 0
$03B1	$2BD1			GOTO	DIV32OK
$03B2	$1003			BCF	STATUS, C
$03B3	$0DF0			RLF	STACK_0, F
$03B4	$0DF1			RLF	STACK_1, F
$03B5	$0DF2			RLF	STACK_2, F
$03B6	$0DA0			RLF	__math_tempbD, F
$03B7	$0874			MOVF	STACK_4, W
$03B8	$02F0			SUBWF	STACK_0, F
$03B9	$0875			MOVF	STACK_5, W
$03BA	$1C03			BTFSS	STATUS, C
$03BB	$0F75			INCFSZ	STACK_5, W
$03BC	$02F1			SUBWF	STACK_1, F
$03BD	$0876			MOVF	STACK_6, W
$03BE	$1C03			BTFSS	STATUS, C
$03BF	$0F76			INCFSZ	STACK_6, W
$03C0	$02F2			SUBWF	STACK_2, F
$03C1	$0D76			RLF	STACK_6, W
$03C2	$0420			IORWF	__math_tempbD, W
$03C3	$3901			ANDLW	0x01
$03C4	$07FD			ADDWF	STACK_13, F
$03C5	$1803			BTFSC	STATUS, C
$03C6	$0AFC			INCF	STACK_12, F
$03C7	$1903			BTFSC	STATUS, Z
$03C8	$0AF8			INCF	STACK_8, F
$03C9	$1D03			BTFSS	STATUS, Z
$03CA	$2BD1			GOTO	DIV32OK
$03CB	$0CF8			RRF	STACK_8, F
$03CC	$0CFC			RRF	STACK_12, F
$03CD	$0CFD			RRF	STACK_13, F
$03CE	$0AF3			INCF	STACK_3, F
$03CF	$1903			BTFSC	STATUS, Z
$03D0	$2BE5			GOTO	JPDSETFOV32
$03D1	$	DIV32OK:
$03D1	$1FFA			BTFSS	STACK_10, 7
$03D2	$13F8			BCF	STACK_8, 7
$03D3	$0878			MOVF	STACK_8, W
$03D4	$00F2			MOVWF	STACK_2
$03D5	$087C			MOVF	STACK_12, W
$03D6	$00F1			MOVWF	STACK_1
$03D7	$087D			MOVF	STACK_13, W
$03D8	$00F0			MOVWF	STACK_0
$03D9	$3000			MOVLW	0x00
$03DA	$2BEE			GOTO	DIV32EEE
$03DB	$	JPDSETFDZ32:
$03DB	$3001			MOVLW	0x01
$03DC	$158A			BSF	PCLATH, 3
$03DD	$20BF			CALL	_SETFDZ32
$03DE	$118A			BCF	PCLATH, 3
$03DF	$2BEE			GOTO	DIV32EEE
$03E0	$	JPDRES032:
$03E0	$3002			MOVLW	0x02
$03E1	$158A			BSF	PCLATH, 3
$03E2	$20A8			CALL	_RES032
$03E3	$118A			BCF	PCLATH, 3
$03E4	$2BEE			GOTO	DIV32EEE
$03E5	$	JPDSETFOV32:
$03E5	$3004			MOVLW	0x04
$03E6	$158A			BSF	PCLATH, 3
$03E7	$2079			CALL	_SETFOV32
$03E8	$118A			BCF	PCLATH, 3
$03E9	$2BEE			GOTO	DIV32EEE
$03EA	$	JPDSETFUN32:
$03EA	$3008			MOVLW	0x08
$03EB	$158A			BSF	PCLATH, 3
$03EC	$2087			CALL	_SETFUN32
$03ED	$118A			BCF	PCLATH, 3
$03EE	$	DIV32EEE:
$03EE	$0000			NOP
$03EF	$0008			RETURN
$08A0	$	_Sub_32x32_FP:
$08A0	$1303			BCF	STATUS, RP1
$08A1	$1283			BCF	STATUS, RP0
$08A2	$3080			MOVLW	0x80
$08A3	$06F6			XORWF	STACK_6, F
$08A4	$118A			BCF	PCLATH, 3
$08A5	$22A8			CALL	_Add_32x32_FP
$08A6	$158A			BSF	PCLATH, 3
$08A7	$0008			RETURN
$0200	$	_main:
;GP2D120Test.c,9 :: 		void main()
;GP2D120Test.c,11 :: 		Lcd_Init(&PORTD);          // Init LCD Port
$0200	$26BF			CALL	GlobalIniGP2D120Test
$0201	$3008			MOVLW	PORTD
$0202	$00DF			MOVWF	FARG_Lcd_Init+0
$0203	$2478			CALL	_Lcd_Init
;GP2D120Test.c,12 :: 		Lcd_Cmd(LCD_CURSOR_OFF);   // LCD cursor off
$0204	$300C			MOVLW	12
$0205	$00E7			MOVWF	FARG_Lcd_Cmd+0
$0206	$2638			CALL	_Lcd_Cmd
;GP2D120Test.c,13 :: 		Lcd_Cmd(LCD_CLEAR);
$0207	$3001			MOVLW	1
$0208	$00E7			MOVWF	FARG_Lcd_Cmd+0
$0209	$2638			CALL	_Lcd_Cmd
;GP2D120Test.c,14 :: 		while(1)
$020A	$	L_main_11:
;GP2D120Test.c,16 :: 		GP2=Adc_Rd(2);          // Read ADC CH 2
$020A	$3002			MOVLW	2
$020B	$00DF			MOVWF	FARG_Adc_Rd+0
$020C	$23F0			CALL	_Adc_Rd
$020D	$0870			MOVF	STACK_0, 0
$020E	$00A3			MOVWF	_GP2
$020F	$0871			MOVF	STACK_0+1, 0
$0210	$00A4			MOVWF	_GP2+1
;GP2D120Test.c,17 :: 		WordToStr(GP2,txt1);    // Convert Raw Data to String
$0211	$0870			MOVF	STACK_0, 0
$0212	$00DF			MOVWF	FARG_WordToStr+0
$0213	$0871			MOVF	STACK_0+1, 0
$0214	$00E0			MOVWF	FARG_WordToStr+1
$0215	$3048			MOVLW	_txt1
$0216	$00E1			MOVWF	FARG_WordToStr+2
$0217	$258F			CALL	_WordToStr
;GP2D120Test.c,18 :: 		Lcd_Cmd(LCD_CLEAR);     // Clear Screen
$0218	$3001			MOVLW	1
$0219	$00E7			MOVWF	FARG_Lcd_Cmd+0
$021A	$2638			CALL	_Lcd_Cmd
;GP2D120Test.c,19 :: 		Lcd_Out(1,1,text1);     // Show Line 1 Text
$021B	$3001			MOVLW	1
$021C	$00DF			MOVWF	FARG_LCD_Out+0
$021D	$3001			MOVLW	1
$021E	$00E0			MOVWF	FARG_LCD_Out+1
$021F	$0830			MOVF	_text1, 0
$0220	$00E1			MOVWF	FARG_LCD_Out+2
$0221	$267A			CALL	_LCD_Out
;GP2D120Test.c,20 :: 		Lcd_Out(1,12,txt1);     // Show Raw Data
$0222	$3001			MOVLW	1
$0223	$00DF			MOVWF	FARG_LCD_Out+0
$0224	$300C			MOVLW	12
$0225	$00E0			MOVWF	FARG_LCD_Out+1
$0226	$3048			MOVLW	_txt1
$0227	$00E1			MOVWF	FARG_LCD_Out+2
$0228	$267A			CALL	_LCD_Out
;GP2D120Test.c,21 :: 		if (GP2>90)             // Check Gp2 Out of Range ?
$0229	$3080			MOVLW	128
$022A	$00F0			MOVWF	STACK_0
$022B	$3080			MOVLW	128
$022C	$0624			XORWF	_GP2+1, 0
$022D	$0270			SUBWF	STACK_0, 0
$022E	$1D03			BTFSS	STATUS, Z
$022F	$2A32			GOTO	L_main_27
$0230	$0823			MOVF	_GP2, 0
$0231	$3C5A			SUBLW	90
$0232	$	L_main_27:
$0232	$1803			BTFSC	STATUS, C
$0233	$2A7E			GOTO	L_main_13
;GP2D120Test.c,23 :: 		Distance=(2914.0/(GP2+5))-1;  // Convert to Centimeter
$0234	$3005			MOVLW	5
$0235	$0723			ADDWF	_GP2, 0
$0236	$00F0			MOVWF	STACK_0
$0237	$0824			MOVF	_GP2+1, 0
$0238	$1803			BTFSC	STATUS, C
$0239	$3F01			ADDLW	1
$023A	$00F1			MOVWF	STACK_0+1
$023B	$3000			MOVLW	0
$023C	$07F1			ADDWF	STACK_0+1, 1
$023D	$2709			CALL	_int2double
$023E	$0870			MOVF	STACK_0, 0
$023F	$00F4			MOVWF	STACK_4
$0240	$0871			MOVF	STACK_0+1, 0
$0241	$00F5			MOVWF	STACK_4+1
$0242	$0872			MOVF	STACK_0+2, 0
$0243	$00F6			MOVWF	STACK_4+2
$0244	$0873			MOVF	STACK_0+3, 0
$0245	$00F7			MOVWF	STACK_4+3
$0246	$3000			MOVLW	0
$0247	$00F0			MOVWF	STACK_0
$0248	$3020			MOVLW	32
$0249	$00F1			MOVWF	STACK_0+1
$024A	$3036			MOVLW	54
$024B	$00F2			MOVWF	STACK_0+2
$024C	$308A			MOVLW	138
$024D	$00F3			MOVWF	STACK_0+3
$024E	$234C			CALL	_div_32x32_fp
$024F	$3000			MOVLW	0
$0250	$00F4			MOVWF	STACK_4
$0251	$3000			MOVLW	0
$0252	$00F5			MOVWF	STACK_4+1
$0253	$3000			MOVLW	0
$0254	$00F6			MOVWF	STACK_4+2
$0255	$307F			MOVLW	127
$0256	$00F7			MOVWF	STACK_4+3
$0257	$158A			BSF	PCLATH, 3
$0258	$20A0			CALL	_sub_32x32_fp
$0259	$118A			BCF	PCLATH, 3
$025A	$0870			MOVF	STACK_0, 0
$025B	$00CE			MOVWF	_Distance
$025C	$0871			MOVF	STACK_0+1, 0
$025D	$00CF			MOVWF	_Distance+1
$025E	$0872			MOVF	STACK_0+2, 0
$025F	$00D0			MOVWF	_Distance+2
$0260	$0873			MOVF	STACK_0+3, 0
$0261	$00D1			MOVWF	_Distance+3
;GP2D120Test.c,24 :: 		FloatToStr(Distance,txt);     // Convert to String
$0262	$0870			MOVF	STACK_0, 0
$0263	$00DF			MOVWF	FARG_FloatToStr+0
$0264	$0871			MOVF	STACK_0+1, 0
$0265	$00E0			MOVWF	FARG_FloatToStr+1
$0266	$0872			MOVF	STACK_0+2, 0
$0267	$00E1			MOVWF	FARG_FloatToStr+2
$0268	$0873			MOVF	STACK_0+3, 0
$0269	$00E2			MOVWF	FARG_FloatToStr+3
$026A	$3052			MOVLW	_txt
$026B	$00E3			MOVWF	FARG_FloatToStr+4
$026C	$2004			CALL	_FloatToStr
;GP2D120Test.c,25 :: 		Lcd_Out(2,1,text2);           // Show on LCD
$026D	$3002			MOVLW	2
$026E	$1303			BCF	STATUS, RP1
$026F	$1283			BCF	STATUS, RP0
$0270	$00DF			MOVWF	FARG_LCD_Out+0
$0271	$3001			MOVLW	1
$0272	$00E0			MOVWF	FARG_LCD_Out+1
$0273	$0839			MOVF	_text2, 0
$0274	$00E1			MOVWF	FARG_LCD_Out+2
$0275	$267A			CALL	_LCD_Out
;GP2D120Test.c,26 :: 		Lcd_Out(2,5,txt);
$0276	$3002			MOVLW	2
$0277	$00DF			MOVWF	FARG_LCD_Out+0
$0278	$3005			MOVLW	5
$0279	$00E0			MOVWF	FARG_LCD_Out+1
$027A	$3052			MOVLW	_txt
$027B	$00E1			MOVWF	FARG_LCD_Out+2
$027C	$267A			CALL	_LCD_Out
;GP2D120Test.c,27 :: 		}
$027D	$2A85			GOTO	L_main_14
$027E	$	L_main_13:
;GP2D120Test.c,29 :: 		Lcd_Out(2,1,text3);          // Show Out of Range
$027E	$3002			MOVLW	2
$027F	$00DF			MOVWF	FARG_LCD_Out+0
$0280	$3001			MOVLW	1
$0281	$00E0			MOVWF	FARG_LCD_Out+1
$0282	$0847			MOVF	_text3, 0
$0283	$00E1			MOVWF	FARG_LCD_Out+2
$0284	$267A			CALL	_LCD_Out
$0285	$	L_main_14:
;GP2D120Test.c,30 :: 		Delay_ms(400);
$0285	$300B			MOVLW	11
$0286	$00FC			MOVWF	STACK_12
$0287	$30FF			MOVLW	255
$0288	$00FB			MOVWF	STACK_11
$0289	$30FF			MOVLW	255
$028A	$00FA			MOVWF	STACK_10
$028B	$0BFC			DECFSZ	STACK_12, F
$028C	$2A8E			GOTO	$+2
$028D	$2A95			GOTO	$+8
$028E	$0BFB			DECFSZ	STACK_11, F
$028F	$2A91			GOTO	$+2
$0290	$2A94			GOTO	$+4
$0291	$0BFA			DECFSZ	STACK_10, F
$0292	$2A91			GOTO	$-1
$0293	$2A8E			GOTO	$-5
$0294	$2A8B			GOTO	$-9
$0295	$3033			MOVLW	51
$0296	$00FB			MOVWF	STACK_11
$0297	$30FF			MOVLW	255
$0298	$00FA			MOVWF	STACK_10
$0299	$0BFB			DECFSZ	STACK_11, F
$029A	$2A9C			GOTO	$+2
$029B	$2A9F			GOTO	$+4
$029C	$0BFA			DECFSZ	STACK_10, F
$029D	$2A9C			GOTO	$-1
$029E	$2A99			GOTO	$-5
$029F	$3087			MOVLW	135
$02A0	$00FA			MOVWF	STACK_10
$02A1	$0BFA			DECFSZ	STACK_10, F
$02A2	$2AA1			GOTO	$-1
$02A3	$0000			NOP
$02A4	$0000			NOP
$02A5	$0000			NOP
;GP2D120Test.c,31 :: 		}
$02A6	$2A0A			GOTO	L_main_11
;GP2D120Test.c,32 :: 		}
$02A7	$2AA7			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		FloatToStr
$0200		main
$02A8		Add_32x32_FP
$034C		Div_32x32_FP
$03F0		Adc_Rd
$0478		Lcd_Init
$04C4		Mul_32x32_FP
$052B		NRM4032
$058F		WordToStr
$05E8		Compare_Double
$0638		Lcd_Cmd
$067A		LCD_Out
$06BF		GlobalIniGP2D120Test
$0709		Int2Double
$0729		Delay_5500us
$073A		Delay_50us
$0800		NRM3232
$0831		Div_16x16_U
$084E		strcpy
$0868		Div_8x8_U
$0879		SETFOV32
$0887		SETFUN32
$0895		Lcd_Chr_CP
$08A0		Sub_32x32_FP
$08A8		RES032
$08B1		Delay_1us
$08B9		FIXSIGN32
$08BF		SETFDZ32


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_FloatToStr:
$0037		L_FloatToStr_60:
$0044		L_FloatToStr_29:
$0052		L_FloatToStr_30:
$0062		L_FloatToStr_61:
$006E		L_FloatToStr_31:
$007D		L_FloatToStr_62:
$008B		L_FloatToStr_32:
$008B		L_FloatToStr_33:
$00C0		L_FloatToStr_34:
$00C0		L_FloatToStr_35:
$00F7		L_FloatToStr_36:
$012A		L_FloatToStr_63:
$0133		L_FloatToStr_64:
$014D		L374_ex_L_FloatToStr_39:
$0156		L_FloatToStr_39:
$0158		L_FloatToStr_40:
$019E		L_FloatToStr_42:
$019E		L_FloatToStr_43:
$019E		L_FloatToStr_44:
$01A0		L_FloatToStr_41:
$01A0		L_FloatToStr_45:
$01AC		L_FloatToStr_46:
$01B6		L_FloatToStr_47:
$01D4		L_FloatToStr_49:
$01E8		L_FloatToStr_50:
$01F9		L_FloatToStr_48:
$0200		_main:
$020A		L_main_11:
$0232		L_main_27:
$027E		L_main_13:
$0285		L_main_14:
$02A8		_Add_32x32_FP:
$02CB		USEA32:
$02F4		ALIGNB32:
$02F7		ALOOPB32:
$02FE		ALIGNED32:
$030B		AOK32:
$0324		ACOMP32:
$0334		JMPNRMRND4032:
$0338		JMPNRM4032:
$033C		JMPNRM32:
$0342		ADD_JMPSETFOV32:
$0348		JMPEEE:
$034A		ADD32EEE:
$034C		_Div_32x32_FP:
$034E		FPD32:
$0354		D32BNE0:
$035A		TALIGN32:
$0366		TS1ALIGN32:
$036A		TS2ALIGN32:
$0377		DALIGN32OK:
$037B		AGEB32:
$0381		ALTB32:
$0386		DARGOK32:
$0388		DLOOP32:
$0394		DS132:
$0398		DS232:
$039F		DREST32:
$03A4		DAREST32:
$03AA		DOK32:
$03AF		DROUND32:
$03D1		DIV32OK:
$03DB		JPDSETFDZ32:
$03E0		JPDRES032:
$03E5		JPDSETFOV32:
$03EA		JPDSETFUN32:
$03EE		DIV32EEE:
$03F0		_Adc_Rd:
$03FA		L10_ex_L_Adc_Rd_2:
$03FF		L_Adc_Rd_15:
$0405		L_Adc_Rd_16:
$0409		L_Adc_Rd_2:
$0411		L_Adc_Rd_4:
$041A		L33_ex_L_Adc_Rd_8:
$0422		L_Adc_Rd_17:
$0428		L_Adc_Rd_18:
$042B		L_Adc_Rd_3:
$042B		L_Adc_Rd_5:
$042B		L_Adc_Rd_8:
$0433		L_Adc_Rd_19:
$0439		L_Adc_Rd_20:
$0444		L_Adc_Rd_21:
$044A		L_Adc_Rd_22:
$0453		L_Adc_Rd_9:
$0455		L_Adc_Rd_10:
$045B		L_Adc_Rd_23:
$0462		L_Adc_Rd_24:
$0468		L_Adc_Rd_25:
$046E		L_Adc_Rd_26:
$0478		_Lcd_Init:
$04C4		_Mul_32x32_FP:
$04C6		FPM32:
$04CC		M32BNE0:
$04D8		MTUN32:
$04DB		MOK32:
$04E9		MLOOP32:
$04EB		MADD32:
$04F5		MNOADD32:
$0505		MROUND32:
$0517		MUL32OK:
$051B		JPMRES032:
$0520		JPMSETFOV32:
$0525		JPMSETFUN32:
$0529		MUL32EEE:
$052B		_NRM4032:
$0534		NRM4032:
$0554		NORM4032:
$055A		NORM4032A:
$0563		NRMRND4032:
$0576		JMPRES032:
$057C		JMPSETFUN32:
$0582		JMPFIXSIGN32:
$0588		JMPSETFOV32:
$058D		NRM4032EEE:
$058F		_WordToStr:
$05B8		L_WordToStr_4:
$05BE		L_WordToStr_51:
$05E7		L_WordToStr_5:
$05E8		_Compare_Double:
$05F9		COMPARE_YNOTZERO:
$05FC		COMPARE_XNOTZERO:
$05FF		COMPARE_NOTZERO:
$060D		COMPARE_TESTALL:
$0614		COMPARE_C1:
$061B		COMPARE_C2:
$0622		COMPARE_C3:
$0628		GT_FALSE:
$062C		GT_TRUE:
$0630		COMPARE_GT:
$0632		COMPARE_LT:
$0634		COMPARE_EQU:
$0638		_Lcd_Cmd:
$063F		L_Lcd_Cmd_0:
$0652		L_Lcd_Cmd_1:
$0653		L_Lcd_Cmd_2:
$065A		L_Lcd_Cmd_3:
$066D		L_Lcd_Cmd_4:
$066E		L_Lcd_Cmd_5:
$0678		L_Lcd_Cmd_6:
$0679		L_Lcd_Cmd_7:
$067A		_LCD_Out:
$067B		L_LCD_Out_19:
$0680		L_LCD_Out_20:
$0683		L_LCD_Out_21:
$0686		L_LCD_Out_22:
$0689		L_LCD_Out_23:
$068C		L_LCD_Out_17:
$069F		L_LCD_Out_18:
$06AA		L_LCD_Out_24:
$06BC		L_LCD_Out_25:
$06BF		GlobalIniGP2D120Test:
$0709		_Int2Double:
$0712		FLO1632:
$071F		FLO1632EEE:
$0729		_Delay_5500us:
$073A		_Delay_50us:
$0800		_NRM3232:
$0817		NORM3232:
$081D		NORM3232A:
$0825		JPNRES032:
$0829		JPNSETFUN32:
$082D		JMPNFIXSIGN32:
$0830		NORM32EEE:
$0831		_Div_16x16_U:
$084E		_strcpy:
$0852		L_strcpy_31:
$0865		L_strcpy_32:
$0868		_Div_8x8_U:
$0879		_SETFOV32:
$0885		SETFOV32EEE:
$0887		_SETFUN32:
$0893		SETFUN32EEE:
$0895		_Lcd_Chr_CP:
$08A0		_Sub_32x32_FP:
$08A8		_RES032:
$08B1		_Delay_1us:
$08B9		_FIXSIGN32:
$08BF		_SETFDZ32:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0008		PORTD
$000A		PCLATH
$001E		ADRESH
$001F		ADCON0
$0020		___math_tempbD
$0021		LCD_port_address
$0022		LCD_cmd_status
$0023		_GP2
$0025		lstr1_GP2D120Test
$0030		_text1
$0031		lstr2_GP2D120Test
$0039		_text2
$003A		lstr3_GP2D120Test
$0047		_text3
$0048		_txt1
$004E		_Distance
$0052		_txt
$005F		FARG_Adc_Rd+0
$005F		FARG_FloatToStr+0
$005F		FARG_Lcd_Init+0
$005F		FARG_LCD_Out+0
$005F		FARG_WordToStr+0
$0060		
$0060		FARG_LCD_Out+1
$0061		FARG_LCD_Out+2
$0061		FARG_WordToStr+2
$0062		LCD_Out_i_L0
$0062		WordToStr_pos_L0
$0063		
$0063		FARG_FloatToStr+4
$0064		FARG_Lcd_Chr_CP+0
$0064		FARG_strcpy+0
$0065		FARG_strcpy+1
$0066		strcpy_cp_L0
$0067		FARG_Lcd_Cmd+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0089		TRISE
$009E		ADRESL
$00A0		lstr1_conv
$00A4		lstr2_conv
$00A6		lstr3_conv
$00AA		FloatToStr_bpoint_L0
$00AB		FloatToStr_i_L0
$00AC		FloatToStr_d_L0
$00AD		FloatToStr_dexpon_L0
$00AE		FloatToStr_un_L0
$0188		ANSEL


