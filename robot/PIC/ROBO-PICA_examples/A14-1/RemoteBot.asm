;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 4/6/2008 15:14:19
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2998			GOTO	_main
$0004	$	_interrupt:
$0004	$00FF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00B8			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00B7			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00B9			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$087B			MOVF	STACK_11, 0
$000E	$00D1			MOVWF	STSAVED_11
$000F	$087A			MOVF	STACK_10, 0
$0010	$00D0			MOVWF	STSAVED_10
$0011	$0871			MOVF	STACK_1, 0
$0012	$00CF			MOVWF	STSAVED_1
$0013	$0870			MOVF	STACK_0, 0
$0014	$00CE			MOVWF	STSAVED_0
;RemoteBot.c,7 :: 		void interrupt()
;RemoteBot.c,10 :: 		if(INTCON.INTF)                  // Check interrupt flag RB0  (Falling edge)
$0015	$1C8B			BTFSS	INTCON, 1
$0016	$2859			GOTO	L_interrupt_2
;RemoteBot.c,12 :: 		Delay_us(416);                // Delay 1/2 of 1 bit timing(baudrate 1200 bps)
$0017	$3003			MOVLW	3
$0018	$00FB			MOVWF	STACK_11
$0019	$30FF			MOVLW	255
$001A	$00FA			MOVWF	STACK_10
$001B	$0BFB			DECFSZ	STACK_11, F
$001C	$281E			GOTO	$+2
$001D	$2821			GOTO	$+4
$001E	$0BFA			DECFSZ	STACK_10, F
$001F	$281E			GOTO	$-1
$0020	$281B			GOTO	$-5
$0021	$30B0			MOVLW	176
$0022	$00FA			MOVWF	STACK_10
$0023	$0BFA			DECFSZ	STACK_10, F
$0024	$2823			GOTO	$-1
$0025	$0000			NOP
$0026	$0000			NOP
;RemoteBot.c,13 :: 		for(i=0;i<8;i++)              // Loop for 8 time for keep data from ER-4 Remote
$0027	$01B6			CLRF	interrupt_i_L0, 1
$0028	$	L_interrupt_3:
$0028	$3008			MOVLW	8
$0029	$0236			SUBWF	interrupt_i_L0, 0
$002A	$1803			BTFSC	STATUS, C
$002B	$2848			GOTO	L_interrupt_4
;RemoteBot.c,15 :: 		Delay_us(833);              // Delay of 1 bit timing(baudrate 1200 bps)
$002C	$3006			MOVLW	6
$002D	$00FB			MOVWF	STACK_11
$002E	$30FF			MOVLW	255
$002F	$00FA			MOVWF	STACK_10
$0030	$0BFB			DECFSZ	STACK_11, F
$0031	$2833			GOTO	$+2
$0032	$2836			GOTO	$+4
$0033	$0BFA			DECFSZ	STACK_10, F
$0034	$2833			GOTO	$-1
$0035	$2830			GOTO	$-5
$0036	$3063			MOVLW	99
$0037	$00FA			MOVWF	STACK_10
$0038	$0BFA			DECFSZ	STACK_10, F
$0039	$2838			GOTO	$-1
$003A	$0000			NOP
$003B	$0000			NOP
;RemoteBot.c,16 :: 		ir_cmd = ir_cmd>>1;         // Shitt bit 1 time
$003C	$0CA1			RRF	_ir_cmd, 1
$003D	$13A1			BCF	_ir_cmd, 7
;RemoteBot.c,17 :: 		if((PORTB & 0x01)==1)       // Get logic @ RB0 = '1'?
$003E	$3001			MOVLW	1
$003F	$0506			ANDWF	PORTB, 0
$0040	$00F1			MOVWF	STACK_1
$0041	$0871			MOVF	STACK_1, 0
$0042	$3A01			XORLW	1
$0043	$1D03			BTFSS	STATUS, Z
$0044	$2846			GOTO	L_interrupt_6
;RemoteBot.c,18 :: 		ir_cmd = ir_cmd|0x80;    // Inset bit data is '1'
$0045	$17A1			BSF	_ir_cmd, 7
$0046	$	L_interrupt_6:
;RemoteBot.c,19 :: 		}
$0046	$	L_interrupt_5:
;RemoteBot.c,13 :: 		for(i=0;i<8;i++)              // Loop for 8 time for keep data from ER-4 Remote
$0046	$0AB6			INCF	interrupt_i_L0, 1
;RemoteBot.c,19 :: 		}
$0047	$2828			GOTO	L_interrupt_3
$0048	$	L_interrupt_4:
;RemoteBot.c,20 :: 		Delay_us(833);                // Delay of 1 bit timing(baudrate 1200 bps)
$0048	$3006			MOVLW	6
$0049	$00FB			MOVWF	STACK_11
$004A	$30FF			MOVLW	255
$004B	$00FA			MOVWF	STACK_10
$004C	$0BFB			DECFSZ	STACK_11, F
$004D	$284F			GOTO	$+2
$004E	$2852			GOTO	$+4
$004F	$0BFA			DECFSZ	STACK_10, F
$0050	$284F			GOTO	$-1
$0051	$284C			GOTO	$-5
$0052	$3063			MOVLW	99
$0053	$00FA			MOVWF	STACK_10
$0054	$0BFA			DECFSZ	STACK_10, F
$0055	$2854			GOTO	$-1
$0056	$0000			NOP
$0057	$0000			NOP
;RemoteBot.c,21 :: 		INTCON.INTF =0;               // Clear interrupt flag
$0058	$108B			BCF	INTCON, 1
;RemoteBot.c,22 :: 		}
$0059	$	L_interrupt_2:
;RemoteBot.c,23 :: 		}
$0059	$	L_Interrupt_end:
$0059	$0851			MOVF	STSAVED_11, 0
$005A	$00FB			MOVWF	STACK_11
$005B	$0850			MOVF	STSAVED_10, 0
$005C	$00FA			MOVWF	STACK_10
$005D	$084F			MOVF	STSAVED_1, 0
$005E	$00F1			MOVWF	STACK_1
$005F	$084E			MOVF	STSAVED_0, 0
$0060	$00F0			MOVWF	STACK_0
$0061	$0839			MOVF	?savePCLATH, 0
$0062	$008A			MOVWF	PCLATH
$0063	$0837			MOVF	?saveFSR, 0
$0064	$0084			MOVWF	FSR
$0065	$0E38			SWAPF	?saveSTATUS, 0
$0066	$0083			MOVWF	STATUS
$0067	$0EFF			SWAPF	STACK_15, 1
$0068	$0E7F			SWAPF	STACK_15, 0
$0069	$0009			RETFIE
$0669	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,8 :: 		Delay_us(1);
$0669	$3001			MOVLW	1
$066A	$1303			BCF	STATUS, RP1
$066B	$1283			BCF	STATUS, RP0
$066C	$00FA			MOVWF	STACK_10
$066D	$0BFA			DECFSZ	STACK_10, F
$066E	$2E6D			GOTO	$-1
$066F	$0000			NOP
;delays.c,9 :: 		}
$0670	$0008			RETURN
$061F	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$061F	$3024			MOVLW	36
$0620	$1303			BCF	STATUS, RP1
$0621	$1283			BCF	STATUS, RP0
$0622	$00FB			MOVWF	STACK_11
$0623	$30FF			MOVLW	255
$0624	$00FA			MOVWF	STACK_10
$0625	$0BFB			DECFSZ	STACK_11, F
$0626	$2E28			GOTO	$+2
$0627	$2E2B			GOTO	$+4
$0628	$0BFA			DECFSZ	STACK_10, F
$0629	$2E28			GOTO	$-1
$062A	$2E25			GOTO	$-5
$062B	$309E			MOVLW	158
$062C	$00FA			MOVWF	STACK_10
$062D	$0BFA			DECFSZ	STACK_10, F
$062E	$2E2D			GOTO	$-1
;delays.c,33 :: 		}
$062F	$0008			RETURN
$06A9	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$06A9	$3053			MOVLW	83
$06AA	$1303			BCF	STATUS, RP1
$06AB	$1283			BCF	STATUS, RP0
$06AC	$00FA			MOVWF	STACK_10
$06AD	$0BFA			DECFSZ	STACK_10, F
$06AE	$2EAD			GOTO	$-1
;delays.c,21 :: 		}
$06AF	$0008			RETURN
$047D	$	_Mul_16x16_S:
$047D	$1303			BCF	STATUS, RP1
$047E	$1283			BCF	STATUS, RP0
$047F	$01FB			CLRF	STACK_11
$0480	$01FA			CLRF	STACK_10
$0481	$01F9			CLRF	STACK_9
$0482	$3080			MOVLW	128
$0483	$00F8			MOVWF	STACK_8
$0484	$01FD			CLRF	STACK_13
$0485	$1FF1			BTFSS	STACK_1, 7
$0486	$2C8D			GOTO	$+7
$0487	$09F1			COMF	STACK_1, F
$0488	$09F0			COMF	STACK_0, F
$0489	$0AF0			INCF	STACK_0, F
$048A	$1903			BTFSC	STATUS, Z
$048B	$0AF1			INCF	STACK_1, F
$048C	$0AFD			INCF	STACK_13, F
$048D	$1FF5			BTFSS	STACK_5, 7
$048E	$2C95			GOTO	$+7
$048F	$09F5			COMF	STACK_5, F
$0490	$09F4			COMF	STACK_4, F
$0491	$0AF4			INCF	STACK_4, F
$0492	$1903			BTFSC	STATUS, Z
$0493	$0AF5			INCF	STACK_5, F
$0494	$0AFD			INCF	STACK_13, F
$0495	$0CF1			RRF	STACK_1, F
$0496	$0CF0			RRF	STACK_0, F
$0497	$1C03			BTFSS	STATUS, C
$0498	$2CA2			GOTO	$+10
$0499	$0874			MOVF	STACK_4, W
$049A	$07F9			ADDWF	STACK_9, F
$049B	$0875			MOVF	STACK_5, W
$049C	$1803			BTFSC	STATUS, C
$049D	$0F75			INCFSZ	STACK_5, W
$049E	$07FA			ADDWF	STACK_10, F
$049F	$1803			BTFSC	STATUS, C
$04A0	$0AFB			INCF	STACK_11, F
$04A1	$1003			BCF	STATUS, C
$04A2	$1FF0			BTFSS	STACK_0, 7
$04A3	$2CAA			GOTO	$+7
$04A4	$0874			MOVF	STACK_4, W
$04A5	$07FA			ADDWF	STACK_10, F
$04A6	$1803			BTFSC	STATUS, C
$04A7	$0AFB			INCF	STACK_11, F
$04A8	$0875			MOVF	STACK_5, W
$04A9	$07FB			ADDWF	STACK_11, F
$04AA	$0CFB			RRF	STACK_11, F
$04AB	$0CFA			RRF	STACK_10, F
$04AC	$0CF9			RRF	STACK_9, F
$04AD	$0CF8			RRF	STACK_8, F
$04AE	$1C03			BTFSS	STATUS, C
$04AF	$2C95			GOTO	$-26
$04B0	$1C7D			BTFSS	STACK_13, 0
$04B1	$2CBD			GOTO	$+12
$04B2	$09FB			COMF	STACK_11, F
$04B3	$09FA			COMF	STACK_10, F
$04B4	$09F9			COMF	STACK_9, F
$04B5	$09F8			COMF	STACK_8, F
$04B6	$0AF8			INCF	STACK_8, F
$04B7	$1903			BTFSC	STATUS, Z
$04B8	$0AF9			INCF	STACK_9, F
$04B9	$1903			BTFSC	STATUS, Z
$04BA	$0AFA			INCF	STACK_10, F
$04BB	$1903			BTFSC	STATUS, Z
$04BC	$0AFB			INCF	STACK_11, F
$04BD	$087B			MOVF	STACK_11, W
$04BE	$00F3			MOVWF	STACK_3
$04BF	$087A			MOVF	STACK_10, W
$04C0	$00F2			MOVWF	STACK_2
$04C1	$0879			MOVF	STACK_9, W
$04C2	$00F1			MOVWF	STACK_1
$04C3	$0878			MOVF	STACK_8, W
$04C4	$00F0			MOVWF	STACK_0
$04C5	$0000			NOP
$04C6	$0008			RETURN
$03FC	$	_Lcd_Cmd:
$03FC	$1303			BCF	STATUS, RP1
$03FD	$1283			BCF	STATUS, RP0
$03FE	$0822			MOVF	LCD_port_address, 0
$03FF	$0084			MOVWF	FSR
$0400	$084A			MOVF	FARG_Lcd_Cmd+0, 0
$0401	$1903			BTFSC	STATUS, Z
$0402	$2C03			GOTO	L_Lcd_Cmd_0
$0403	$	L_Lcd_Cmd_0:
$0403	$1180			BCF	INDF, ___ENABLE
$0404	$1100			BCF	INDF, ___RS
$0405	$1380			BCF	INDF, ___DB7
$0406	$1300			BCF	INDF, ___DB6
$0407	$1280			BCF	INDF, ___DB5
$0408	$1200			BCF	INDF, ___DB4
$0409	$1BCA			BTFSC	FARG_Lcd_Cmd+0, 7
$040A	$1780			BSF	INDF, ___DB7
$040B	$1B4A			BTFSC	FARG_Lcd_Cmd+0, 6
$040C	$1700			BSF	INDF, ___DB6
$040D	$1ACA			BTFSC	FARG_Lcd_Cmd+0, 5
$040E	$1680			BSF	INDF, ___DB5
$040F	$1A4A			BTFSC	FARG_Lcd_Cmd+0, 4
$0410	$1600			BSF	INDF, ___DB4
$0411	$0823			MOVF	LCD_cmd_status, 0
$0412	$1903			BTFSC	STATUS, Z
$0413	$2C16			GOTO	L_Lcd_Cmd_1
$0414	$1100			BCF	INDF, ___RS
$0415	$2C17			GOTO	L_Lcd_Cmd_2
$0416	$	L_Lcd_Cmd_1:
$0416	$1500			BSF	INDF, ___RS
$0417	$	L_Lcd_Cmd_2:
$0417	$1580			BSF	INDF, ___ENABLE
$0418	$2669			CALL	_Delay_1us
$0419	$084A			MOVF	FARG_Lcd_Cmd+0, 0
$041A	$1903			BTFSC	STATUS, Z
$041B	$2C1C			GOTO	L_Lcd_Cmd_3
$041C	$	L_Lcd_Cmd_3:
$041C	$1180			BCF	INDF, ___ENABLE
$041D	$1100			BCF	INDF, ___RS
$041E	$1380			BCF	INDF, ___DB7
$041F	$1300			BCF	INDF, ___DB6
$0420	$1280			BCF	INDF, ___DB5
$0421	$1200			BCF	INDF, ___DB4
$0422	$19CA			BTFSC	FARG_Lcd_Cmd+0, 3
$0423	$1780			BSF	INDF, ___DB7
$0424	$194A			BTFSC	FARG_Lcd_Cmd+0, 2
$0425	$1700			BSF	INDF, ___DB6
$0426	$18CA			BTFSC	FARG_Lcd_Cmd+0, 1
$0427	$1680			BSF	INDF, ___DB5
$0428	$184A			BTFSC	FARG_Lcd_Cmd+0, 0
$0429	$1600			BSF	INDF, ___DB4
$042A	$0823			MOVF	LCD_cmd_status, 0
$042B	$1903			BTFSC	STATUS, Z
$042C	$2C2F			GOTO	L_Lcd_Cmd_4
$042D	$1100			BCF	INDF, ___RS
$042E	$2C30			GOTO	L_Lcd_Cmd_5
$042F	$	L_Lcd_Cmd_4:
$042F	$1500			BSF	INDF, ___RS
$0430	$	L_Lcd_Cmd_5:
$0430	$1580			BSF	INDF, ___ENABLE
$0431	$2669			CALL	_Delay_1us
$0432	$1180			BCF	INDF, ___ENABLE
$0433	$0823			MOVF	LCD_cmd_status, 0
$0434	$1903			BTFSC	STATUS, Z
$0435	$2C38			GOTO	L_Lcd_Cmd_6
$0436	$261F			CALL	_Delay_5500us
$0437	$2C39			GOTO	L_Lcd_Cmd_7
$0438	$	L_Lcd_Cmd_6:
$0438	$26A9			CALL	_Delay_50us
$0439	$	L_Lcd_Cmd_7:
$0439	$0008			RETURN
$006A	$	_SDIV3232L:
$006A	$1303			BCF	STATUS, RP1
$006B	$1283			BCF	STATUS, RP0
$006C	$0874			MOVF	STACK_4, W
$006D	$02F8			SUBWF	STACK_8, F
$006E	$0875			MOVF	STACK_5, W
$006F	$1C03			BTFSS	STATUS, C
$0070	$0F75			INCFSZ	STACK_5, W
$0071	$02F9			SUBWF	STACK_9, F
$0072	$0876			MOVF	STACK_6, W
$0073	$1C03			BTFSS	STATUS, C
$0074	$0F76			INCFSZ	STACK_6, W
$0075	$02FA			SUBWF	STACK_10, F
$0076	$0877			MOVF	STACK_7, W
$0077	$1C03			BTFSS	STATUS, C
$0078	$0F77			INCFSZ	STACK_7, W
$0079	$02FB			SUBWF	STACK_11, F
$007A	$0DF3			RLF	STACK_3, F
$007B	$3007			MOVLW	7
$007C	$00FC			MOVWF	STACK_12
$007D	$	LOOPS3232A:
$007D	$0D73			RLF	STACK_3, W
$007E	$0DF8			RLF	STACK_8, F
$007F	$0DF9			RLF	STACK_9, F
$0080	$0DFA			RLF	STACK_10, F
$0081	$0DFB			RLF	STACK_11, F
$0082	$0874			MOVF	STACK_4, W
$0083	$1C73			BTFSS	STACK_3, 0
$0084	$2893			GOTO	SADD22LA
$0085	$02F8			SUBWF	STACK_8, F
$0086	$0875			MOVF	STACK_5, W
$0087	$1C03			BTFSS	STATUS, C
$0088	$0F75			INCFSZ	STACK_5, W
$0089	$02F9			SUBWF	STACK_9, F
$008A	$0876			MOVF	STACK_6, W
$008B	$1C03			BTFSS	STATUS, C
$008C	$0F76			INCFSZ	STACK_6, W
$008D	$02FA			SUBWF	STACK_10, F
$008E	$0877			MOVF	STACK_7, W
$008F	$1C03			BTFSS	STATUS, C
$0090	$0F77			INCFSZ	STACK_7, W
$0091	$02FB			SUBWF	STACK_11, F
$0092	$28A0			GOTO	SOK22LA
$0093	$	SADD22LA:
$0093	$07F8			ADDWF	STACK_8, F
$0094	$0875			MOVF	STACK_5, W
$0095	$1803			BTFSC	STATUS, C
$0096	$0F75			INCFSZ	STACK_5, W
$0097	$07F9			ADDWF	STACK_9, F
$0098	$0876			MOVF	STACK_6, W
$0099	$1803			BTFSC	STATUS, C
$009A	$0F76			INCFSZ	STACK_6, W
$009B	$07FA			ADDWF	STACK_10, F
$009C	$0877			MOVF	STACK_7, W
$009D	$1803			BTFSC	STATUS, C
$009E	$0F77			INCFSZ	STACK_7, W
$009F	$07FB			ADDWF	STACK_11, F
$00A0	$	SOK22LA:
$00A0	$0DF3			RLF	STACK_3, F
$00A1	$0BFC			DECFSZ	STACK_12, F
$00A2	$287D			GOTO	LOOPS3232A
$00A3	$0D72			RLF	STACK_2, W
$00A4	$0DF8			RLF	STACK_8, F
$00A5	$0DF9			RLF	STACK_9, F
$00A6	$0DFA			RLF	STACK_10, F
$00A7	$0DFB			RLF	STACK_11, F
$00A8	$0874			MOVF	STACK_4, W
$00A9	$1C73			BTFSS	STACK_3, 0
$00AA	$28B9			GOTO	SADD22L8
$00AB	$02F8			SUBWF	STACK_8, F
$00AC	$0875			MOVF	STACK_5, W
$00AD	$1C03			BTFSS	STATUS, C
$00AE	$0F75			INCFSZ	STACK_5, W
$00AF	$02F9			SUBWF	STACK_9, F
$00B0	$0876			MOVF	STACK_6, W
$00B1	$1C03			BTFSS	STATUS, C
$00B2	$0F76			INCFSZ	STACK_6, W
$00B3	$02FA			SUBWF	STACK_10, F
$00B4	$0877			MOVF	STACK_7, W
$00B5	$1C03			BTFSS	STATUS, C
$00B6	$0F77			INCFSZ	STACK_7, W
$00B7	$02FB			SUBWF	STACK_11, F
$00B8	$28C6			GOTO	SOK22L8
$00B9	$	SADD22L8:
$00B9	$07F8			ADDWF	STACK_8, F
$00BA	$0875			MOVF	STACK_5, W
$00BB	$1803			BTFSC	STATUS, C
$00BC	$0F75			INCFSZ	STACK_5, W
$00BD	$07F9			ADDWF	STACK_9, F
$00BE	$0876			MOVF	STACK_6, W
$00BF	$1803			BTFSC	STATUS, C
$00C0	$0F76			INCFSZ	STACK_6, W
$00C1	$07FA			ADDWF	STACK_10, F
$00C2	$0877			MOVF	STACK_7, W
$00C3	$1803			BTFSC	STATUS, C
$00C4	$0F77			INCFSZ	STACK_7, W
$00C5	$07FB			ADDWF	STACK_11, F
$00C6	$	SOK22L8:
$00C6	$0DF2			RLF	STACK_2, F
$00C7	$3007			MOVLW	7
$00C8	$00FC			MOVWF	STACK_12
$00C9	$	LOOPS3232B:
$00C9	$0D72			RLF	STACK_2, W
$00CA	$0DF8			RLF	STACK_8, F
$00CB	$0DF9			RLF	STACK_9, F
$00CC	$0DFA			RLF	STACK_10, F
$00CD	$0DFB			RLF	STACK_11, F
$00CE	$0874			MOVF	STACK_4, W
$00CF	$1C72			BTFSS	STACK_2, 0
$00D0	$28DF			GOTO	SADD22LB
$00D1	$02F8			SUBWF	STACK_8, F
$00D2	$0875			MOVF	STACK_5, W
$00D3	$1C03			BTFSS	STATUS, C
$00D4	$0F75			INCFSZ	STACK_5, W
$00D5	$02F9			SUBWF	STACK_9, F
$00D6	$0876			MOVF	STACK_6, W
$00D7	$1C03			BTFSS	STATUS, C
$00D8	$0F76			INCFSZ	STACK_6, W
$00D9	$02FA			SUBWF	STACK_10, F
$00DA	$0877			MOVF	STACK_7, W
$00DB	$1C03			BTFSS	STATUS, C
$00DC	$0F77			INCFSZ	STACK_7, W
$00DD	$02FB			SUBWF	STACK_11, F
$00DE	$28EC			GOTO	SOK22LB
$00DF	$	SADD22LB:
$00DF	$07F8			ADDWF	STACK_8, F
$00E0	$0875			MOVF	STACK_5, W
$00E1	$1803			BTFSC	STATUS, C
$00E2	$0F75			INCFSZ	STACK_5, W
$00E3	$07F9			ADDWF	STACK_9, F
$00E4	$0876			MOVF	STACK_6, W
$00E5	$1803			BTFSC	STATUS, C
$00E6	$0F76			INCFSZ	STACK_6, W
$00E7	$07FA			ADDWF	STACK_10, F
$00E8	$0877			MOVF	STACK_7, W
$00E9	$1803			BTFSC	STATUS, C
$00EA	$0F77			INCFSZ	STACK_7, W
$00EB	$07FB			ADDWF	STACK_11, F
$00EC	$	SOK22LB:
$00EC	$0DF2			RLF	STACK_2, F
$00ED	$0BFC			DECFSZ	STACK_12, F
$00EE	$28C9			GOTO	LOOPS3232B
$00EF	$0D71			RLF	STACK_1, W
$00F0	$0DF8			RLF	STACK_8, F
$00F1	$0DF9			RLF	STACK_9, F
$00F2	$0DFA			RLF	STACK_10, F
$00F3	$0DFB			RLF	STACK_11, F
$00F4	$0874			MOVF	STACK_4, W
$00F5	$1C72			BTFSS	STACK_2, 0
$00F6	$2905			GOTO	SADD22L16
$00F7	$02F8			SUBWF	STACK_8, F
$00F8	$0875			MOVF	STACK_5, W
$00F9	$1C03			BTFSS	STATUS, C
$00FA	$0F75			INCFSZ	STACK_5, W
$00FB	$02F9			SUBWF	STACK_9, F
$00FC	$0876			MOVF	STACK_6, W
$00FD	$1C03			BTFSS	STATUS, C
$00FE	$0F76			INCFSZ	STACK_6, W
$00FF	$02FA			SUBWF	STACK_10, F
$0100	$0877			MOVF	STACK_7, W
$0101	$1C03			BTFSS	STATUS, C
$0102	$0F77			INCFSZ	STACK_7, W
$0103	$02FB			SUBWF	STACK_11, F
$0104	$2912			GOTO	SOK22L16
$0105	$	SADD22L16:
$0105	$07F8			ADDWF	STACK_8, F
$0106	$0875			MOVF	STACK_5, W
$0107	$1803			BTFSC	STATUS, C
$0108	$0F75			INCFSZ	STACK_5, W
$0109	$07F9			ADDWF	STACK_9, F
$010A	$0876			MOVF	STACK_6, W
$010B	$1803			BTFSC	STATUS, C
$010C	$0F76			INCFSZ	STACK_6, W
$010D	$07FA			ADDWF	STACK_10, F
$010E	$0877			MOVF	STACK_7, W
$010F	$1803			BTFSC	STATUS, C
$0110	$0F77			INCFSZ	STACK_7, W
$0111	$07FB			ADDWF	STACK_11, F
$0112	$	SOK22L16:
$0112	$0DF1			RLF	STACK_1, F
$0113	$3007			MOVLW	7
$0114	$00FC			MOVWF	STACK_12
$0115	$	LOOPS3232C:
$0115	$0D71			RLF	STACK_1, W
$0116	$0DF8			RLF	STACK_8, F
$0117	$0DF9			RLF	STACK_9, F
$0118	$0DFA			RLF	STACK_10, F
$0119	$0DFB			RLF	STACK_11, F
$011A	$0874			MOVF	STACK_4, W
$011B	$1C71			BTFSS	STACK_1, 0
$011C	$292B			GOTO	SADD22LC
$011D	$02F8			SUBWF	STACK_8, F
$011E	$0875			MOVF	STACK_5, W
$011F	$1C03			BTFSS	STATUS, C
$0120	$0F75			INCFSZ	STACK_5, W
$0121	$02F9			SUBWF	STACK_9, F
$0122	$0876			MOVF	STACK_6, W
$0123	$1C03			BTFSS	STATUS, C
$0124	$0F76			INCFSZ	STACK_6, W
$0125	$02FA			SUBWF	STACK_10, F
$0126	$0877			MOVF	STACK_7, W
$0127	$1C03			BTFSS	STATUS, C
$0128	$0F77			INCFSZ	STACK_7, W
$0129	$02FB			SUBWF	STACK_11, F
$012A	$2938			GOTO	SOK22LC
$012B	$	SADD22LC:
$012B	$07F8			ADDWF	STACK_8, F
$012C	$0875			MOVF	STACK_5, W
$012D	$1803			BTFSC	STATUS, C
$012E	$0F75			INCFSZ	STACK_5, W
$012F	$07F9			ADDWF	STACK_9, F
$0130	$0876			MOVF	STACK_6, W
$0131	$1803			BTFSC	STATUS, C
$0132	$0F76			INCFSZ	STACK_6, W
$0133	$07FA			ADDWF	STACK_10, F
$0134	$0877			MOVF	STACK_7, W
$0135	$1803			BTFSC	STATUS, C
$0136	$0F77			INCFSZ	STACK_7, W
$0137	$07FB			ADDWF	STACK_11, F
$0138	$	SOK22LC:
$0138	$0DF1			RLF	STACK_1, F
$0139	$0BFC			DECFSZ	STACK_12, F
$013A	$2915			GOTO	LOOPS3232C
$013B	$0D70			RLF	STACK_0, W
$013C	$0DF8			RLF	STACK_8, F
$013D	$0DF9			RLF	STACK_9, F
$013E	$0DFA			RLF	STACK_10, F
$013F	$0DFB			RLF	STACK_11, F
$0140	$0874			MOVF	STACK_4, W
$0141	$1C71			BTFSS	STACK_1, 0
$0142	$2951			GOTO	SADD22L24
$0143	$02F8			SUBWF	STACK_8, F
$0144	$0875			MOVF	STACK_5, W
$0145	$1C03			BTFSS	STATUS, C
$0146	$0F75			INCFSZ	STACK_5, W
$0147	$02F9			SUBWF	STACK_9, F
$0148	$0876			MOVF	STACK_6, W
$0149	$1C03			BTFSS	STATUS, C
$014A	$0F76			INCFSZ	STACK_6, W
$014B	$02FA			SUBWF	STACK_10, F
$014C	$0877			MOVF	STACK_7, W
$014D	$1C03			BTFSS	STATUS, C
$014E	$0F77			INCFSZ	STACK_7, W
$014F	$02FB			SUBWF	STACK_11, F
$0150	$295E			GOTO	SOK22L24
$0151	$	SADD22L24:
$0151	$07F8			ADDWF	STACK_8, F
$0152	$0875			MOVF	STACK_5, W
$0153	$1803			BTFSC	STATUS, C
$0154	$0F75			INCFSZ	STACK_5, W
$0155	$07F9			ADDWF	STACK_9, F
$0156	$0876			MOVF	STACK_6, W
$0157	$1803			BTFSC	STATUS, C
$0158	$0F76			INCFSZ	STACK_6, W
$0159	$07FA			ADDWF	STACK_10, F
$015A	$0877			MOVF	STACK_7, W
$015B	$1803			BTFSC	STATUS, C
$015C	$0F77			INCFSZ	STACK_7, W
$015D	$07FB			ADDWF	STACK_11, F
$015E	$	SOK22L24:
$015E	$0DF0			RLF	STACK_0, F
$015F	$3007			MOVLW	7
$0160	$00FC			MOVWF	STACK_12
$0161	$	LOOPS3232D:
$0161	$0D70			RLF	STACK_0, W
$0162	$0DF8			RLF	STACK_8, F
$0163	$0DF9			RLF	STACK_9, F
$0164	$0DFA			RLF	STACK_10, F
$0165	$0DFB			RLF	STACK_11, F
$0166	$0874			MOVF	STACK_4, W
$0167	$1C70			BTFSS	STACK_0, 0
$0168	$2977			GOTO	SADD22LD
$0169	$02F8			SUBWF	STACK_8, F
$016A	$0875			MOVF	STACK_5, W
$016B	$1C03			BTFSS	STATUS, C
$016C	$0F75			INCFSZ	STACK_5, W
$016D	$02F9			SUBWF	STACK_9, F
$016E	$0876			MOVF	STACK_6, W
$016F	$1C03			BTFSS	STATUS, C
$0170	$0F76			INCFSZ	STACK_6, W
$0171	$02FA			SUBWF	STACK_10, F
$0172	$0877			MOVF	STACK_7, W
$0173	$1C03			BTFSS	STATUS, C
$0174	$0F77			INCFSZ	STACK_7, W
$0175	$02FB			SUBWF	STACK_11, F
$0176	$2984			GOTO	SOK22LD
$0177	$	SADD22LD:
$0177	$07F8			ADDWF	STACK_8, F
$0178	$0875			MOVF	STACK_5, W
$0179	$1803			BTFSC	STATUS, C
$017A	$0F75			INCFSZ	STACK_5, W
$017B	$07F9			ADDWF	STACK_9, F
$017C	$0876			MOVF	STACK_6, W
$017D	$1803			BTFSC	STATUS, C
$017E	$0F76			INCFSZ	STACK_6, W
$017F	$07FA			ADDWF	STACK_10, F
$0180	$0877			MOVF	STACK_7, W
$0181	$1803			BTFSC	STATUS, C
$0182	$0F77			INCFSZ	STACK_7, W
$0183	$07FB			ADDWF	STACK_11, F
$0184	$	SOK22LD:
$0184	$0DF0			RLF	STACK_0, F
$0185	$0BFC			DECFSZ	STACK_12, F
$0186	$2961			GOTO	LOOPS3232D
$0187	$1870			BTFSC	STACK_0, 0
$0188	$2997			GOTO	SOK22L
$0189	$0874			MOVF	STACK_4, W
$018A	$07F8			ADDWF	STACK_8, F
$018B	$0875			MOVF	STACK_5, W
$018C	$1803			BTFSC	STATUS, C
$018D	$0F75			INCFSZ	STACK_5, W
$018E	$07F9			ADDWF	STACK_9, F
$018F	$0876			MOVF	STACK_6, W
$0190	$1803			BTFSC	STATUS, C
$0191	$0F76			INCFSZ	STACK_6, W
$0192	$07FA			ADDWF	STACK_10, F
$0193	$0877			MOVF	STACK_7, W
$0194	$1803			BTFSC	STATUS, C
$0195	$0F77			INCFSZ	STACK_7, W
$0196	$07FB			ADDWF	STACK_11, F
$0197	$	SOK22L:
$0197	$0008			RETURN
$0641	$	_COMFREM:
$0641	$1303			BCF	STATUS, RP1
$0642	$1283			BCF	STATUS, RP0
$0643	$09FB			COMF	STACK_11, F
$0644	$09FA			COMF	STACK_10, F
$0645	$09F9			COMF	STACK_9, F
$0646	$09F8			COMF	STACK_8, F
$0647	$0AF8			INCF	STACK_8, F
$0648	$1903			BTFSC	STATUS, Z
$0649	$0AF9			INCF	STACK_9, F
$064A	$1903			BTFSC	STATUS, Z
$064B	$0AFA			INCF	STACK_10, F
$064C	$1903			BTFSC	STATUS, Z
$064D	$0AFB			INCF	STACK_11, F
$064E	$0008			RETURN
$06B0	$	_PWM1_Init:
$06B0	$1303			BCF	STATUS, RP1
$06B1	$1283			BCF	STATUS, RP0
$06B2	$0195			CLRF	CCPR1L, 1
$06B3	$1217			BCF	CCP1CON, 4
$06B4	$1297			BCF	CCP1CON, 5
$06B5	$0008			RETURN
$06B6	$	_PWM2_Init:
$06B6	$1303			BCF	STATUS, RP1
$06B7	$1283			BCF	STATUS, RP0
$06B8	$019B			CLRF	CCPR2L, 1
$06B9	$121D			BCF	CCP2CON, 4
$06BA	$129D			BCF	CCP2CON, 5
$06BB	$0008			RETURN
$04C7	$	_PWM1_Change_Duty:
$04C7	$1303			BCF	STATUS, RP1
$04C8	$1683			BSF	STATUS, RP0
$04C9	$0812			MOVF	PR2, 0
$04CA	$3F01			ADDLW	1
$04CB	$00F0			MOVWF	STACK_0
$04CC	$01F1			CLRF	STACK_0+1
$04CD	$1803			BTFSC	STATUS, C
$04CE	$0AF1			INCF	STACK_0+1, 1
$04CF	$1283			BCF	STATUS, RP0
$04D0	$084A			MOVF	FARG_PWM1_Change_Duty+0, 0
$04D1	$00F4			MOVWF	STACK_4
$04D2	$01F5			CLRF	STACK_4+1
$04D3	$247D			CALL	_mul_16x16_s
$04D4	$3006			MOVLW	6
$04D5	$00F2			MOVWF	STACK_2
$04D6	$0870			MOVF	STACK_0, 0
$04D7	$00F4			MOVWF	STACK_4
$04D8	$0871			MOVF	STACK_0+1, 0
$04D9	$00F5			MOVWF	STACK_4+1
$04DA	$0872			MOVF	STACK_2, 0
$04DB	$	L_PWM1_Change_Duty_2:
$04DB	$1903			BTFSC	STATUS, Z
$04DC	$2CE2			GOTO	L_PWM1_Change_Duty_3
$04DD	$0CF5			RRF	STACK_4+1, 1
$04DE	$0CF4			RRF	STACK_4, 1
$04DF	$13F5			BCF	STACK_4+1, 7
$04E0	$3FFF			ADDLW	255
$04E1	$2CDB			GOTO	L_PWM1_Change_Duty_2
$04E2	$	L_PWM1_Change_Duty_3:
$04E2	$0874			MOVF	STACK_4, 0
$04E3	$00F0			MOVWF	STACK_0
$04E4	$0DF0			RLF	STACK_0, 1
$04E5	$1070			BCF	STACK_0, 0
$04E6	$0DF0			RLF	STACK_0, 1
$04E7	$1070			BCF	STACK_0, 0
$04E8	$0DF0			RLF	STACK_0, 1
$04E9	$1070			BCF	STACK_0, 0
$04EA	$0DF0			RLF	STACK_0, 1
$04EB	$1070			BCF	STACK_0, 0
$04EC	$3030			MOVLW	48
$04ED	$0570			ANDWF	STACK_0, 0
$04EE	$00F3			MOVWF	STACK_3
$04EF	$0874			MOVF	STACK_4, 0
$04F0	$00F0			MOVWF	STACK_0
$04F1	$0875			MOVF	STACK_4+1, 0
$04F2	$00F1			MOVWF	STACK_0+1
$04F3	$0CF1			RRF	STACK_0+1, 1
$04F4	$0CF0			RRF	STACK_0, 1
$04F5	$13F1			BCF	STACK_0+1, 7
$04F6	$0CF1			RRF	STACK_0+1, 1
$04F7	$0CF0			RRF	STACK_0, 1
$04F8	$13F1			BCF	STACK_0+1, 7
$04F9	$0870			MOVF	STACK_0, 0
$04FA	$0095			MOVWF	CCPR1L
$04FB	$300F			MOVLW	15
$04FC	$0597			ANDWF	CCP1CON, 1
$04FD	$0873			MOVF	STACK_3, 0
$04FE	$0497			IORWF	CCP1CON, 1
$04FF	$0008			RETURN
$0500	$	_PWM2_Change_Duty:
$0500	$1303			BCF	STATUS, RP1
$0501	$1683			BSF	STATUS, RP0
$0502	$0812			MOVF	PR2, 0
$0503	$3F01			ADDLW	1
$0504	$00F0			MOVWF	STACK_0
$0505	$01F1			CLRF	STACK_0+1
$0506	$1803			BTFSC	STATUS, C
$0507	$0AF1			INCF	STACK_0+1, 1
$0508	$1283			BCF	STATUS, RP0
$0509	$084A			MOVF	FARG_PWM2_Change_Duty+0, 0
$050A	$00F4			MOVWF	STACK_4
$050B	$01F5			CLRF	STACK_4+1
$050C	$247D			CALL	_mul_16x16_s
$050D	$3006			MOVLW	6
$050E	$00F2			MOVWF	STACK_2
$050F	$0870			MOVF	STACK_0, 0
$0510	$00F4			MOVWF	STACK_4
$0511	$0871			MOVF	STACK_0+1, 0
$0512	$00F5			MOVWF	STACK_4+1
$0513	$0872			MOVF	STACK_2, 0
$0514	$	L_PWM2_Change_Duty_0:
$0514	$1903			BTFSC	STATUS, Z
$0515	$2D1B			GOTO	L_PWM2_Change_Duty_1
$0516	$0CF5			RRF	STACK_4+1, 1
$0517	$0CF4			RRF	STACK_4, 1
$0518	$13F5			BCF	STACK_4+1, 7
$0519	$3FFF			ADDLW	255
$051A	$2D14			GOTO	L_PWM2_Change_Duty_0
$051B	$	L_PWM2_Change_Duty_1:
$051B	$0874			MOVF	STACK_4, 0
$051C	$00F0			MOVWF	STACK_0
$051D	$0DF0			RLF	STACK_0, 1
$051E	$1070			BCF	STACK_0, 0
$051F	$0DF0			RLF	STACK_0, 1
$0520	$1070			BCF	STACK_0, 0
$0521	$0DF0			RLF	STACK_0, 1
$0522	$1070			BCF	STACK_0, 0
$0523	$0DF0			RLF	STACK_0, 1
$0524	$1070			BCF	STACK_0, 0
$0525	$3030			MOVLW	48
$0526	$0570			ANDWF	STACK_0, 0
$0527	$00F3			MOVWF	STACK_3
$0528	$0874			MOVF	STACK_4, 0
$0529	$00F0			MOVWF	STACK_0
$052A	$0875			MOVF	STACK_4+1, 0
$052B	$00F1			MOVWF	STACK_0+1
$052C	$0CF1			RRF	STACK_0+1, 1
$052D	$0CF0			RRF	STACK_0, 1
$052E	$13F1			BCF	STACK_0+1, 7
$052F	$0CF1			RRF	STACK_0+1, 1
$0530	$0CF0			RRF	STACK_0, 1
$0531	$13F1			BCF	STACK_0+1, 7
$0532	$0870			MOVF	STACK_0, 0
$0533	$009B			MOVWF	CCPR2L
$0534	$300F			MOVLW	15
$0535	$059D			ANDWF	CCP2CON, 1
$0536	$0873			MOVF	STACK_3, 0
$0537	$049D			IORWF	CCP2CON, 1
$0538	$0008			RETURN
$0661	$	_PWM1_Start:
$0661	$1303			BCF	STATUS, RP1
$0662	$1683			BSF	STATUS, RP0
$0663	$1107			BCF	TRISC, 2
$0664	$1283			BCF	STATUS, RP0
$0665	$1512			BSF	T2CON, 2
$0666	$300C			MOVLW	12
$0667	$0497			IORWF	CCP1CON, 1
$0668	$0008			RETURN
$0671	$	_PWM2_Start:
$0671	$1303			BCF	STATUS, RP1
$0672	$1683			BSF	STATUS, RP0
$0673	$1087			BCF	TRISC, 1
$0674	$1283			BCF	STATUS, RP0
$0675	$1512			BSF	T2CON, 2
$0676	$300C			MOVLW	12
$0677	$049D			IORWF	CCP2CON, 1
$0678	$0008			RETURN
$06A1	$	_PWM1_Stop:
$06A1	$1303			BCF	STATUS, RP1
$06A2	$1683			BSF	STATUS, RP0
$06A3	$1507			BSF	TRISC, 2
$06A4	$1283			BCF	STATUS, RP0
$06A5	$1112			BCF	T2CON, 2
$06A6	$30F0			MOVLW	240
$06A7	$0597			ANDWF	CCP1CON, 1
$06A8	$0008			RETURN
$0699	$	_PWM2_Stop:
$0699	$1303			BCF	STATUS, RP1
$069A	$1683			BSF	STATUS, RP0
$069B	$1487			BSF	TRISC, 1
$069C	$1283			BCF	STATUS, RP0
$069D	$1112			BCF	T2CON, 2
$069E	$30F0			MOVLW	240
$069F	$059D			ANDWF	CCP2CON, 1
$06A0	$0008			RETURN
$064F	$	_Lcd_Chr_CP:
$064F	$1303			BCF	STATUS, RP1
$0650	$1283			BCF	STATUS, RP0
$0651	$01A3			CLRF	LCD_cmd_status, 1
$0652	$0849			MOVF	FARG_Lcd_Chr_CP+0, 0
$0653	$00CA			MOVWF	FARG_Lcd_Cmd+0
$0654	$23FC			CALL	_Lcd_Cmd
$0655	$3001			MOVLW	1
$0656	$00A3			MOVWF	LCD_cmd_status
$0657	$0008			RETURN
$0658	$	_Get_Fosc_kHz:
;delays.c,1 :: 		unsigned long Get_Fosc_kHz(){
;delays.c,3 :: 		return Clock_kHz();
$0658	$3020			MOVLW	32
$0659	$1303			BCF	STATUS, RP1
$065A	$1283			BCF	STATUS, RP0
$065B	$00F0			MOVWF	STACK_0
$065C	$304E			MOVLW	78
$065D	$00F1			MOVWF	STACK_0+1
$065E	$01F2			CLRF	STACK_0+2
$065F	$01F3			CLRF	STACK_0+3
;delays.c,5 :: 		}
$0660	$0008			RETURN
$0630	$	_Delay_Cyc:
;delays.c,53 :: 		void Delay_Cyc(char cycles_div_by_10)  { // Cycles_div_by_10: min 3, max 255
;delays.c,55 :: 		--cycles_div_by_10;
$0630	$1303			BCF	STATUS, RP1
$0631	$1283			BCF	STATUS, RP0
$0632	$03C9			DECF	FARG_Delay_Cyc+0, 1
;delays.c,56 :: 		--cycles_div_by_10;
$0633	$03C9			DECF	FARG_Delay_Cyc+0, 1
;delays.c,57 :: 		while (cycles_div_by_10 > 0) {
$0634	$	L_Delay_Cyc_0:
$0634	$0849			MOVF	FARG_Delay_Cyc+0, 0
$0635	$3C00			SUBLW	0
$0636	$1803			BTFSC	STATUS, C
$0637	$2E3D			GOTO	L_Delay_Cyc_1
;delays.c,58 :: 		--cycles_div_by_10;
$0638	$03C9			DECF	FARG_Delay_Cyc+0, 1
;delays.c,59 :: 		asm nop;
$0639	$0000			NOP
;delays.c,60 :: 		asm nop;
$063A	$0000			NOP
;delays.c,61 :: 		asm nop;
$063B	$0000			NOP
;delays.c,62 :: 		}
$063C	$2E34			GOTO	L_Delay_Cyc_0
$063D	$	L_Delay_Cyc_1:
;delays.c,63 :: 		asm nop;
$063D	$0000			NOP
;delays.c,64 :: 		asm nop;
$063E	$0000			NOP
;delays.c,65 :: 		asm nop;
$063F	$0000			NOP
;delays.c,66 :: 		}
$0640	$0008			RETURN
$0539	$	_Mul_32x32_U:
$0539	$1303			BCF	STATUS, RP1
$053A	$1283			BCF	STATUS, RP0
$053B	$3022			MOVLW	34
$053C	$00FC			MOVWF	STACK_12
$053D	$01F8			CLRF	STACK_8
$053E	$01F9			CLRF	STACK_9
$053F	$01FA			CLRF	STACK_10
$0540	$01FB			CLRF	STACK_11
$0541	$	_NEXT:
$0541	$03FC			DECF	STACK_12, F
$0542	$1903			BTFSC	STATUS, Z
$0543	$2D6F			GOTO	_EXIT2
$0544	$1003			BCF	STATUS, C
$0545	$	_LOOP:
$0545	$0CFB			RRF	STACK_11, F
$0546	$0CFA			RRF	STACK_10, F
$0547	$0CF9			RRF	STACK_9, F
$0548	$0CF8			RRF	STACK_8, F
$0549	$0CF3			RRF	STACK_3, F
$054A	$0CF2			RRF	STACK_2, F
$054B	$0CF1			RRF	STACK_1, F
$054C	$0CF0			RRF	STACK_0, F
$054D	$1C03			BTFSS	STATUS, C
$054E	$2D41			GOTO	_NEXT
$054F	$03FC			DECF	STACK_12, F
$0550	$1903			BTFSC	STATUS, Z
$0551	$2D61			GOTO	_EXIT1
$0552	$0874			MOVF	STACK_4, W
$0553	$07F8			ADDWF	STACK_8, F
$0554	$0875			MOVF	STACK_5, W
$0555	$1803			BTFSC	STATUS, C
$0556	$0F75			INCFSZ	STACK_5, W
$0557	$07F9			ADDWF	STACK_9, F
$0558	$0876			MOVF	STACK_6, W
$0559	$1803			BTFSC	STATUS, C
$055A	$0F76			INCFSZ	STACK_6, W
$055B	$07FA			ADDWF	STACK_10, F
$055C	$0877			MOVF	STACK_7, W
$055D	$1803			BTFSC	STATUS, C
$055E	$0F77			INCFSZ	STACK_7, W
$055F	$07FB			ADDWF	STACK_11, F
$0560	$2D45			GOTO	_LOOP
$0561	$	_EXIT1:
$0561	$0874			MOVF	STACK_4, W
$0562	$07F8			ADDWF	STACK_8, F
$0563	$0875			MOVF	STACK_5, W
$0564	$1803			BTFSC	STATUS, C
$0565	$0F75			INCFSZ	STACK_5, W
$0566	$07F9			ADDWF	STACK_9, F
$0567	$0876			MOVF	STACK_6, W
$0568	$1803			BTFSC	STATUS, C
$0569	$0F76			INCFSZ	STACK_6, W
$056A	$07FA			ADDWF	STACK_10, F
$056B	$0877			MOVF	STACK_7, W
$056C	$1803			BTFSC	STATUS, C
$056D	$0F77			INCFSZ	STACK_7, W
$056E	$07FB			ADDWF	STACK_11, F
$056F	$	_EXIT2:
$056F	$0008			RETURN
$0316	$	_Div_32x32_S:
$0316	$1303			BCF	STATUS, RP1
$0317	$1283			BCF	STATUS, RP0
$0318	$	FXD3232S:
$0318	$01FC			CLRF	STACK_12
$0319	$1BF7			BTFSC	STACK_7, 7
$031A	$0AFC			INCF	STACK_12, F
$031B	$01FD			CLRF	STACK_13
$031C	$01FB			CLRF	STACK_11
$031D	$01FA			CLRF	STACK_10
$031E	$01F9			CLRF	STACK_9
$031F	$01F8			CLRF	STACK_8
$0320	$0873			MOVF	STACK_3, W
$0321	$0472			IORWF	STACK_2, W
$0322	$0471			IORWF	STACK_1, W
$0323	$0470			IORWF	STACK_0, W
$0324	$1903			BTFSC	STATUS, Z
$0325	$2BAA			GOTO	END_ALL
$0326	$0873			MOVF	STACK_3, W
$0327	$0677			XORWF	STACK_7, W
$0328	$00A0			MOVWF	___math_tempb
$0329	$1BA0			BTFSC	___math_tempb, 7
$032A	$09FD			COMF	STACK_13, F
$032B	$1FF7			BTFSS	STACK_7, 7
$032C	$2B38			GOTO	CA3232S
$032D	$09F4			COMF	STACK_4, F
$032E	$09F5			COMF	STACK_5, F
$032F	$09F6			COMF	STACK_6, F
$0330	$09F7			COMF	STACK_7, F
$0331	$0AF4			INCF	STACK_4, F
$0332	$1903			BTFSC	STATUS, Z
$0333	$0AF5			INCF	STACK_5, F
$0334	$1903			BTFSC	STATUS, Z
$0335	$0AF6			INCF	STACK_6, F
$0336	$1903			BTFSC	STATUS, Z
$0337	$0AF7			INCF	STACK_7, F
$0338	$	CA3232S:
$0338	$1FF3			BTFSS	STACK_3, 7
$0339	$2B45			GOTO	C3232SX
$033A	$09F0			COMF	STACK_0, F
$033B	$09F1			COMF	STACK_1, F
$033C	$09F2			COMF	STACK_2, F
$033D	$09F3			COMF	STACK_3, F
$033E	$0AF0			INCF	STACK_0, F
$033F	$1903			BTFSC	STATUS, Z
$0340	$0AF1			INCF	STACK_1, F
$0341	$1903			BTFSC	STATUS, Z
$0342	$0AF2			INCF	STACK_2, F
$0343	$1903			BTFSC	STATUS, Z
$0344	$0AF3			INCF	STACK_3, F
$0345	$	C3232SX:
$0345	$0873			MOVF	STACK_3, W
$0346	$0477			IORWF	STACK_7, W
$0347	$00A0			MOVWF	___math_tempb
$0348	$1BA0			BTFSC	___math_tempb, 7
$0349	$2B66			GOTO	C3232SX1
$034A	$	C3232S:
$034A	$206A			CALL	_SDIV3232L
$034B	$	C3232S2:
$034B	$1BFC			BTFSC	STACK_12, 7
$034C	$2B83			GOTO	C3232SX4
$034D	$	C3232SOK:
$034D	$1FFD			BTFSS	STACK_13, 7
$034E	$2BAA			GOTO	END_ALL
$034F	$09F0			COMF	STACK_0, F
$0350	$09F1			COMF	STACK_1, F
$0351	$09F2			COMF	STACK_2, F
$0352	$09F3			COMF	STACK_3, F
$0353	$0AF0			INCF	STACK_0, F
$0354	$1903			BTFSC	STATUS, Z
$0355	$0AF1			INCF	STACK_1, F
$0356	$1903			BTFSC	STATUS, Z
$0357	$0AF2			INCF	STACK_2, F
$0358	$1903			BTFSC	STATUS, Z
$0359	$0AF3			INCF	STACK_3, F
$035A	$09F8			COMF	STACK_8, F
$035B	$09F9			COMF	STACK_9, F
$035C	$09FA			COMF	STACK_10, F
$035D	$09FB			COMF	STACK_11, F
$035E	$0AF8			INCF	STACK_8, F
$035F	$1903			BTFSC	STATUS, Z
$0360	$0AF9			INCF	STACK_9, F
$0361	$1903			BTFSC	STATUS, Z
$0362	$0AFA			INCF	STACK_10, F
$0363	$1903			BTFSC	STATUS, Z
$0364	$0AFB			INCF	STACK_11, F
$0365	$2BAA			GOTO	END_ALL
$0366	$	C3232SX1:
$0366	$1FF7			BTFSS	STACK_7, 7
$0367	$2B7D			GOTO	C3232SX3
$0368	$1BF3			BTFSC	STACK_3, 7
$0369	$2B77			GOTO	C3232SX2
$036A	$0873			MOVF	STACK_3, W
$036B	$00FB			MOVWF	STACK_11
$036C	$0872			MOVF	STACK_2, W
$036D	$00FA			MOVWF	STACK_10
$036E	$0871			MOVF	STACK_1, W
$036F	$00F9			MOVWF	STACK_9
$0370	$0870			MOVF	STACK_0, W
$0371	$00F8			MOVWF	STACK_8
$0372	$01F3			CLRF	STACK_3
$0373	$01F2			CLRF	STACK_2
$0374	$01F1			CLRF	STACK_1
$0375	$01F0			CLRF	STACK_0
$0376	$2B4D			GOTO	C3232SOK
$0377	$	C3232SX2:
$0377	$01F3			CLRF	STACK_3
$0378	$01F2			CLRF	STACK_2
$0379	$01F1			CLRF	STACK_1
$037A	$01F0			CLRF	STACK_0
$037B	$0AF0			INCF	STACK_0, F
$037C	$3400			RETLW	0x00
$037D	$	C3232SX3:
$037D	$09F3			COMF	STACK_3, F
$037E	$09F2			COMF	STACK_2, F
$037F	$09F1			COMF	STACK_1, F
$0380	$09F0			COMF	STACK_0, F
$0381	$17FC			BSF	STACK_12, 7
$0382	$2B4A			GOTO	C3232S
$0383	$	C3232SX4:
$0383	$0AF8			INCF	STACK_8, F
$0384	$1903			BTFSC	STATUS, Z
$0385	$0AF9			INCF	STACK_9, F
$0386	$1903			BTFSC	STATUS, Z
$0387	$0AFA			INCF	STACK_10, F
$0388	$1903			BTFSC	STATUS, Z
$0389	$0AFB			INCF	STACK_11, F
$038A	$0874			MOVF	STACK_4, W
$038B	$0278			SUBWF	STACK_8, W
$038C	$1D03			BTFSS	STATUS, Z
$038D	$2B4D			GOTO	C3232SOK
$038E	$0875			MOVF	STACK_5, W
$038F	$0279			SUBWF	STACK_9, W
$0390	$1D03			BTFSS	STATUS, Z
$0391	$2B4D			GOTO	C3232SOK
$0392	$0876			MOVF	STACK_6, W
$0393	$027A			SUBWF	STACK_10, W
$0394	$1D03			BTFSS	STATUS, Z
$0395	$2B4D			GOTO	C3232SOK
$0396	$0877			MOVF	STACK_7, W
$0397	$027B			SUBWF	STACK_11, W
$0398	$1D03			BTFSS	STATUS, Z
$0399	$2B4D			GOTO	C3232SOK
$039A	$01FB			CLRF	STACK_11
$039B	$01FA			CLRF	STACK_10
$039C	$01F9			CLRF	STACK_9
$039D	$01F8			CLRF	STACK_8
$039E	$0AF0			INCF	STACK_0, F
$039F	$1903			BTFSC	STATUS, Z
$03A0	$0AF1			INCF	STACK_1, F
$03A1	$1903			BTFSC	STATUS, Z
$03A2	$0AF2			INCF	STACK_2, F
$03A3	$1903			BTFSC	STATUS, Z
$03A4	$0AF3			INCF	STACK_3, F
$03A5	$1FF3			BTFSS	STACK_3, 7
$03A6	$2B4D			GOTO	C3232SOK
$03A7	$01A0			CLRF	___math_tempb
$03A8	$1620			BSF	___math_tempb, 4
$03A9	$34FF			RETLW	0xFF
$03AA	$	END_ALL:
$03AA	$01A0			CLRF	___math_tempb
$03AB	$1C7C			BTFSS	STACK_12, 0
$03AC	$2BAE			GOTO	avoid_comfrem
$03AD	$2641			CALL	_COMFREM
$03AE	$	avoid_comfrem:
$03AE	$3F00			ADDLW	0x00
$03AF	$0008			RETURN
$05B3	$	_Div_16x16_U:
$05B3	$1303			BCF	STATUS, RP1
$05B4	$1283			BCF	STATUS, RP0
$05B5	$01F8			CLRF	STACK_8
$05B6	$01F9			CLRF	STACK_9
$05B7	$3010			MOVLW	16
$05B8	$00FC			MOVWF	STACK_12
$05B9	$0D71			RLF	STACK_1, W
$05BA	$0DF8			RLF	STACK_8, F
$05BB	$0DF9			RLF	STACK_9, F
$05BC	$0874			MOVF	STACK_4, W
$05BD	$02F8			SUBWF	STACK_8, F
$05BE	$0875			MOVF	STACK_5, W
$05BF	$1C03			BTFSS	STATUS, C
$05C0	$0F75			INCFSZ	STACK_5, W
$05C1	$02F9			SUBWF	STACK_9, F
$05C2	$1803			BTFSC	STATUS, C
$05C3	$2DCB			GOTO	$+8
$05C4	$0874			MOVF	STACK_4, W
$05C5	$07F8			ADDWF	STACK_8, F
$05C6	$0875			MOVF	STACK_5, W
$05C7	$1803			BTFSC	STATUS, C
$05C8	$0F75			INCFSZ	STACK_5, W
$05C9	$07F9			ADDWF	STACK_9, F
$05CA	$1003			BCF	STATUS, C
$05CB	$0DF0			RLF	STACK_0, F
$05CC	$0DF1			RLF	STACK_1, F
$05CD	$0BFC			DECFSZ	STACK_12, F
$05CE	$2DB9			GOTO	$-21
$05CF	$0008			RETURN
$0570	$	_Motor_Init:
;motor.h,17 :: 		
;motor.h,19 :: 		
$0570	$1303			BCF	STATUS, RP1
$0571	$1283			BCF	STATUS, RP0
$0572	$0824			MOVF	_motor_init_, 0
$0573	$3A00			XORLW	0
$0574	$1D03			BTFSS	STATUS, Z
$0575	$2D90			GOTO	L_Motor_Init_0
;motor.h,21 :: 		
$0576	$3001			MOVLW	1
$0577	$00A4			MOVWF	_motor_init_
;motor.h,22 :: 		
$0578	$1703			BSF	STATUS, RP1
$0579	$1683			BSF	STATUS, RP0
$057A	$1009			BCF	ANSELH, 0
;motor.h,23 :: 		
$057B	$1109			BCF	ANSELH, 2
;motor.h,24 :: 		
$057C	$1303			BCF	STATUS, RP1
$057D	$1086			BCF	TRISB, 1
;motor.h,25 :: 		
$057E	$1106			BCF	TRISB, 2
;motor.h,26 :: 		
$057F	$1008			BCF	TRISD, 0
;motor.h,27 :: 		
$0580	$1088			BCF	TRISD, 1
;motor.h,28 :: 		
$0581	$1283			BCF	STATUS, RP0
$0582	$1012			BCF	T2CON, T2CKPS0
$0583	$1092			BCF	T2CON, T2CKPS1
$0584	$1412			BSF	T2CON, T2CKPS0
$0585	$30F9			MOVLW	249
$0586	$1683			BSF	STATUS, RP0
$0587	$0092			MOVWF	PR2
$0588	$26B0			CALL	_PWM1_Init
;motor.h,29 :: 		
$0589	$1012			BCF	T2CON, T2CKPS0
$058A	$1092			BCF	T2CON, T2CKPS1
$058B	$1412			BSF	T2CON, T2CKPS0
$058C	$30F9			MOVLW	249
$058D	$1683			BSF	STATUS, RP0
$058E	$0092			MOVWF	PR2
$058F	$26B6			CALL	_PWM2_Init
;motor.h,30 :: 		
$0590	$	L_Motor_Init_0:
;motor.h,31 :: 		
$0590	$0008			RETURN
$0601	$	_Change_Duty:
;motor.h,37 :: 		
;motor.h,39 :: 		
$0601	$1303			BCF	STATUS, RP1
$0602	$1283			BCF	STATUS, RP0
$0603	$0849			MOVF	FARG_Change_Duty+0, 0
$0604	$0625			XORWF	_motor_duty_, 0
$0605	$1903			BTFSC	STATUS, Z
$0606	$2E0F			GOTO	L_Change_Duty_1
;motor.h,41 :: 		
$0607	$0849			MOVF	FARG_Change_Duty+0, 0
$0608	$00A5			MOVWF	_motor_duty_
;motor.h,42 :: 		
$0609	$0849			MOVF	FARG_Change_Duty+0, 0
$060A	$00CA			MOVWF	FARG_PWM1_Change_Duty+0
$060B	$24C7			CALL	_PWM1_Change_Duty
;motor.h,43 :: 		
$060C	$0849			MOVF	FARG_Change_Duty+0, 0
$060D	$00CA			MOVWF	FARG_PWM2_Change_Duty+0
$060E	$2500			CALL	_PWM2_Change_Duty
;motor.h,44 :: 		
$060F	$	L_Change_Duty_1:
;motor.h,45 :: 		
$060F	$0008			RETURN
$0679	$	_Motor_A_BWD:
;motor.h,67 :: 		
;motor.h,69 :: 		
$0679	$2661			CALL	_PWM1_Start
;motor.h,70 :: 		
$067A	$1408			BSF	PORTD, 0
;motor.h,71 :: 		
$067B	$1088			BCF	PORTD, 1
;motor.h,72 :: 		
$067C	$0008			RETURN
$0681	$	_Motor_B_BWD:
;motor.h,76 :: 		
;motor.h,78 :: 		
$0681	$2671			CALL	_PWM2_Start
;motor.h,79 :: 		
$0682	$1486			BSF	PORTB, 1
;motor.h,80 :: 		
$0683	$1106			BCF	PORTB, 2
;motor.h,81 :: 		
$0684	$0008			RETURN
$0689	$	_Motor_A_FWD:
;motor.h,49 :: 		
;motor.h,51 :: 		
$0689	$2661			CALL	_PWM1_Start
;motor.h,52 :: 		
$068A	$1008			BCF	PORTD, 0
;motor.h,53 :: 		
$068B	$1488			BSF	PORTD, 1
;motor.h,54 :: 		
$068C	$0008			RETURN
$0685	$	_Motor_B_FWD:
;motor.h,58 :: 		
;motor.h,60 :: 		
$0685	$2671			CALL	_PWM2_Start
;motor.h,61 :: 		
$0686	$1086			BCF	PORTB, 1
;motor.h,62 :: 		
$0687	$1506			BSF	PORTB, 2
;motor.h,63 :: 		
$0688	$0008			RETURN
$067D	$	_Motor_A_Off:
;motor.h,124 :: 		
;motor.h,126 :: 		
$067D	$26A1			CALL	_PWM1_Stop
;motor.h,127 :: 		
$067E	$1008			BCF	PORTD, 0
;motor.h,128 :: 		
$067F	$1088			BCF	PORTD, 1
;motor.h,129 :: 		
$0680	$0008			RETURN
$068D	$	_Motor_B_Off:
;motor.h,133 :: 		
;motor.h,135 :: 		
$068D	$2699			CALL	_PWM2_Stop
;motor.h,136 :: 		
$068E	$1086			BCF	PORTB, 1
;motor.h,137 :: 		
$068F	$1106			BCF	PORTB, 2
;motor.h,138 :: 		
$0690	$0008			RETURN
$03B0	$	_Lcd_Init:
$03B0	$261F			CALL	_Delay_5500us
$03B1	$261F			CALL	_Delay_5500us
$03B2	$261F			CALL	_Delay_5500us
$03B3	$083B			MOVF	FARG_Lcd_Init+0, 0
$03B4	$00A2			MOVWF	LCD_port_address
$03B5	$083B			MOVF	FARG_Lcd_Init+0, 0
$03B6	$0084			MOVWF	FSR
$03B7	$1784			BSF	FSR, 7
$03B8	$1180			BCF	INDF, ___ENABLE
$03B9	$1100			BCF	INDF, ___RS
$03BA	$1000			BCF	INDF, ___RW
$03BB	$1380			BCF	INDF, ___DB7
$03BC	$1300			BCF	INDF, ___DB6
$03BD	$1280			BCF	INDF, ___DB5
$03BE	$1200			BCF	INDF, ___DB4
$03BF	$1384			BCF	FSR, 7
$03C0	$1180			BCF	INDF, ___ENABLE
$03C1	$1100			BCF	INDF, ___RS
$03C2	$1000			BCF	INDF, ___RW
$03C3	$1380			BCF	INDF, ___DB7
$03C4	$1300			BCF	INDF, ___DB6
$03C5	$1280			BCF	INDF, ___DB5
$03C6	$1200			BCF	INDF, ___DB4
$03C7	$1680			BSF	INDF, ___DB5
$03C8	$1600			BSF	INDF, ___DB4
$03C9	$1580			BSF	INDF, ___ENABLE
$03CA	$1180			BCF	INDF, ___ENABLE
$03CB	$261F			CALL	_Delay_5500us
$03CC	$1580			BSF	INDF, ___ENABLE
$03CD	$1180			BCF	INDF, ___ENABLE
$03CE	$261F			CALL	_Delay_5500us
$03CF	$1580			BSF	INDF, ___ENABLE
$03D0	$1180			BCF	INDF, ___ENABLE
$03D1	$261F			CALL	_Delay_5500us
$03D2	$1680			BSF	INDF, ___DB5
$03D3	$1200			BCF	INDF, ___DB4
$03D4	$1580			BSF	INDF, ___ENABLE
$03D5	$1180			BCF	INDF, ___ENABLE
$03D6	$261F			CALL	_Delay_5500us
$03D7	$0180			CLRF	INDF
$03D8	$1680			BSF	INDF, ___DB5
$03D9	$1580			BSF	INDF, ___ENABLE
$03DA	$1180			BCF	INDF, ___ENABLE
$03DB	$0180			CLRF	INDF
$03DC	$1780			BSF	INDF, ___DB7
$03DD	$1580			BSF	INDF, ___ENABLE
$03DE	$1180			BCF	INDF, ___ENABLE
$03DF	$261F			CALL	_Delay_5500us
$03E0	$0180			CLRF	INDF
$03E1	$1600			BSF	INDF, ___DB4
$03E2	$1580			BSF	INDF, ___ENABLE
$03E3	$1180			BCF	INDF, ___ENABLE
$03E4	$0180			CLRF	INDF
$03E5	$1580			BSF	INDF, ___ENABLE
$03E6	$1180			BCF	INDF, ___ENABLE
$03E7	$261F			CALL	_Delay_5500us
$03E8	$0180			CLRF	INDF
$03E9	$1580			BSF	INDF, ___ENABLE
$03EA	$1180			BCF	INDF, ___ENABLE
$03EB	$1600			BSF	INDF, ___DB4
$03EC	$1580			BSF	INDF, ___ENABLE
$03ED	$1180			BCF	INDF, ___ENABLE
$03EE	$261F			CALL	_Delay_5500us
$03EF	$0180			CLRF	INDF
$03F0	$1580			BSF	INDF, ___ENABLE
$03F1	$1180			BCF	INDF, ___ENABLE
$03F2	$1600			BSF	INDF, ___DB4
$03F3	$1680			BSF	INDF, ___DB5
$03F4	$1700			BSF	INDF, ___DB6
$03F5	$1780			BSF	INDF, ___DB7
$03F6	$1580			BSF	INDF, ___ENABLE
$03F7	$1180			BCF	INDF, ___ENABLE
$03F8	$261F			CALL	_Delay_5500us
$03F9	$3001			MOVLW	1
$03FA	$00A3			MOVWF	LCD_cmd_status
$03FB	$0008			RETURN
$043A	$	_LCD_Out:
$043A	$2C4C			GOTO	L_LCD_Out_17
$043B	$	L_LCD_Out_19:
$043B	$3080			MOVLW	128
$043C	$1303			BCF	STATUS, RP1
$043D	$1283			BCF	STATUS, RP0
$043E	$00BB			MOVWF	FARG_LCD_Out+0
$043F	$2C5F			GOTO	L_LCD_Out_18
$0440	$	L_LCD_Out_20:
$0440	$30C0			MOVLW	192
$0441	$00BB			MOVWF	FARG_LCD_Out+0
$0442	$2C5F			GOTO	L_LCD_Out_18
$0443	$	L_LCD_Out_21:
$0443	$3094			MOVLW	148
$0444	$00BB			MOVWF	FARG_LCD_Out+0
$0445	$2C5F			GOTO	L_LCD_Out_18
$0446	$	L_LCD_Out_22:
$0446	$30D4			MOVLW	212
$0447	$00BB			MOVWF	FARG_LCD_Out+0
$0448	$2C5F			GOTO	L_LCD_Out_18
$0449	$	L_LCD_Out_23:
$0449	$3080			MOVLW	128
$044A	$00BB			MOVWF	FARG_LCD_Out+0
$044B	$2C5F			GOTO	L_LCD_Out_18
$044C	$	L_LCD_Out_17:
$044C	$1303			BCF	STATUS, RP1
$044D	$1283			BCF	STATUS, RP0
$044E	$083B			MOVF	FARG_LCD_Out+0, 0
$044F	$3A01			XORLW	1
$0450	$1903			BTFSC	STATUS, Z
$0451	$2C3B			GOTO	L_LCD_Out_19
$0452	$083B			MOVF	FARG_LCD_Out+0, 0
$0453	$3A02			XORLW	2
$0454	$1903			BTFSC	STATUS, Z
$0455	$2C40			GOTO	L_LCD_Out_20
$0456	$083B			MOVF	FARG_LCD_Out+0, 0
$0457	$3A03			XORLW	3
$0458	$1903			BTFSC	STATUS, Z
$0459	$2C43			GOTO	L_LCD_Out_21
$045A	$083B			MOVF	FARG_LCD_Out+0, 0
$045B	$3A04			XORLW	4
$045C	$1903			BTFSC	STATUS, Z
$045D	$2C46			GOTO	L_LCD_Out_22
$045E	$2C49			GOTO	L_LCD_Out_23
$045F	$	L_LCD_Out_18:
$045F	$033C			DECF	FARG_LCD_Out+1, 0
$0460	$00F0			MOVWF	STACK_0
$0461	$083B			MOVF	FARG_LCD_Out+0, 0
$0462	$07F0			ADDWF	STACK_0, 1
$0463	$0870			MOVF	STACK_0, 0
$0464	$00BB			MOVWF	FARG_LCD_Out+0
$0465	$0870			MOVF	STACK_0, 0
$0466	$00CA			MOVWF	FARG_Lcd_Cmd+0
$0467	$23FC			CALL	_Lcd_Cmd
$0468	$01A3			CLRF	LCD_cmd_status, 1
$0469	$01BE			CLRF	LCD_Out_i_L0, 1
$046A	$	L_LCD_Out_24:
$046A	$083E			MOVF	LCD_Out_i_L0, 0
$046B	$073D			ADDWF	FARG_LCD_Out+2, 0
$046C	$0084			MOVWF	FSR
$046D	$0800			MOVF	INDF, 0
$046E	$00F0			MOVWF	STACK_0
$046F	$0870			MOVF	STACK_0, 0
$0470	$1903			BTFSC	STATUS, Z
$0471	$2C7A			GOTO	L_LCD_Out_25
$0472	$083E			MOVF	LCD_Out_i_L0, 0
$0473	$073D			ADDWF	FARG_LCD_Out+2, 0
$0474	$0084			MOVWF	FSR
$0475	$0800			MOVF	INDF, 0
$0476	$00C9			MOVWF	FARG_Lcd_Chr_CP+0
$0477	$264F			CALL	_Lcd_Chr_CP
$0478	$0ABE			INCF	LCD_Out_i_L0, 1
$0479	$2C6A			GOTO	L_LCD_Out_24
$047A	$	L_LCD_Out_25:
$047A	$3001			MOVLW	1
$047B	$00A3			MOVWF	LCD_cmd_status
$047C	$0008			RETURN
$05D0	$	_Sound_Init:
$05D0	$1303			BCF	STATUS, RP1
$05D1	$1283			BCF	STATUS, RP0
$05D2	$083B			MOVF	FARG_Sound_Init+0, 0
$05D3	$00A6			MOVWF	Sound_soundPortAddr
$05D4	$083C			MOVF	FARG_Sound_Init+1, 0
$05D5	$00F1			MOVWF	STACK_1
$05D6	$3001			MOVLW	1
$05D7	$00F0			MOVWF	STACK_0
$05D8	$0871			MOVF	STACK_1, 0
$05D9	$	L_Sound_Init_3:
$05D9	$1903			BTFSC	STATUS, Z
$05DA	$2DDF			GOTO	L_Sound_Init_4
$05DB	$0DF0			RLF	STACK_0, 1
$05DC	$1070			BCF	STACK_0, 0
$05DD	$3FFF			ADDLW	255
$05DE	$2DD9			GOTO	L_Sound_Init_3
$05DF	$	L_Sound_Init_4:
$05DF	$0870			MOVF	STACK_0, 0
$05E0	$00A7			MOVWF	Sound_pinMask1
$05E1	$09F0			COMF	STACK_0, F
$05E2	$0870			MOVF	STACK_0, 0
$05E3	$00A8			MOVWF	Sound_pinMask0
$05E4	$083B			MOVF	FARG_Sound_Init+0, 0
$05E5	$0084			MOVWF	FSR
$05E6	$0870			MOVF	STACK_0, 0
$05E7	$0580			ANDWF	INDF, 1
$05E8	$1784			BSF	FSR, 7
$05E9	$0870			MOVF	STACK_0, 0
$05EA	$0580			ANDWF	INDF, 1
$05EB	$0008			RETURN
$0270	$	_Sound_Play:
$0270	$2658			CALL	_Get_Fosc_kHz
$0271	$30E8			MOVLW	232
$0272	$00F4			MOVWF	STACK_4
$0273	$3003			MOVLW	3
$0274	$00F5			MOVWF	STACK_4+1
$0275	$01F6			CLRF	STACK_4+2
$0276	$01F7			CLRF	STACK_4+3
$0277	$2539			CALL	_mul_32x32_u
$0278	$0870			MOVF	STACK_0, 0
$0279	$00C1			MOVWF	Sound_Play_per_nc_L0
$027A	$0871			MOVF	STACK_0+1, 0
$027B	$00C2			MOVWF	Sound_Play_per_nc_L0+1
$027C	$0872			MOVF	STACK_0+2, 0
$027D	$00C3			MOVWF	Sound_Play_per_nc_L0+2
$027E	$0873			MOVF	STACK_0+3, 0
$027F	$00C4			MOVWF	Sound_Play_per_nc_L0+3
$0280	$083B			MOVF	FARG_Sound_Play+0, 0
$0281	$00F4			MOVWF	STACK_4
$0282	$083C			MOVF	FARG_Sound_Play+1, 0
$0283	$00F5			MOVWF	STACK_4+1
$0284	$01F6			CLRF	STACK_4+2
$0285	$01F7			CLRF	STACK_4+3
$0286	$2316			CALL	_div_32x32_s
$0287	$0870			MOVF	STACK_0, 0
$0288	$00C1			MOVWF	Sound_Play_per_nc_L0
$0289	$0871			MOVF	STACK_0+1, 0
$028A	$00C2			MOVWF	Sound_Play_per_nc_L0+1
$028B	$0872			MOVF	STACK_0+2, 0
$028C	$00C3			MOVWF	Sound_Play_per_nc_L0+2
$028D	$0873			MOVF	STACK_0+3, 0
$028E	$00C4			MOVWF	Sound_Play_per_nc_L0+3
$028F	$3003			MOVLW	3
$0290	$00F4			MOVWF	STACK_4
$0291	$0874			MOVF	STACK_4, 0
$0292	$	L_Sound_Play_5:
$0292	$1903			BTFSC	STATUS, Z
$0293	$2A9B			GOTO	L_Sound_Play_6
$0294	$0CF3			RRF	STACK_0+3, 1
$0295	$0CF2			RRF	STACK_0+2, 1
$0296	$0CF1			RRF	STACK_0+1, 1
$0297	$0CF0			RRF	STACK_0, 1
$0298	$13F3			BCF	STACK_0+3, 7
$0299	$3FFF			ADDLW	255
$029A	$2A92			GOTO	L_Sound_Play_5
$029B	$	L_Sound_Play_6:
$029B	$0870			MOVF	STACK_0, 0
$029C	$00BF			MOVWF	Sound_Play_nc_L0
$029D	$0871			MOVF	STACK_0+1, 0
$029E	$00C0			MOVWF	Sound_Play_nc_L0+1
$029F	$2658			CALL	_Get_Fosc_kHz
$02A0	$083D			MOVF	FARG_Sound_Play+2, 0
$02A1	$00F4			MOVWF	STACK_4
$02A2	$083E			MOVF	FARG_Sound_Play+3, 0
$02A3	$00F5			MOVWF	STACK_4+1
$02A4	$01F6			CLRF	STACK_4+2
$02A5	$01F7			CLRF	STACK_4+3
$02A6	$2539			CALL	_mul_32x32_u
$02A7	$0870			MOVF	STACK_0, 0
$02A8	$00C5			MOVWF	FLOC_Sound_Play+6
$02A9	$0871			MOVF	STACK_0+1, 0
$02AA	$00C6			MOVWF	FLOC_Sound_Play+7
$02AB	$0872			MOVF	STACK_0+2, 0
$02AC	$00C7			MOVWF	FLOC_Sound_Play+8
$02AD	$0873			MOVF	STACK_0+3, 0
$02AE	$00C8			MOVWF	FLOC_Sound_Play+9
$02AF	$083F			MOVF	Sound_Play_nc_L0, 0
$02B0	$00F0			MOVWF	STACK_0
$02B1	$0840			MOVF	Sound_Play_nc_L0+1, 0
$02B2	$00F1			MOVWF	STACK_0+1
$02B3	$01F2			CLRF	STACK_0+2
$02B4	$01F3			CLRF	STACK_0+3
$02B5	$3003			MOVLW	3
$02B6	$00F4			MOVWF	STACK_4
$02B7	$0874			MOVF	STACK_4, 0
$02B8	$	L_Sound_Play_7:
$02B8	$1903			BTFSC	STATUS, Z
$02B9	$2AC1			GOTO	L_Sound_Play_8
$02BA	$0DF0			RLF	STACK_0, 1
$02BB	$0DF1			RLF	STACK_0+1, 1
$02BC	$0DF2			RLF	STACK_0+2, 1
$02BD	$0DF3			RLF	STACK_0+3, 1
$02BE	$1070			BCF	STACK_0, 0
$02BF	$3FFF			ADDLW	255
$02C0	$2AB8			GOTO	L_Sound_Play_7
$02C1	$	L_Sound_Play_8:
$02C1	$0870			MOVF	STACK_0, 0
$02C2	$00F4			MOVWF	STACK_4
$02C3	$0871			MOVF	STACK_0+1, 0
$02C4	$00F5			MOVWF	STACK_4+1
$02C5	$0872			MOVF	STACK_0+2, 0
$02C6	$00F6			MOVWF	STACK_4+2
$02C7	$0873			MOVF	STACK_0+3, 0
$02C8	$00F7			MOVWF	STACK_4+3
$02C9	$0845			MOVF	FLOC_Sound_Play+6, 0
$02CA	$00F0			MOVWF	STACK_0
$02CB	$0846			MOVF	FLOC_Sound_Play+7, 0
$02CC	$00F1			MOVWF	STACK_0+1
$02CD	$0847			MOVF	FLOC_Sound_Play+8, 0
$02CE	$00F2			MOVWF	STACK_0+2
$02CF	$0848			MOVF	FLOC_Sound_Play+9, 0
$02D0	$00F3			MOVWF	STACK_0+3
$02D1	$2316			CALL	_div_32x32_s
$02D2	$0870			MOVF	STACK_0, 0
$02D3	$00C1			MOVWF	Sound_Play_per_nc_L0
$02D4	$0871			MOVF	STACK_0+1, 0
$02D5	$00C2			MOVWF	Sound_Play_per_nc_L0+1
$02D6	$0872			MOVF	STACK_0+2, 0
$02D7	$00C3			MOVWF	Sound_Play_per_nc_L0+2
$02D8	$0873			MOVF	STACK_0+3, 0
$02D9	$00C4			MOVWF	Sound_Play_per_nc_L0+3
$02DA	$300A			MOVLW	10
$02DB	$00F4			MOVWF	STACK_4
$02DC	$3000			MOVLW	0
$02DD	$00F5			MOVWF	STACK_4+1
$02DE	$083F			MOVF	Sound_Play_nc_L0, 0
$02DF	$00F0			MOVWF	STACK_0
$02E0	$0840			MOVF	Sound_Play_nc_L0+1, 0
$02E1	$00F1			MOVWF	STACK_0+1
$02E2	$25B3			CALL	_div_16x16_u
$02E3	$0870			MOVF	STACK_0, 0
$02E4	$00BF			MOVWF	Sound_Play_nc_L0
$02E5	$0871			MOVF	STACK_0+1, 0
$02E6	$00C0			MOVWF	Sound_Play_nc_L0+1
$02E7	$3000			MOVLW	0
$02E8	$0271			SUBWF	STACK_0+1, 0
$02E9	$1D03			BTFSS	STATUS, Z
$02EA	$2AED			GOTO	L_Sound_Play_9
$02EB	$3003			MOVLW	3
$02EC	$0270			SUBWF	STACK_0, 0
$02ED	$	L_Sound_Play_9:
$02ED	$1803			BTFSC	STATUS, C
$02EE	$2AF0			GOTO	L_Sound_Play_0
$02EF	$0008			RETURN
$02F0	$	L_Sound_Play_0:
$02F0	$0826			MOVF	Sound_soundPortAddr, 0
$02F1	$0084			MOVWF	FSR
$02F2	$	L_Sound_Play_1:
$02F2	$0841			MOVF	Sound_Play_per_nc_L0, 0
$02F3	$00F0			MOVWF	STACK_0
$02F4	$0842			MOVF	Sound_Play_per_nc_L0+1, 0
$02F5	$00F1			MOVWF	STACK_0+1
$02F6	$0843			MOVF	Sound_Play_per_nc_L0+2, 0
$02F7	$00F2			MOVWF	STACK_0+2
$02F8	$0844			MOVF	Sound_Play_per_nc_L0+3, 0
$02F9	$00F3			MOVWF	STACK_0+3
$02FA	$3001			MOVLW	1
$02FB	$02C1			SUBWF	Sound_Play_per_nc_L0, 1
$02FC	$1C03			BTFSS	STATUS, C
$02FD	$02C2			SUBWF	Sound_Play_per_nc_L0+1, 1
$02FE	$1C03			BTFSS	STATUS, C
$02FF	$02C3			SUBWF	Sound_Play_per_nc_L0+2, 1
$0300	$1C03			BTFSS	STATUS, C
$0301	$02C4			SUBWF	Sound_Play_per_nc_L0+3, 1
$0302	$0870			MOVF	STACK_0, 0
$0303	$0471			IORWF	STACK_0+1, 0
$0304	$0472			IORWF	STACK_0+2, 0
$0305	$0473			IORWF	STACK_0+3, 0
$0306	$1903			BTFSC	STATUS, Z
$0307	$2B13			GOTO	L_Sound_Play_2
$0308	$0827			MOVF	Sound_pinMask1, 0
$0309	$0480			IORWF	INDF, 1
$030A	$083F			MOVF	Sound_Play_nc_L0, 0
$030B	$00C9			MOVWF	FARG_Delay_Cyc+0
$030C	$2630			CALL	_Delay_Cyc
$030D	$0828			MOVF	Sound_pinMask0, 0
$030E	$0580			ANDWF	INDF, 1
$030F	$083F			MOVF	Sound_Play_nc_L0, 0
$0310	$00C9			MOVWF	FARG_Delay_Cyc+0
$0311	$2630			CALL	_Delay_Cyc
$0312	$2AF2			GOTO	L_Sound_Play_1
$0313	$	L_Sound_Play_2:
$0313	$0828			MOVF	Sound_pinMask0, 0
$0314	$0580			ANDWF	INDF, 1
$0315	$0008			RETURN
$0691	$	_get_remote:
;RemoteBot.c,27 :: 		unsigned char get_remote()
;RemoteBot.c,29 :: 		unsigned char _key=ir_cmd;      // Get character to buffer
$0691	$1303			BCF	STATUS, RP1
$0692	$1283			BCF	STATUS, RP0
$0693	$0821			MOVF	_ir_cmd, 0
$0694	$00BB			MOVWF	get_remote__key_L0
;RemoteBot.c,30 :: 		ir_cmd=0;                       // Clear old data
$0695	$01A1			CLRF	_ir_cmd, 1
;RemoteBot.c,31 :: 		return(_key);                   // Return character from Remote
$0696	$083B			MOVF	get_remote__key_L0, 0
$0697	$00F0			MOVWF	STACK_0
;RemoteBot.c,32 :: 		}
$0698	$0008			RETURN
$05F3	$	_Backward:
;motor.h,95 :: 		
;motor.h,97 :: 		
$05F3	$2570			CALL	_Motor_Init
;motor.h,98 :: 		
$05F4	$083B			MOVF	FARG_Backward+0, 0
$05F5	$00C9			MOVWF	FARG_Change_Duty+0
$05F6	$2601			CALL	_Change_Duty
;motor.h,99 :: 		
$05F7	$2679			CALL	_Motor_A_BWD
;motor.h,100 :: 		
$05F8	$2681			CALL	_Motor_B_BWD
;motor.h,101 :: 		
$05F9	$0008			RETURN
$05FA	$	_S_Right:
;motor.h,105 :: 		
;motor.h,107 :: 		
$05FA	$2570			CALL	_Motor_Init
;motor.h,108 :: 		
$05FB	$083B			MOVF	FARG_S_Right+0, 0
$05FC	$00C9			MOVWF	FARG_Change_Duty+0
$05FD	$2601			CALL	_Change_Duty
;motor.h,109 :: 		
$05FE	$2689			CALL	_Motor_A_FWD
;motor.h,110 :: 		
$05FF	$2681			CALL	_Motor_B_BWD
;motor.h,111 :: 		
$0600	$0008			RETURN
$05EC	$	_S_Left:
;motor.h,115 :: 		
;motor.h,117 :: 		
$05EC	$2570			CALL	_Motor_Init
;motor.h,118 :: 		
$05ED	$083B			MOVF	FARG_S_Left+0, 0
$05EE	$00C9			MOVWF	FARG_Change_Duty+0
$05EF	$2601			CALL	_Change_Duty
;motor.h,119 :: 		
$05F0	$2679			CALL	_Motor_A_BWD
;motor.h,120 :: 		
$05F1	$2685			CALL	_Motor_B_FWD
;motor.h,121 :: 		
$05F2	$0008			RETURN
$0610	$	_Forward:
;motor.h,85 :: 		
;motor.h,87 :: 		
$0610	$2570			CALL	_Motor_Init
;motor.h,88 :: 		
$0611	$083B			MOVF	FARG_Forward+0, 0
$0612	$00C9			MOVWF	FARG_Change_Duty+0
$0613	$2601			CALL	_Change_Duty
;motor.h,89 :: 		
$0614	$2689			CALL	_Motor_A_FWD
;motor.h,90 :: 		
$0615	$2685			CALL	_Motor_B_FWD
;motor.h,91 :: 		
$0616	$0008			RETURN
$0617	$	_Motor_Stop:
;motor.h,142 :: 		
;motor.h,144 :: 		
$0617	$1303			BCF	STATUS, RP1
$0618	$1283			BCF	STATUS, RP0
$0619	$01C9			CLRF	FARG_Change_Duty+0, 1
$061A	$2601			CALL	_Change_Duty
;motor.h,147 :: 		
$061B	$267D			CALL	_Motor_A_Off
;motor.h,148 :: 		
$061C	$268D			CALL	_Motor_B_Off
;motor.h,149 :: 		
$061D	$01A4			CLRF	_motor_init_, 1
;motor.h,151 :: 		
$061E	$0008			RETURN
$0591	$	GlobalIniRemoteBot:
$0591	$307F			MOVLW	127
$0592	$1303			BCF	STATUS, RP1
$0593	$1283			BCF	STATUS, RP0
$0594	$00A5			MOVWF	_motor_duty_+0
$0595	$3000			MOVLW	0
$0596	$00A4			MOVWF	_motor_init_+0
$0597	$3045			MOVLW	69
$0598	$00A9			MOVWF	lstr1_RemoteBot+0
$0599	$3052			MOVLW	82
$059A	$00AA			MOVWF	lstr1_RemoteBot+1
$059B	$302D			MOVLW	45
$059C	$00AB			MOVWF	lstr1_RemoteBot+2
$059D	$3034			MOVLW	52
$059E	$00AC			MOVWF	lstr1_RemoteBot+3
$059F	$3020			MOVLW	32
$05A0	$00AD			MOVWF	lstr1_RemoteBot+4
$05A1	$3052			MOVLW	82
$05A2	$00AE			MOVWF	lstr1_RemoteBot+5
$05A3	$3065			MOVLW	101
$05A4	$00AF			MOVWF	lstr1_RemoteBot+6
$05A5	$306D			MOVLW	109
$05A6	$00B0			MOVWF	lstr1_RemoteBot+7
$05A7	$306F			MOVLW	111
$05A8	$00B1			MOVWF	lstr1_RemoteBot+8
$05A9	$3074			MOVLW	116
$05AA	$00B2			MOVWF	lstr1_RemoteBot+9
$05AB	$3065			MOVLW	101
$05AC	$00B3			MOVWF	lstr1_RemoteBot+10
$05AD	$01B4			CLRF	lstr1_RemoteBot+11
$05AE	$3029			MOVLW	lstr1_RemoteBot
$05AF	$00B5			MOVWF	_text+0
$05B0	$3000			MOVLW	0
$05B1	$00A1			MOVWF	_ir_cmd+0
$05B2	$0008			RETURN
$0198	$	_main:
;RemoteBot.c,38 :: 		void main()
;RemoteBot.c,40 :: 		ANSELH.F4=0;                // RB0 ==> Digital IO
$0198	$2591			CALL	GlobalIniRemoteBot
$0199	$1703			BSF	STATUS, RP1
$019A	$1683			BSF	STATUS, RP0
$019B	$1209			BCF	ANSELH, 4
;RemoteBot.c,41 :: 		OPTION_REG.INTEDG = 0;      // INT falling edge
$019C	$1303			BCF	STATUS, RP1
$019D	$1301			BCF	OPTION_REG, 6
;RemoteBot.c,42 :: 		INTCON.INTE =1;             // Enable INT/PB0
$019E	$160B			BSF	INTCON, 4
;RemoteBot.c,43 :: 		INTCON.GIE =1;              // Enable Global interrupt
$019F	$178B			BSF	INTCON, 7
;RemoteBot.c,45 :: 		Lcd_Init(&PORTD);           // Initialize LCD connected to PORTD
$01A0	$3008			MOVLW	PORTD
$01A1	$1283			BCF	STATUS, RP0
$01A2	$00BB			MOVWF	FARG_Lcd_Init+0
$01A3	$23B0			CALL	_Lcd_Init
;RemoteBot.c,46 :: 		Lcd_Cmd(Lcd_CLEAR);         // Clear display
$01A4	$3001			MOVLW	1
$01A5	$00CA			MOVWF	FARG_Lcd_Cmd+0
$01A6	$23FC			CALL	_Lcd_Cmd
;RemoteBot.c,47 :: 		Lcd_Cmd(Lcd_CURSOR_OFF);    // Turn cursor off
$01A7	$300C			MOVLW	12
$01A8	$00CA			MOVWF	FARG_Lcd_Cmd+0
$01A9	$23FC			CALL	_Lcd_Cmd
;RemoteBot.c,48 :: 		Lcd_Out(1, 1, text);        // Print text to LCD, 2nd row, 1st column
$01AA	$3001			MOVLW	1
$01AB	$00BB			MOVWF	FARG_LCD_Out+0
$01AC	$3001			MOVLW	1
$01AD	$00BC			MOVWF	FARG_LCD_Out+1
$01AE	$0835			MOVF	_text, 0
$01AF	$00BD			MOVWF	FARG_LCD_Out+2
$01B0	$243A			CALL	_LCD_Out
;RemoteBot.c,49 :: 		Sound_Init(&PORTC,0);
$01B1	$3007			MOVLW	PORTC
$01B2	$00BB			MOVWF	FARG_Sound_Init+0
$01B3	$01BC			CLRF	FARG_Sound_Init+1, 1
$01B4	$25D0			CALL	_Sound_Init
;RemoteBot.c,50 :: 		Sound_Play(2500,400);
$01B5	$30C4			MOVLW	196
$01B6	$00BB			MOVWF	FARG_Sound_Play+0
$01B7	$3009			MOVLW	9
$01B8	$00BC			MOVWF	FARG_Sound_Play+1
$01B9	$3090			MOVLW	144
$01BA	$00BD			MOVWF	FARG_Sound_Play+2
$01BB	$3001			MOVLW	1
$01BC	$00BE			MOVWF	FARG_Sound_Play+3
$01BD	$2270			CALL	_Sound_Play
;RemoteBot.c,51 :: 		while(1)                                   // Infinite loop
$01BE	$	L_main_7:
;RemoteBot.c,53 :: 		char key=get_remote();                   // Get Remote
$01BE	$2691			CALL	_get_remote
$01BF	$0870			MOVF	STACK_0, 0
$01C0	$00BA			MOVWF	main_key_L1
;RemoteBot.c,54 :: 		if((key=='a')||(key=='A'))               // Button A press?
$01C1	$0870			MOVF	STACK_0, 0
$01C2	$3A61			XORLW	97
$01C3	$1903			BTFSC	STATUS, Z
$01C4	$29C9			GOTO	L206_ex_L_main_11
$01C5	$083A			MOVF	main_key_L1, 0
$01C6	$3A41			XORLW	65
$01C7	$1D03			BTFSS	STATUS, Z
$01C8	$29EC			GOTO	L_main_11
$01C9	$	L206_ex_L_main_11:
;RemoteBot.c,55 :: 		{ Backward(255);Delay_ms(50); }
$01C9	$30FF			MOVLW	255
$01CA	$00BB			MOVWF	FARG_Backward+0
$01CB	$25F3			CALL	_Backward
$01CC	$3002			MOVLW	2
$01CD	$00FC			MOVWF	STACK_12
$01CE	$30FF			MOVLW	255
$01CF	$00FB			MOVWF	STACK_11
$01D0	$30FF			MOVLW	255
$01D1	$00FA			MOVWF	STACK_10
$01D2	$0BFC			DECFSZ	STACK_12, F
$01D3	$29D5			GOTO	$+2
$01D4	$29DC			GOTO	$+8
$01D5	$0BFB			DECFSZ	STACK_11, F
$01D6	$29D8			GOTO	$+2
$01D7	$29DB			GOTO	$+4
$01D8	$0BFA			DECFSZ	STACK_10, F
$01D9	$29D8			GOTO	$-1
$01DA	$29D5			GOTO	$-5
$01DB	$29D2			GOTO	$-9
$01DC	$3046			MOVLW	70
$01DD	$00FB			MOVWF	STACK_11
$01DE	$30FF			MOVLW	255
$01DF	$00FA			MOVWF	STACK_10
$01E0	$0BFB			DECFSZ	STACK_11, F
$01E1	$29E3			GOTO	$+2
$01E2	$29E6			GOTO	$+4
$01E3	$0BFA			DECFSZ	STACK_10, F
$01E4	$29E3			GOTO	$-1
$01E5	$29E0			GOTO	$-5
$01E6	$30CF			MOVLW	207
$01E7	$00FA			MOVWF	STACK_10
$01E8	$0BFA			DECFSZ	STACK_10, F
$01E9	$29E8			GOTO	$-1
$01EA	$0000			NOP
$01EB	$2A6E			GOTO	L_main_12
$01EC	$	L_main_11:
;RemoteBot.c,56 :: 		else if((key=='b')||(key=='B'))          // Button B press?
$01EC	$083A			MOVF	main_key_L1, 0
$01ED	$3A62			XORLW	98
$01EE	$1903			BTFSC	STATUS, Z
$01EF	$29F4			GOTO	L252_ex_L_main_15
$01F0	$083A			MOVF	main_key_L1, 0
$01F1	$3A42			XORLW	66
$01F2	$1D03			BTFSS	STATUS, Z
$01F3	$2A17			GOTO	L_main_15
$01F4	$	L252_ex_L_main_15:
;RemoteBot.c,57 :: 		{ S_Right(255);Delay_ms(50);  }
$01F4	$30FF			MOVLW	255
$01F5	$00BB			MOVWF	FARG_S_Right+0
$01F6	$25FA			CALL	_S_Right
$01F7	$3002			MOVLW	2
$01F8	$00FC			MOVWF	STACK_12
$01F9	$30FF			MOVLW	255
$01FA	$00FB			MOVWF	STACK_11
$01FB	$30FF			MOVLW	255
$01FC	$00FA			MOVWF	STACK_10
$01FD	$0BFC			DECFSZ	STACK_12, F
$01FE	$2A00			GOTO	$+2
$01FF	$2A07			GOTO	$+8
$0200	$0BFB			DECFSZ	STACK_11, F
$0201	$2A03			GOTO	$+2
$0202	$2A06			GOTO	$+4
$0203	$0BFA			DECFSZ	STACK_10, F
$0204	$2A03			GOTO	$-1
$0205	$2A00			GOTO	$-5
$0206	$29FD			GOTO	$-9
$0207	$3046			MOVLW	70
$0208	$00FB			MOVWF	STACK_11
$0209	$30FF			MOVLW	255
$020A	$00FA			MOVWF	STACK_10
$020B	$0BFB			DECFSZ	STACK_11, F
$020C	$2A0E			GOTO	$+2
$020D	$2A11			GOTO	$+4
$020E	$0BFA			DECFSZ	STACK_10, F
$020F	$2A0E			GOTO	$-1
$0210	$2A0B			GOTO	$-5
$0211	$30CF			MOVLW	207
$0212	$00FA			MOVWF	STACK_10
$0213	$0BFA			DECFSZ	STACK_10, F
$0214	$2A13			GOTO	$-1
$0215	$0000			NOP
$0216	$2A6E			GOTO	L_main_16
$0217	$	L_main_15:
;RemoteBot.c,58 :: 		else if((key=='c')||(key=='C'))          // Button C press?
$0217	$083A			MOVF	main_key_L1, 0
$0218	$3A63			XORLW	99
$0219	$1903			BTFSC	STATUS, Z
$021A	$2A1F			GOTO	L298_ex_L_main_19
$021B	$083A			MOVF	main_key_L1, 0
$021C	$3A43			XORLW	67
$021D	$1D03			BTFSS	STATUS, Z
$021E	$2A42			GOTO	L_main_19
$021F	$	L298_ex_L_main_19:
;RemoteBot.c,59 :: 		{ S_Left(255);Delay_ms(50);   }
$021F	$30FF			MOVLW	255
$0220	$00BB			MOVWF	FARG_S_Left+0
$0221	$25EC			CALL	_S_Left
$0222	$3002			MOVLW	2
$0223	$00FC			MOVWF	STACK_12
$0224	$30FF			MOVLW	255
$0225	$00FB			MOVWF	STACK_11
$0226	$30FF			MOVLW	255
$0227	$00FA			MOVWF	STACK_10
$0228	$0BFC			DECFSZ	STACK_12, F
$0229	$2A2B			GOTO	$+2
$022A	$2A32			GOTO	$+8
$022B	$0BFB			DECFSZ	STACK_11, F
$022C	$2A2E			GOTO	$+2
$022D	$2A31			GOTO	$+4
$022E	$0BFA			DECFSZ	STACK_10, F
$022F	$2A2E			GOTO	$-1
$0230	$2A2B			GOTO	$-5
$0231	$2A28			GOTO	$-9
$0232	$3046			MOVLW	70
$0233	$00FB			MOVWF	STACK_11
$0234	$30FF			MOVLW	255
$0235	$00FA			MOVWF	STACK_10
$0236	$0BFB			DECFSZ	STACK_11, F
$0237	$2A39			GOTO	$+2
$0238	$2A3C			GOTO	$+4
$0239	$0BFA			DECFSZ	STACK_10, F
$023A	$2A39			GOTO	$-1
$023B	$2A36			GOTO	$-5
$023C	$30CF			MOVLW	207
$023D	$00FA			MOVWF	STACK_10
$023E	$0BFA			DECFSZ	STACK_10, F
$023F	$2A3E			GOTO	$-1
$0240	$0000			NOP
$0241	$2A6E			GOTO	L_main_20
$0242	$	L_main_19:
;RemoteBot.c,60 :: 		else if((key=='d')||(key=='D'))          // Button D press?
$0242	$083A			MOVF	main_key_L1, 0
$0243	$3A64			XORLW	100
$0244	$1903			BTFSC	STATUS, Z
$0245	$2A4A			GOTO	L344_ex_L_main_23
$0246	$083A			MOVF	main_key_L1, 0
$0247	$3A44			XORLW	68
$0248	$1D03			BTFSS	STATUS, Z
$0249	$2A6D			GOTO	L_main_23
$024A	$	L344_ex_L_main_23:
;RemoteBot.c,61 :: 		{ Forward(255);Delay_ms(50);}
$024A	$30FF			MOVLW	255
$024B	$00BB			MOVWF	FARG_Forward+0
$024C	$2610			CALL	_Forward
$024D	$3002			MOVLW	2
$024E	$00FC			MOVWF	STACK_12
$024F	$30FF			MOVLW	255
$0250	$00FB			MOVWF	STACK_11
$0251	$30FF			MOVLW	255
$0252	$00FA			MOVWF	STACK_10
$0253	$0BFC			DECFSZ	STACK_12, F
$0254	$2A56			GOTO	$+2
$0255	$2A5D			GOTO	$+8
$0256	$0BFB			DECFSZ	STACK_11, F
$0257	$2A59			GOTO	$+2
$0258	$2A5C			GOTO	$+4
$0259	$0BFA			DECFSZ	STACK_10, F
$025A	$2A59			GOTO	$-1
$025B	$2A56			GOTO	$-5
$025C	$2A53			GOTO	$-9
$025D	$3046			MOVLW	70
$025E	$00FB			MOVWF	STACK_11
$025F	$30FF			MOVLW	255
$0260	$00FA			MOVWF	STACK_10
$0261	$0BFB			DECFSZ	STACK_11, F
$0262	$2A64			GOTO	$+2
$0263	$2A67			GOTO	$+4
$0264	$0BFA			DECFSZ	STACK_10, F
$0265	$2A64			GOTO	$-1
$0266	$2A61			GOTO	$-5
$0267	$30CF			MOVLW	207
$0268	$00FA			MOVWF	STACK_10
$0269	$0BFA			DECFSZ	STACK_10, F
$026A	$2A69			GOTO	$-1
$026B	$0000			NOP
$026C	$2A6E			GOTO	L_main_24
$026D	$	L_main_23:
;RemoteBot.c,62 :: 		else Motor_Stop();
$026D	$2617			CALL	_Motor_Stop
$026E	$	L_main_24:
$026E	$	L_main_20:
$026E	$	L_main_16:
$026E	$	L_main_12:
;RemoteBot.c,63 :: 		}
$026E	$29BE			GOTO	L_main_7
;RemoteBot.c,65 :: 		}
$026F	$2A6F			GOTO	$
