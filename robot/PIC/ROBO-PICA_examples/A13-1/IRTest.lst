;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 4/6/2008 15:12:13
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$286A			GOTO	_main
$0004	$	_interrupt:
$0004	$00FF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00B6			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00B5			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00B7			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$087B			MOVF	STACK_11, 0
$000E	$00CB			MOVWF	STSAVED_11
$000F	$087A			MOVF	STACK_10, 0
$0010	$00CA			MOVWF	STSAVED_10
$0011	$0871			MOVF	STACK_1, 0
$0012	$00C9			MOVWF	STSAVED_1
$0013	$0870			MOVF	STACK_0, 0
$0014	$00C8			MOVWF	STSAVED_0
;IRTest.c,6 :: 		void interrupt()
;IRTest.c,9 :: 		if(INTCON.INTF)                  // Check interrupt flag RB0  (Falling edge)
$0015	$1C8B			BTFSS	INTCON, 1
$0016	$2859			GOTO	L_interrupt_0
;IRTest.c,11 :: 		Delay_us(416);                // Delay 1/2 of 1 bit timing(baudrate 1200 bps)
$0017	$3003			MOVLW	3
$0018	$00FB			MOVWF	STACK_11
$0019	$30FF			MOVLW	255
$001A	$00FA			MOVWF	STACK_10
$001B	$0BFB			DECFSZ	STACK_11, F
$001C	$281E			GOTO	$+2
$001D	$2821			GOTO	$+4
$001E	$0BFA			DECFSZ	STACK_10, F
$001F	$281E			GOTO	$-1
$0020	$281B			GOTO	$-5
$0021	$30B0			MOVLW	176
$0022	$00FA			MOVWF	STACK_10
$0023	$0BFA			DECFSZ	STACK_10, F
$0024	$2823			GOTO	$-1
$0025	$0000			NOP
$0026	$0000			NOP
;IRTest.c,12 :: 		for(i=0;i<8;i++)              // Loop for 8 time for keep data from ER-4 Remote
$0027	$01B4			CLRF	interrupt_i_L0, 1
$0028	$	L_interrupt_1:
$0028	$3008			MOVLW	8
$0029	$0234			SUBWF	interrupt_i_L0, 0
$002A	$1803			BTFSC	STATUS, C
$002B	$2848			GOTO	L_interrupt_2
;IRTest.c,14 :: 		Delay_us(833);              // Delay of 1 bit timing(baudrate 1200 bps)
$002C	$3006			MOVLW	6
$002D	$00FB			MOVWF	STACK_11
$002E	$30FF			MOVLW	255
$002F	$00FA			MOVWF	STACK_10
$0030	$0BFB			DECFSZ	STACK_11, F
$0031	$2833			GOTO	$+2
$0032	$2836			GOTO	$+4
$0033	$0BFA			DECFSZ	STACK_10, F
$0034	$2833			GOTO	$-1
$0035	$2830			GOTO	$-5
$0036	$3063			MOVLW	99
$0037	$00FA			MOVWF	STACK_10
$0038	$0BFA			DECFSZ	STACK_10, F
$0039	$2838			GOTO	$-1
$003A	$0000			NOP
$003B	$0000			NOP
;IRTest.c,15 :: 		ir_cmd = ir_cmd>>1;         // Shitt bit 1 time
$003C	$0CA1			RRF	_ir_cmd, 1
$003D	$13A1			BCF	_ir_cmd, 7
;IRTest.c,16 :: 		if((PORTB & 0x01)==1)       // Get logic @ RB0 = '1'?
$003E	$3001			MOVLW	1
$003F	$0506			ANDWF	PORTB, 0
$0040	$00F1			MOVWF	STACK_1
$0041	$0871			MOVF	STACK_1, 0
$0042	$3A01			XORLW	1
$0043	$1D03			BTFSS	STATUS, Z
$0044	$2846			GOTO	L_interrupt_4
;IRTest.c,17 :: 		ir_cmd = ir_cmd | 0x80;  // Inset bit data is '1'
$0045	$17A1			BSF	_ir_cmd, 7
$0046	$	L_interrupt_4:
;IRTest.c,18 :: 		}
$0046	$	L_interrupt_3:
;IRTest.c,12 :: 		for(i=0;i<8;i++)              // Loop for 8 time for keep data from ER-4 Remote
$0046	$0AB4			INCF	interrupt_i_L0, 1
;IRTest.c,18 :: 		}
$0047	$2828			GOTO	L_interrupt_1
$0048	$	L_interrupt_2:
;IRTest.c,19 :: 		Delay_us(833);                // Delay of 1 bit timing(baudrate 1200 bps)
$0048	$3006			MOVLW	6
$0049	$00FB			MOVWF	STACK_11
$004A	$30FF			MOVLW	255
$004B	$00FA			MOVWF	STACK_10
$004C	$0BFB			DECFSZ	STACK_11, F
$004D	$284F			GOTO	$+2
$004E	$2852			GOTO	$+4
$004F	$0BFA			DECFSZ	STACK_10, F
$0050	$284F			GOTO	$-1
$0051	$284C			GOTO	$-5
$0052	$3063			MOVLW	99
$0053	$00FA			MOVWF	STACK_10
$0054	$0BFA			DECFSZ	STACK_10, F
$0055	$2854			GOTO	$-1
$0056	$0000			NOP
$0057	$0000			NOP
;IRTest.c,20 :: 		INTCON.INTF =0;               // Clear interrupt flag
$0058	$108B			BCF	INTCON, 1
;IRTest.c,21 :: 		}
$0059	$	L_interrupt_0:
;IRTest.c,22 :: 		}
$0059	$	L_Interrupt_end:
$0059	$084B			MOVF	STSAVED_11, 0
$005A	$00FB			MOVWF	STACK_11
$005B	$084A			MOVF	STSAVED_10, 0
$005C	$00FA			MOVWF	STACK_10
$005D	$0849			MOVF	STSAVED_1, 0
$005E	$00F1			MOVWF	STACK_1
$005F	$0848			MOVF	STSAVED_0, 0
$0060	$00F0			MOVWF	STACK_0
$0061	$0837			MOVF	?savePCLATH, 0
$0062	$008A			MOVWF	PCLATH
$0063	$0835			MOVF	?saveFSR, 0
$0064	$0084			MOVWF	FSR
$0065	$0E36			SWAPF	?saveSTATUS, 0
$0066	$0083			MOVWF	STATUS
$0067	$0EFF			SWAPF	STACK_15, 1
$0068	$0E7F			SWAPF	STACK_15, 0
$0069	$0009			RETFIE
$0584	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,8 :: 		Delay_us(1);
$0584	$3001			MOVLW	1
$0585	$1303			BCF	STATUS, RP1
$0586	$1283			BCF	STATUS, RP0
$0587	$00FA			MOVWF	STACK_10
$0588	$0BFA			DECFSZ	STACK_10, F
$0589	$2D88			GOTO	$-1
$058A	$0000			NOP
;delays.c,9 :: 		}
$058B	$0008			RETURN
$0542	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$0542	$3024			MOVLW	36
$0543	$1303			BCF	STATUS, RP1
$0544	$1283			BCF	STATUS, RP0
$0545	$00FB			MOVWF	STACK_11
$0546	$30FF			MOVLW	255
$0547	$00FA			MOVWF	STACK_10
$0548	$0BFB			DECFSZ	STACK_11, F
$0549	$2D4B			GOTO	$+2
$054A	$2D4E			GOTO	$+4
$054B	$0BFA			DECFSZ	STACK_10, F
$054C	$2D4B			GOTO	$-1
$054D	$2D48			GOTO	$-5
$054E	$309E			MOVLW	158
$054F	$00FA			MOVWF	STACK_10
$0550	$0BFA			DECFSZ	STACK_10, F
$0551	$2D50			GOTO	$-1
;delays.c,33 :: 		}
$0552	$0008			RETURN
$0594	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$0594	$3053			MOVLW	83
$0595	$1303			BCF	STATUS, RP1
$0596	$1283			BCF	STATUS, RP0
$0597	$00FA			MOVWF	STACK_10
$0598	$0BFA			DECFSZ	STACK_10, F
$0599	$2D98			GOTO	$-1
;delays.c,21 :: 		}
$059A	$0008			RETURN
$0433	$	_Lcd_Cmd:
$0433	$1303			BCF	STATUS, RP1
$0434	$1283			BCF	STATUS, RP0
$0435	$0822			MOVF	LCD_port_address, 0
$0436	$0084			MOVWF	FSR
$0437	$0847			MOVF	FARG_Lcd_Cmd+0, 0
$0438	$1903			BTFSC	STATUS, Z
$0439	$2C3A			GOTO	L_Lcd_Cmd_0
$043A	$	L_Lcd_Cmd_0:
$043A	$1180			BCF	INDF, ___ENABLE
$043B	$1100			BCF	INDF, ___RS
$043C	$1380			BCF	INDF, ___DB7
$043D	$1300			BCF	INDF, ___DB6
$043E	$1280			BCF	INDF, ___DB5
$043F	$1200			BCF	INDF, ___DB4
$0440	$1BC7			BTFSC	FARG_Lcd_Cmd+0, 7
$0441	$1780			BSF	INDF, ___DB7
$0442	$1B47			BTFSC	FARG_Lcd_Cmd+0, 6
$0443	$1700			BSF	INDF, ___DB6
$0444	$1AC7			BTFSC	FARG_Lcd_Cmd+0, 5
$0445	$1680			BSF	INDF, ___DB5
$0446	$1A47			BTFSC	FARG_Lcd_Cmd+0, 4
$0447	$1600			BSF	INDF, ___DB4
$0448	$0823			MOVF	LCD_cmd_status, 0
$0449	$1903			BTFSC	STATUS, Z
$044A	$2C4D			GOTO	L_Lcd_Cmd_1
$044B	$1100			BCF	INDF, ___RS
$044C	$2C4E			GOTO	L_Lcd_Cmd_2
$044D	$	L_Lcd_Cmd_1:
$044D	$1500			BSF	INDF, ___RS
$044E	$	L_Lcd_Cmd_2:
$044E	$1580			BSF	INDF, ___ENABLE
$044F	$2584			CALL	_Delay_1us
$0450	$0847			MOVF	FARG_Lcd_Cmd+0, 0
$0451	$1903			BTFSC	STATUS, Z
$0452	$2C53			GOTO	L_Lcd_Cmd_3
$0453	$	L_Lcd_Cmd_3:
$0453	$1180			BCF	INDF, ___ENABLE
$0454	$1100			BCF	INDF, ___RS
$0455	$1380			BCF	INDF, ___DB7
$0456	$1300			BCF	INDF, ___DB6
$0457	$1280			BCF	INDF, ___DB5
$0458	$1200			BCF	INDF, ___DB4
$0459	$19C7			BTFSC	FARG_Lcd_Cmd+0, 3
$045A	$1780			BSF	INDF, ___DB7
$045B	$1947			BTFSC	FARG_Lcd_Cmd+0, 2
$045C	$1700			BSF	INDF, ___DB6
$045D	$18C7			BTFSC	FARG_Lcd_Cmd+0, 1
$045E	$1680			BSF	INDF, ___DB5
$045F	$1847			BTFSC	FARG_Lcd_Cmd+0, 0
$0460	$1600			BSF	INDF, ___DB4
$0461	$0823			MOVF	LCD_cmd_status, 0
$0462	$1903			BTFSC	STATUS, Z
$0463	$2C66			GOTO	L_Lcd_Cmd_4
$0464	$1100			BCF	INDF, ___RS
$0465	$2C67			GOTO	L_Lcd_Cmd_5
$0466	$	L_Lcd_Cmd_4:
$0466	$1500			BSF	INDF, ___RS
$0467	$	L_Lcd_Cmd_5:
$0467	$1580			BSF	INDF, ___ENABLE
$0468	$2584			CALL	_Delay_1us
$0469	$1180			BCF	INDF, ___ENABLE
$046A	$0823			MOVF	LCD_cmd_status, 0
$046B	$1903			BTFSC	STATUS, Z
$046C	$2C6F			GOTO	L_Lcd_Cmd_6
$046D	$2542			CALL	_Delay_5500us
$046E	$2C70			GOTO	L_Lcd_Cmd_7
$046F	$	L_Lcd_Cmd_6:
$046F	$2594			CALL	_Delay_50us
$0470	$	L_Lcd_Cmd_7:
$0470	$0008			RETURN
$0179	$	_SDIV3232L:
$0179	$1303			BCF	STATUS, RP1
$017A	$1283			BCF	STATUS, RP0
$017B	$0874			MOVF	STACK_4, W
$017C	$02F8			SUBWF	STACK_8, F
$017D	$0875			MOVF	STACK_5, W
$017E	$1C03			BTFSS	STATUS, C
$017F	$0F75			INCFSZ	STACK_5, W
$0180	$02F9			SUBWF	STACK_9, F
$0181	$0876			MOVF	STACK_6, W
$0182	$1C03			BTFSS	STATUS, C
$0183	$0F76			INCFSZ	STACK_6, W
$0184	$02FA			SUBWF	STACK_10, F
$0185	$0877			MOVF	STACK_7, W
$0186	$1C03			BTFSS	STATUS, C
$0187	$0F77			INCFSZ	STACK_7, W
$0188	$02FB			SUBWF	STACK_11, F
$0189	$0DF3			RLF	STACK_3, F
$018A	$3007			MOVLW	7
$018B	$00FC			MOVWF	STACK_12
$018C	$	LOOPS3232A:
$018C	$0D73			RLF	STACK_3, W
$018D	$0DF8			RLF	STACK_8, F
$018E	$0DF9			RLF	STACK_9, F
$018F	$0DFA			RLF	STACK_10, F
$0190	$0DFB			RLF	STACK_11, F
$0191	$0874			MOVF	STACK_4, W
$0192	$1C73			BTFSS	STACK_3, 0
$0193	$29A2			GOTO	SADD22LA
$0194	$02F8			SUBWF	STACK_8, F
$0195	$0875			MOVF	STACK_5, W
$0196	$1C03			BTFSS	STATUS, C
$0197	$0F75			INCFSZ	STACK_5, W
$0198	$02F9			SUBWF	STACK_9, F
$0199	$0876			MOVF	STACK_6, W
$019A	$1C03			BTFSS	STATUS, C
$019B	$0F76			INCFSZ	STACK_6, W
$019C	$02FA			SUBWF	STACK_10, F
$019D	$0877			MOVF	STACK_7, W
$019E	$1C03			BTFSS	STATUS, C
$019F	$0F77			INCFSZ	STACK_7, W
$01A0	$02FB			SUBWF	STACK_11, F
$01A1	$29AF			GOTO	SOK22LA
$01A2	$	SADD22LA:
$01A2	$07F8			ADDWF	STACK_8, F
$01A3	$0875			MOVF	STACK_5, W
$01A4	$1803			BTFSC	STATUS, C
$01A5	$0F75			INCFSZ	STACK_5, W
$01A6	$07F9			ADDWF	STACK_9, F
$01A7	$0876			MOVF	STACK_6, W
$01A8	$1803			BTFSC	STATUS, C
$01A9	$0F76			INCFSZ	STACK_6, W
$01AA	$07FA			ADDWF	STACK_10, F
$01AB	$0877			MOVF	STACK_7, W
$01AC	$1803			BTFSC	STATUS, C
$01AD	$0F77			INCFSZ	STACK_7, W
$01AE	$07FB			ADDWF	STACK_11, F
$01AF	$	SOK22LA:
$01AF	$0DF3			RLF	STACK_3, F
$01B0	$0BFC			DECFSZ	STACK_12, F
$01B1	$298C			GOTO	LOOPS3232A
$01B2	$0D72			RLF	STACK_2, W
$01B3	$0DF8			RLF	STACK_8, F
$01B4	$0DF9			RLF	STACK_9, F
$01B5	$0DFA			RLF	STACK_10, F
$01B6	$0DFB			RLF	STACK_11, F
$01B7	$0874			MOVF	STACK_4, W
$01B8	$1C73			BTFSS	STACK_3, 0
$01B9	$29C8			GOTO	SADD22L8
$01BA	$02F8			SUBWF	STACK_8, F
$01BB	$0875			MOVF	STACK_5, W
$01BC	$1C03			BTFSS	STATUS, C
$01BD	$0F75			INCFSZ	STACK_5, W
$01BE	$02F9			SUBWF	STACK_9, F
$01BF	$0876			MOVF	STACK_6, W
$01C0	$1C03			BTFSS	STATUS, C
$01C1	$0F76			INCFSZ	STACK_6, W
$01C2	$02FA			SUBWF	STACK_10, F
$01C3	$0877			MOVF	STACK_7, W
$01C4	$1C03			BTFSS	STATUS, C
$01C5	$0F77			INCFSZ	STACK_7, W
$01C6	$02FB			SUBWF	STACK_11, F
$01C7	$29D5			GOTO	SOK22L8
$01C8	$	SADD22L8:
$01C8	$07F8			ADDWF	STACK_8, F
$01C9	$0875			MOVF	STACK_5, W
$01CA	$1803			BTFSC	STATUS, C
$01CB	$0F75			INCFSZ	STACK_5, W
$01CC	$07F9			ADDWF	STACK_9, F
$01CD	$0876			MOVF	STACK_6, W
$01CE	$1803			BTFSC	STATUS, C
$01CF	$0F76			INCFSZ	STACK_6, W
$01D0	$07FA			ADDWF	STACK_10, F
$01D1	$0877			MOVF	STACK_7, W
$01D2	$1803			BTFSC	STATUS, C
$01D3	$0F77			INCFSZ	STACK_7, W
$01D4	$07FB			ADDWF	STACK_11, F
$01D5	$	SOK22L8:
$01D5	$0DF2			RLF	STACK_2, F
$01D6	$3007			MOVLW	7
$01D7	$00FC			MOVWF	STACK_12
$01D8	$	LOOPS3232B:
$01D8	$0D72			RLF	STACK_2, W
$01D9	$0DF8			RLF	STACK_8, F
$01DA	$0DF9			RLF	STACK_9, F
$01DB	$0DFA			RLF	STACK_10, F
$01DC	$0DFB			RLF	STACK_11, F
$01DD	$0874			MOVF	STACK_4, W
$01DE	$1C72			BTFSS	STACK_2, 0
$01DF	$29EE			GOTO	SADD22LB
$01E0	$02F8			SUBWF	STACK_8, F
$01E1	$0875			MOVF	STACK_5, W
$01E2	$1C03			BTFSS	STATUS, C
$01E3	$0F75			INCFSZ	STACK_5, W
$01E4	$02F9			SUBWF	STACK_9, F
$01E5	$0876			MOVF	STACK_6, W
$01E6	$1C03			BTFSS	STATUS, C
$01E7	$0F76			INCFSZ	STACK_6, W
$01E8	$02FA			SUBWF	STACK_10, F
$01E9	$0877			MOVF	STACK_7, W
$01EA	$1C03			BTFSS	STATUS, C
$01EB	$0F77			INCFSZ	STACK_7, W
$01EC	$02FB			SUBWF	STACK_11, F
$01ED	$29FB			GOTO	SOK22LB
$01EE	$	SADD22LB:
$01EE	$07F8			ADDWF	STACK_8, F
$01EF	$0875			MOVF	STACK_5, W
$01F0	$1803			BTFSC	STATUS, C
$01F1	$0F75			INCFSZ	STACK_5, W
$01F2	$07F9			ADDWF	STACK_9, F
$01F3	$0876			MOVF	STACK_6, W
$01F4	$1803			BTFSC	STATUS, C
$01F5	$0F76			INCFSZ	STACK_6, W
$01F6	$07FA			ADDWF	STACK_10, F
$01F7	$0877			MOVF	STACK_7, W
$01F8	$1803			BTFSC	STATUS, C
$01F9	$0F77			INCFSZ	STACK_7, W
$01FA	$07FB			ADDWF	STACK_11, F
$01FB	$	SOK22LB:
$01FB	$0DF2			RLF	STACK_2, F
$01FC	$0BFC			DECFSZ	STACK_12, F
$01FD	$29D8			GOTO	LOOPS3232B
$01FE	$0D71			RLF	STACK_1, W
$01FF	$0DF8			RLF	STACK_8, F
$0200	$0DF9			RLF	STACK_9, F
$0201	$0DFA			RLF	STACK_10, F
$0202	$0DFB			RLF	STACK_11, F
$0203	$0874			MOVF	STACK_4, W
$0204	$1C72			BTFSS	STACK_2, 0
$0205	$2A14			GOTO	SADD22L16
$0206	$02F8			SUBWF	STACK_8, F
$0207	$0875			MOVF	STACK_5, W
$0208	$1C03			BTFSS	STATUS, C
$0209	$0F75			INCFSZ	STACK_5, W
$020A	$02F9			SUBWF	STACK_9, F
$020B	$0876			MOVF	STACK_6, W
$020C	$1C03			BTFSS	STATUS, C
$020D	$0F76			INCFSZ	STACK_6, W
$020E	$02FA			SUBWF	STACK_10, F
$020F	$0877			MOVF	STACK_7, W
$0210	$1C03			BTFSS	STATUS, C
$0211	$0F77			INCFSZ	STACK_7, W
$0212	$02FB			SUBWF	STACK_11, F
$0213	$2A21			GOTO	SOK22L16
$0214	$	SADD22L16:
$0214	$07F8			ADDWF	STACK_8, F
$0215	$0875			MOVF	STACK_5, W
$0216	$1803			BTFSC	STATUS, C
$0217	$0F75			INCFSZ	STACK_5, W
$0218	$07F9			ADDWF	STACK_9, F
$0219	$0876			MOVF	STACK_6, W
$021A	$1803			BTFSC	STATUS, C
$021B	$0F76			INCFSZ	STACK_6, W
$021C	$07FA			ADDWF	STACK_10, F
$021D	$0877			MOVF	STACK_7, W
$021E	$1803			BTFSC	STATUS, C
$021F	$0F77			INCFSZ	STACK_7, W
$0220	$07FB			ADDWF	STACK_11, F
$0221	$	SOK22L16:
$0221	$0DF1			RLF	STACK_1, F
$0222	$3007			MOVLW	7
$0223	$00FC			MOVWF	STACK_12
$0224	$	LOOPS3232C:
$0224	$0D71			RLF	STACK_1, W
$0225	$0DF8			RLF	STACK_8, F
$0226	$0DF9			RLF	STACK_9, F
$0227	$0DFA			RLF	STACK_10, F
$0228	$0DFB			RLF	STACK_11, F
$0229	$0874			MOVF	STACK_4, W
$022A	$1C71			BTFSS	STACK_1, 0
$022B	$2A3A			GOTO	SADD22LC
$022C	$02F8			SUBWF	STACK_8, F
$022D	$0875			MOVF	STACK_5, W
$022E	$1C03			BTFSS	STATUS, C
$022F	$0F75			INCFSZ	STACK_5, W
$0230	$02F9			SUBWF	STACK_9, F
$0231	$0876			MOVF	STACK_6, W
$0232	$1C03			BTFSS	STATUS, C
$0233	$0F76			INCFSZ	STACK_6, W
$0234	$02FA			SUBWF	STACK_10, F
$0235	$0877			MOVF	STACK_7, W
$0236	$1C03			BTFSS	STATUS, C
$0237	$0F77			INCFSZ	STACK_7, W
$0238	$02FB			SUBWF	STACK_11, F
$0239	$2A47			GOTO	SOK22LC
$023A	$	SADD22LC:
$023A	$07F8			ADDWF	STACK_8, F
$023B	$0875			MOVF	STACK_5, W
$023C	$1803			BTFSC	STATUS, C
$023D	$0F75			INCFSZ	STACK_5, W
$023E	$07F9			ADDWF	STACK_9, F
$023F	$0876			MOVF	STACK_6, W
$0240	$1803			BTFSC	STATUS, C
$0241	$0F76			INCFSZ	STACK_6, W
$0242	$07FA			ADDWF	STACK_10, F
$0243	$0877			MOVF	STACK_7, W
$0244	$1803			BTFSC	STATUS, C
$0245	$0F77			INCFSZ	STACK_7, W
$0246	$07FB			ADDWF	STACK_11, F
$0247	$	SOK22LC:
$0247	$0DF1			RLF	STACK_1, F
$0248	$0BFC			DECFSZ	STACK_12, F
$0249	$2A24			GOTO	LOOPS3232C
$024A	$0D70			RLF	STACK_0, W
$024B	$0DF8			RLF	STACK_8, F
$024C	$0DF9			RLF	STACK_9, F
$024D	$0DFA			RLF	STACK_10, F
$024E	$0DFB			RLF	STACK_11, F
$024F	$0874			MOVF	STACK_4, W
$0250	$1C71			BTFSS	STACK_1, 0
$0251	$2A60			GOTO	SADD22L24
$0252	$02F8			SUBWF	STACK_8, F
$0253	$0875			MOVF	STACK_5, W
$0254	$1C03			BTFSS	STATUS, C
$0255	$0F75			INCFSZ	STACK_5, W
$0256	$02F9			SUBWF	STACK_9, F
$0257	$0876			MOVF	STACK_6, W
$0258	$1C03			BTFSS	STATUS, C
$0259	$0F76			INCFSZ	STACK_6, W
$025A	$02FA			SUBWF	STACK_10, F
$025B	$0877			MOVF	STACK_7, W
$025C	$1C03			BTFSS	STATUS, C
$025D	$0F77			INCFSZ	STACK_7, W
$025E	$02FB			SUBWF	STACK_11, F
$025F	$2A6D			GOTO	SOK22L24
$0260	$	SADD22L24:
$0260	$07F8			ADDWF	STACK_8, F
$0261	$0875			MOVF	STACK_5, W
$0262	$1803			BTFSC	STATUS, C
$0263	$0F75			INCFSZ	STACK_5, W
$0264	$07F9			ADDWF	STACK_9, F
$0265	$0876			MOVF	STACK_6, W
$0266	$1803			BTFSC	STATUS, C
$0267	$0F76			INCFSZ	STACK_6, W
$0268	$07FA			ADDWF	STACK_10, F
$0269	$0877			MOVF	STACK_7, W
$026A	$1803			BTFSC	STATUS, C
$026B	$0F77			INCFSZ	STACK_7, W
$026C	$07FB			ADDWF	STACK_11, F
$026D	$	SOK22L24:
$026D	$0DF0			RLF	STACK_0, F
$026E	$3007			MOVLW	7
$026F	$00FC			MOVWF	STACK_12
$0270	$	LOOPS3232D:
$0270	$0D70			RLF	STACK_0, W
$0271	$0DF8			RLF	STACK_8, F
$0272	$0DF9			RLF	STACK_9, F
$0273	$0DFA			RLF	STACK_10, F
$0274	$0DFB			RLF	STACK_11, F
$0275	$0874			MOVF	STACK_4, W
$0276	$1C70			BTFSS	STACK_0, 0
$0277	$2A86			GOTO	SADD22LD
$0278	$02F8			SUBWF	STACK_8, F
$0279	$0875			MOVF	STACK_5, W
$027A	$1C03			BTFSS	STATUS, C
$027B	$0F75			INCFSZ	STACK_5, W
$027C	$02F9			SUBWF	STACK_9, F
$027D	$0876			MOVF	STACK_6, W
$027E	$1C03			BTFSS	STATUS, C
$027F	$0F76			INCFSZ	STACK_6, W
$0280	$02FA			SUBWF	STACK_10, F
$0281	$0877			MOVF	STACK_7, W
$0282	$1C03			BTFSS	STATUS, C
$0283	$0F77			INCFSZ	STACK_7, W
$0284	$02FB			SUBWF	STACK_11, F
$0285	$2A93			GOTO	SOK22LD
$0286	$	SADD22LD:
$0286	$07F8			ADDWF	STACK_8, F
$0287	$0875			MOVF	STACK_5, W
$0288	$1803			BTFSC	STATUS, C
$0289	$0F75			INCFSZ	STACK_5, W
$028A	$07F9			ADDWF	STACK_9, F
$028B	$0876			MOVF	STACK_6, W
$028C	$1803			BTFSC	STATUS, C
$028D	$0F76			INCFSZ	STACK_6, W
$028E	$07FA			ADDWF	STACK_10, F
$028F	$0877			MOVF	STACK_7, W
$0290	$1803			BTFSC	STATUS, C
$0291	$0F77			INCFSZ	STACK_7, W
$0292	$07FB			ADDWF	STACK_11, F
$0293	$	SOK22LD:
$0293	$0DF0			RLF	STACK_0, F
$0294	$0BFC			DECFSZ	STACK_12, F
$0295	$2A70			GOTO	LOOPS3232D
$0296	$1870			BTFSC	STACK_0, 0
$0297	$2AA6			GOTO	SOK22L
$0298	$0874			MOVF	STACK_4, W
$0299	$07F8			ADDWF	STACK_8, F
$029A	$0875			MOVF	STACK_5, W
$029B	$1803			BTFSC	STATUS, C
$029C	$0F75			INCFSZ	STACK_5, W
$029D	$07F9			ADDWF	STACK_9, F
$029E	$0876			MOVF	STACK_6, W
$029F	$1803			BTFSC	STATUS, C
$02A0	$0F76			INCFSZ	STACK_6, W
$02A1	$07FA			ADDWF	STACK_10, F
$02A2	$0877			MOVF	STACK_7, W
$02A3	$1803			BTFSC	STATUS, C
$02A4	$0F77			INCFSZ	STACK_7, W
$02A5	$07FB			ADDWF	STACK_11, F
$02A6	$	SOK22L:
$02A6	$0008			RETURN
$0564	$	_COMFREM:
$0564	$1303			BCF	STATUS, RP1
$0565	$1283			BCF	STATUS, RP0
$0566	$09FB			COMF	STACK_11, F
$0567	$09FA			COMF	STACK_10, F
$0568	$09F9			COMF	STACK_9, F
$0569	$09F8			COMF	STACK_8, F
$056A	$0AF8			INCF	STACK_8, F
$056B	$1903			BTFSC	STATUS, Z
$056C	$0AF9			INCF	STACK_9, F
$056D	$1903			BTFSC	STATUS, Z
$056E	$0AFA			INCF	STACK_10, F
$056F	$1903			BTFSC	STATUS, Z
$0570	$0AFB			INCF	STACK_11, F
$0571	$0008			RETURN
$0572	$	_Lcd_Chr_CP:
$0572	$1303			BCF	STATUS, RP1
$0573	$1283			BCF	STATUS, RP0
$0574	$01A3			CLRF	LCD_cmd_status, 1
$0575	$0846			MOVF	FARG_Lcd_Chr_CP+0, 0
$0576	$00C7			MOVWF	FARG_Lcd_Cmd+0
$0577	$2433			CALL	_Lcd_Cmd
$0578	$3001			MOVLW	1
$0579	$00A3			MOVWF	LCD_cmd_status
$057A	$0008			RETURN
$057B	$	_Get_Fosc_kHz:
;delays.c,1 :: 		unsigned long Get_Fosc_kHz(){
;delays.c,3 :: 		return Clock_kHz();
$057B	$3020			MOVLW	32
$057C	$1303			BCF	STATUS, RP1
$057D	$1283			BCF	STATUS, RP0
$057E	$00F0			MOVWF	STACK_0
$057F	$304E			MOVLW	78
$0580	$00F1			MOVWF	STACK_0+1
$0581	$01F2			CLRF	STACK_0+2
$0582	$01F3			CLRF	STACK_0+3
;delays.c,5 :: 		}
$0583	$0008			RETURN
$0553	$	_Delay_Cyc:
;delays.c,53 :: 		void Delay_Cyc(char cycles_div_by_10)  { // Cycles_div_by_10: min 3, max 255
;delays.c,55 :: 		--cycles_div_by_10;
$0553	$1303			BCF	STATUS, RP1
$0554	$1283			BCF	STATUS, RP0
$0555	$03C6			DECF	FARG_Delay_Cyc+0, 1
;delays.c,56 :: 		--cycles_div_by_10;
$0556	$03C6			DECF	FARG_Delay_Cyc+0, 1
;delays.c,57 :: 		while (cycles_div_by_10 > 0) {
$0557	$	L_Delay_Cyc_0:
$0557	$0846			MOVF	FARG_Delay_Cyc+0, 0
$0558	$3C00			SUBLW	0
$0559	$1803			BTFSC	STATUS, C
$055A	$2D60			GOTO	L_Delay_Cyc_1
;delays.c,58 :: 		--cycles_div_by_10;
$055B	$03C6			DECF	FARG_Delay_Cyc+0, 1
;delays.c,59 :: 		asm nop;
$055C	$0000			NOP
;delays.c,60 :: 		asm nop;
$055D	$0000			NOP
;delays.c,61 :: 		asm nop;
$055E	$0000			NOP
;delays.c,62 :: 		}
$055F	$2D57			GOTO	L_Delay_Cyc_0
$0560	$	L_Delay_Cyc_1:
;delays.c,63 :: 		asm nop;
$0560	$0000			NOP
;delays.c,64 :: 		asm nop;
$0561	$0000			NOP
;delays.c,65 :: 		asm nop;
$0562	$0000			NOP
;delays.c,66 :: 		}
$0563	$0008			RETURN
$04B4	$	_Mul_32x32_U:
$04B4	$1303			BCF	STATUS, RP1
$04B5	$1283			BCF	STATUS, RP0
$04B6	$3022			MOVLW	34
$04B7	$00FC			MOVWF	STACK_12
$04B8	$01F8			CLRF	STACK_8
$04B9	$01F9			CLRF	STACK_9
$04BA	$01FA			CLRF	STACK_10
$04BB	$01FB			CLRF	STACK_11
$04BC	$	_NEXT:
$04BC	$03FC			DECF	STACK_12, F
$04BD	$1903			BTFSC	STATUS, Z
$04BE	$2CEA			GOTO	_EXIT2
$04BF	$1003			BCF	STATUS, C
$04C0	$	_LOOP:
$04C0	$0CFB			RRF	STACK_11, F
$04C1	$0CFA			RRF	STACK_10, F
$04C2	$0CF9			RRF	STACK_9, F
$04C3	$0CF8			RRF	STACK_8, F
$04C4	$0CF3			RRF	STACK_3, F
$04C5	$0CF2			RRF	STACK_2, F
$04C6	$0CF1			RRF	STACK_1, F
$04C7	$0CF0			RRF	STACK_0, F
$04C8	$1C03			BTFSS	STATUS, C
$04C9	$2CBC			GOTO	_NEXT
$04CA	$03FC			DECF	STACK_12, F
$04CB	$1903			BTFSC	STATUS, Z
$04CC	$2CDC			GOTO	_EXIT1
$04CD	$0874			MOVF	STACK_4, W
$04CE	$07F8			ADDWF	STACK_8, F
$04CF	$0875			MOVF	STACK_5, W
$04D0	$1803			BTFSC	STATUS, C
$04D1	$0F75			INCFSZ	STACK_5, W
$04D2	$07F9			ADDWF	STACK_9, F
$04D3	$0876			MOVF	STACK_6, W
$04D4	$1803			BTFSC	STATUS, C
$04D5	$0F76			INCFSZ	STACK_6, W
$04D6	$07FA			ADDWF	STACK_10, F
$04D7	$0877			MOVF	STACK_7, W
$04D8	$1803			BTFSC	STATUS, C
$04D9	$0F77			INCFSZ	STACK_7, W
$04DA	$07FB			ADDWF	STACK_11, F
$04DB	$2CC0			GOTO	_LOOP
$04DC	$	_EXIT1:
$04DC	$0874			MOVF	STACK_4, W
$04DD	$07F8			ADDWF	STACK_8, F
$04DE	$0875			MOVF	STACK_5, W
$04DF	$1803			BTFSC	STATUS, C
$04E0	$0F75			INCFSZ	STACK_5, W
$04E1	$07F9			ADDWF	STACK_9, F
$04E2	$0876			MOVF	STACK_6, W
$04E3	$1803			BTFSC	STATUS, C
$04E4	$0F76			INCFSZ	STACK_6, W
$04E5	$07FA			ADDWF	STACK_10, F
$04E6	$0877			MOVF	STACK_7, W
$04E7	$1803			BTFSC	STATUS, C
$04E8	$0F77			INCFSZ	STACK_7, W
$04E9	$07FB			ADDWF	STACK_11, F
$04EA	$	_EXIT2:
$04EA	$0008			RETURN
$034D	$	_Div_32x32_S:
$034D	$1303			BCF	STATUS, RP1
$034E	$1283			BCF	STATUS, RP0
$034F	$	FXD3232S:
$034F	$01FC			CLRF	STACK_12
$0350	$1BF7			BTFSC	STACK_7, 7
$0351	$0AFC			INCF	STACK_12, F
$0352	$01FD			CLRF	STACK_13
$0353	$01FB			CLRF	STACK_11
$0354	$01FA			CLRF	STACK_10
$0355	$01F9			CLRF	STACK_9
$0356	$01F8			CLRF	STACK_8
$0357	$0873			MOVF	STACK_3, W
$0358	$0472			IORWF	STACK_2, W
$0359	$0471			IORWF	STACK_1, W
$035A	$0470			IORWF	STACK_0, W
$035B	$1903			BTFSC	STATUS, Z
$035C	$2BE1			GOTO	END_ALL
$035D	$0873			MOVF	STACK_3, W
$035E	$0677			XORWF	STACK_7, W
$035F	$00A0			MOVWF	___math_tempb
$0360	$1BA0			BTFSC	___math_tempb, 7
$0361	$09FD			COMF	STACK_13, F
$0362	$1FF7			BTFSS	STACK_7, 7
$0363	$2B6F			GOTO	CA3232S
$0364	$09F4			COMF	STACK_4, F
$0365	$09F5			COMF	STACK_5, F
$0366	$09F6			COMF	STACK_6, F
$0367	$09F7			COMF	STACK_7, F
$0368	$0AF4			INCF	STACK_4, F
$0369	$1903			BTFSC	STATUS, Z
$036A	$0AF5			INCF	STACK_5, F
$036B	$1903			BTFSC	STATUS, Z
$036C	$0AF6			INCF	STACK_6, F
$036D	$1903			BTFSC	STATUS, Z
$036E	$0AF7			INCF	STACK_7, F
$036F	$	CA3232S:
$036F	$1FF3			BTFSS	STACK_3, 7
$0370	$2B7C			GOTO	C3232SX
$0371	$09F0			COMF	STACK_0, F
$0372	$09F1			COMF	STACK_1, F
$0373	$09F2			COMF	STACK_2, F
$0374	$09F3			COMF	STACK_3, F
$0375	$0AF0			INCF	STACK_0, F
$0376	$1903			BTFSC	STATUS, Z
$0377	$0AF1			INCF	STACK_1, F
$0378	$1903			BTFSC	STATUS, Z
$0379	$0AF2			INCF	STACK_2, F
$037A	$1903			BTFSC	STATUS, Z
$037B	$0AF3			INCF	STACK_3, F
$037C	$	C3232SX:
$037C	$0873			MOVF	STACK_3, W
$037D	$0477			IORWF	STACK_7, W
$037E	$00A0			MOVWF	___math_tempb
$037F	$1BA0			BTFSC	___math_tempb, 7
$0380	$2B9D			GOTO	C3232SX1
$0381	$	C3232S:
$0381	$2179			CALL	_SDIV3232L
$0382	$	C3232S2:
$0382	$1BFC			BTFSC	STACK_12, 7
$0383	$2BBA			GOTO	C3232SX4
$0384	$	C3232SOK:
$0384	$1FFD			BTFSS	STACK_13, 7
$0385	$2BE1			GOTO	END_ALL
$0386	$09F0			COMF	STACK_0, F
$0387	$09F1			COMF	STACK_1, F
$0388	$09F2			COMF	STACK_2, F
$0389	$09F3			COMF	STACK_3, F
$038A	$0AF0			INCF	STACK_0, F
$038B	$1903			BTFSC	STATUS, Z
$038C	$0AF1			INCF	STACK_1, F
$038D	$1903			BTFSC	STATUS, Z
$038E	$0AF2			INCF	STACK_2, F
$038F	$1903			BTFSC	STATUS, Z
$0390	$0AF3			INCF	STACK_3, F
$0391	$09F8			COMF	STACK_8, F
$0392	$09F9			COMF	STACK_9, F
$0393	$09FA			COMF	STACK_10, F
$0394	$09FB			COMF	STACK_11, F
$0395	$0AF8			INCF	STACK_8, F
$0396	$1903			BTFSC	STATUS, Z
$0397	$0AF9			INCF	STACK_9, F
$0398	$1903			BTFSC	STATUS, Z
$0399	$0AFA			INCF	STACK_10, F
$039A	$1903			BTFSC	STATUS, Z
$039B	$0AFB			INCF	STACK_11, F
$039C	$2BE1			GOTO	END_ALL
$039D	$	C3232SX1:
$039D	$1FF7			BTFSS	STACK_7, 7
$039E	$2BB4			GOTO	C3232SX3
$039F	$1BF3			BTFSC	STACK_3, 7
$03A0	$2BAE			GOTO	C3232SX2
$03A1	$0873			MOVF	STACK_3, W
$03A2	$00FB			MOVWF	STACK_11
$03A3	$0872			MOVF	STACK_2, W
$03A4	$00FA			MOVWF	STACK_10
$03A5	$0871			MOVF	STACK_1, W
$03A6	$00F9			MOVWF	STACK_9
$03A7	$0870			MOVF	STACK_0, W
$03A8	$00F8			MOVWF	STACK_8
$03A9	$01F3			CLRF	STACK_3
$03AA	$01F2			CLRF	STACK_2
$03AB	$01F1			CLRF	STACK_1
$03AC	$01F0			CLRF	STACK_0
$03AD	$2B84			GOTO	C3232SOK
$03AE	$	C3232SX2:
$03AE	$01F3			CLRF	STACK_3
$03AF	$01F2			CLRF	STACK_2
$03B0	$01F1			CLRF	STACK_1
$03B1	$01F0			CLRF	STACK_0
$03B2	$0AF0			INCF	STACK_0, F
$03B3	$3400			RETLW	0x00
$03B4	$	C3232SX3:
$03B4	$09F3			COMF	STACK_3, F
$03B5	$09F2			COMF	STACK_2, F
$03B6	$09F1			COMF	STACK_1, F
$03B7	$09F0			COMF	STACK_0, F
$03B8	$17FC			BSF	STACK_12, 7
$03B9	$2B81			GOTO	C3232S
$03BA	$	C3232SX4:
$03BA	$0AF8			INCF	STACK_8, F
$03BB	$1903			BTFSC	STATUS, Z
$03BC	$0AF9			INCF	STACK_9, F
$03BD	$1903			BTFSC	STATUS, Z
$03BE	$0AFA			INCF	STACK_10, F
$03BF	$1903			BTFSC	STATUS, Z
$03C0	$0AFB			INCF	STACK_11, F
$03C1	$0874			MOVF	STACK_4, W
$03C2	$0278			SUBWF	STACK_8, W
$03C3	$1D03			BTFSS	STATUS, Z
$03C4	$2B84			GOTO	C3232SOK
$03C5	$0875			MOVF	STACK_5, W
$03C6	$0279			SUBWF	STACK_9, W
$03C7	$1D03			BTFSS	STATUS, Z
$03C8	$2B84			GOTO	C3232SOK
$03C9	$0876			MOVF	STACK_6, W
$03CA	$027A			SUBWF	STACK_10, W
$03CB	$1D03			BTFSS	STATUS, Z
$03CC	$2B84			GOTO	C3232SOK
$03CD	$0877			MOVF	STACK_7, W
$03CE	$027B			SUBWF	STACK_11, W
$03CF	$1D03			BTFSS	STATUS, Z
$03D0	$2B84			GOTO	C3232SOK
$03D1	$01FB			CLRF	STACK_11
$03D2	$01FA			CLRF	STACK_10
$03D3	$01F9			CLRF	STACK_9
$03D4	$01F8			CLRF	STACK_8
$03D5	$0AF0			INCF	STACK_0, F
$03D6	$1903			BTFSC	STATUS, Z
$03D7	$0AF1			INCF	STACK_1, F
$03D8	$1903			BTFSC	STATUS, Z
$03D9	$0AF2			INCF	STACK_2, F
$03DA	$1903			BTFSC	STATUS, Z
$03DB	$0AF3			INCF	STACK_3, F
$03DC	$1FF3			BTFSS	STACK_3, 7
$03DD	$2B84			GOTO	C3232SOK
$03DE	$01A0			CLRF	___math_tempb
$03DF	$1620			BSF	___math_tempb, 4
$03E0	$34FF			RETLW	0xFF
$03E1	$	END_ALL:
$03E1	$01A0			CLRF	___math_tempb
$03E2	$1C7C			BTFSS	STACK_12, 0
$03E3	$2BE5			GOTO	avoid_comfrem
$03E4	$2564			CALL	_COMFREM
$03E5	$	avoid_comfrem:
$03E5	$3F00			ADDLW	0x00
$03E6	$0008			RETURN
$0509	$	_Div_16x16_U:
$0509	$1303			BCF	STATUS, RP1
$050A	$1283			BCF	STATUS, RP0
$050B	$01F8			CLRF	STACK_8
$050C	$01F9			CLRF	STACK_9
$050D	$3010			MOVLW	16
$050E	$00FC			MOVWF	STACK_12
$050F	$0D71			RLF	STACK_1, W
$0510	$0DF8			RLF	STACK_8, F
$0511	$0DF9			RLF	STACK_9, F
$0512	$0874			MOVF	STACK_4, W
$0513	$02F8			SUBWF	STACK_8, F
$0514	$0875			MOVF	STACK_5, W
$0515	$1C03			BTFSS	STATUS, C
$0516	$0F75			INCFSZ	STACK_5, W
$0517	$02F9			SUBWF	STACK_9, F
$0518	$1803			BTFSC	STATUS, C
$0519	$2D21			GOTO	$+8
$051A	$0874			MOVF	STACK_4, W
$051B	$07F8			ADDWF	STACK_8, F
$051C	$0875			MOVF	STACK_5, W
$051D	$1803			BTFSC	STATUS, C
$051E	$0F75			INCFSZ	STACK_5, W
$051F	$07F9			ADDWF	STACK_9, F
$0520	$1003			BCF	STATUS, C
$0521	$0DF0			RLF	STACK_0, F
$0522	$0DF1			RLF	STACK_1, F
$0523	$0BFC			DECFSZ	STACK_12, F
$0524	$2D0F			GOTO	$-21
$0525	$0008			RETURN
$03E7	$	_Lcd_Init:
$03E7	$2542			CALL	_Delay_5500us
$03E8	$2542			CALL	_Delay_5500us
$03E9	$2542			CALL	_Delay_5500us
$03EA	$0838			MOVF	FARG_Lcd_Init+0, 0
$03EB	$00A2			MOVWF	LCD_port_address
$03EC	$0838			MOVF	FARG_Lcd_Init+0, 0
$03ED	$0084			MOVWF	FSR
$03EE	$1784			BSF	FSR, 7
$03EF	$1180			BCF	INDF, ___ENABLE
$03F0	$1100			BCF	INDF, ___RS
$03F1	$1000			BCF	INDF, ___RW
$03F2	$1380			BCF	INDF, ___DB7
$03F3	$1300			BCF	INDF, ___DB6
$03F4	$1280			BCF	INDF, ___DB5
$03F5	$1200			BCF	INDF, ___DB4
$03F6	$1384			BCF	FSR, 7
$03F7	$1180			BCF	INDF, ___ENABLE
$03F8	$1100			BCF	INDF, ___RS
$03F9	$1000			BCF	INDF, ___RW
$03FA	$1380			BCF	INDF, ___DB7
$03FB	$1300			BCF	INDF, ___DB6
$03FC	$1280			BCF	INDF, ___DB5
$03FD	$1200			BCF	INDF, ___DB4
$03FE	$1680			BSF	INDF, ___DB5
$03FF	$1600			BSF	INDF, ___DB4
$0400	$1580			BSF	INDF, ___ENABLE
$0401	$1180			BCF	INDF, ___ENABLE
$0402	$2542			CALL	_Delay_5500us
$0403	$1580			BSF	INDF, ___ENABLE
$0404	$1180			BCF	INDF, ___ENABLE
$0405	$2542			CALL	_Delay_5500us
$0406	$1580			BSF	INDF, ___ENABLE
$0407	$1180			BCF	INDF, ___ENABLE
$0408	$2542			CALL	_Delay_5500us
$0409	$1680			BSF	INDF, ___DB5
$040A	$1200			BCF	INDF, ___DB4
$040B	$1580			BSF	INDF, ___ENABLE
$040C	$1180			BCF	INDF, ___ENABLE
$040D	$2542			CALL	_Delay_5500us
$040E	$0180			CLRF	INDF
$040F	$1680			BSF	INDF, ___DB5
$0410	$1580			BSF	INDF, ___ENABLE
$0411	$1180			BCF	INDF, ___ENABLE
$0412	$0180			CLRF	INDF
$0413	$1780			BSF	INDF, ___DB7
$0414	$1580			BSF	INDF, ___ENABLE
$0415	$1180			BCF	INDF, ___ENABLE
$0416	$2542			CALL	_Delay_5500us
$0417	$0180			CLRF	INDF
$0418	$1600			BSF	INDF, ___DB4
$0419	$1580			BSF	INDF, ___ENABLE
$041A	$1180			BCF	INDF, ___ENABLE
$041B	$0180			CLRF	INDF
$041C	$1580			BSF	INDF, ___ENABLE
$041D	$1180			BCF	INDF, ___ENABLE
$041E	$2542			CALL	_Delay_5500us
$041F	$0180			CLRF	INDF
$0420	$1580			BSF	INDF, ___ENABLE
$0421	$1180			BCF	INDF, ___ENABLE
$0422	$1600			BSF	INDF, ___DB4
$0423	$1580			BSF	INDF, ___ENABLE
$0424	$1180			BCF	INDF, ___ENABLE
$0425	$2542			CALL	_Delay_5500us
$0426	$0180			CLRF	INDF
$0427	$1580			BSF	INDF, ___ENABLE
$0428	$1180			BCF	INDF, ___ENABLE
$0429	$1600			BSF	INDF, ___DB4
$042A	$1680			BSF	INDF, ___DB5
$042B	$1700			BSF	INDF, ___DB6
$042C	$1780			BSF	INDF, ___DB7
$042D	$1580			BSF	INDF, ___ENABLE
$042E	$1180			BCF	INDF, ___ENABLE
$042F	$2542			CALL	_Delay_5500us
$0430	$3001			MOVLW	1
$0431	$00A3			MOVWF	LCD_cmd_status
$0432	$0008			RETURN
$0471	$	_LCD_Out:
$0471	$2C83			GOTO	L_LCD_Out_17
$0472	$	L_LCD_Out_19:
$0472	$3080			MOVLW	128
$0473	$1303			BCF	STATUS, RP1
$0474	$1283			BCF	STATUS, RP0
$0475	$00B8			MOVWF	FARG_LCD_Out+0
$0476	$2C96			GOTO	L_LCD_Out_18
$0477	$	L_LCD_Out_20:
$0477	$30C0			MOVLW	192
$0478	$00B8			MOVWF	FARG_LCD_Out+0
$0479	$2C96			GOTO	L_LCD_Out_18
$047A	$	L_LCD_Out_21:
$047A	$3094			MOVLW	148
$047B	$00B8			MOVWF	FARG_LCD_Out+0
$047C	$2C96			GOTO	L_LCD_Out_18
$047D	$	L_LCD_Out_22:
$047D	$30D4			MOVLW	212
$047E	$00B8			MOVWF	FARG_LCD_Out+0
$047F	$2C96			GOTO	L_LCD_Out_18
$0480	$	L_LCD_Out_23:
$0480	$3080			MOVLW	128
$0481	$00B8			MOVWF	FARG_LCD_Out+0
$0482	$2C96			GOTO	L_LCD_Out_18
$0483	$	L_LCD_Out_17:
$0483	$1303			BCF	STATUS, RP1
$0484	$1283			BCF	STATUS, RP0
$0485	$0838			MOVF	FARG_LCD_Out+0, 0
$0486	$3A01			XORLW	1
$0487	$1903			BTFSC	STATUS, Z
$0488	$2C72			GOTO	L_LCD_Out_19
$0489	$0838			MOVF	FARG_LCD_Out+0, 0
$048A	$3A02			XORLW	2
$048B	$1903			BTFSC	STATUS, Z
$048C	$2C77			GOTO	L_LCD_Out_20
$048D	$0838			MOVF	FARG_LCD_Out+0, 0
$048E	$3A03			XORLW	3
$048F	$1903			BTFSC	STATUS, Z
$0490	$2C7A			GOTO	L_LCD_Out_21
$0491	$0838			MOVF	FARG_LCD_Out+0, 0
$0492	$3A04			XORLW	4
$0493	$1903			BTFSC	STATUS, Z
$0494	$2C7D			GOTO	L_LCD_Out_22
$0495	$2C80			GOTO	L_LCD_Out_23
$0496	$	L_LCD_Out_18:
$0496	$0339			DECF	FARG_LCD_Out+1, 0
$0497	$00F0			MOVWF	STACK_0
$0498	$0838			MOVF	FARG_LCD_Out+0, 0
$0499	$07F0			ADDWF	STACK_0, 1
$049A	$0870			MOVF	STACK_0, 0
$049B	$00B8			MOVWF	FARG_LCD_Out+0
$049C	$0870			MOVF	STACK_0, 0
$049D	$00C7			MOVWF	FARG_Lcd_Cmd+0
$049E	$2433			CALL	_Lcd_Cmd
$049F	$01A3			CLRF	LCD_cmd_status, 1
$04A0	$01BB			CLRF	LCD_Out_i_L0, 1
$04A1	$	L_LCD_Out_24:
$04A1	$083B			MOVF	LCD_Out_i_L0, 0
$04A2	$073A			ADDWF	FARG_LCD_Out+2, 0
$04A3	$0084			MOVWF	FSR
$04A4	$0800			MOVF	INDF, 0
$04A5	$00F0			MOVWF	STACK_0
$04A6	$0870			MOVF	STACK_0, 0
$04A7	$1903			BTFSC	STATUS, Z
$04A8	$2CB1			GOTO	L_LCD_Out_25
$04A9	$083B			MOVF	LCD_Out_i_L0, 0
$04AA	$073A			ADDWF	FARG_LCD_Out+2, 0
$04AB	$0084			MOVWF	FSR
$04AC	$0800			MOVF	INDF, 0
$04AD	$00C6			MOVWF	FARG_Lcd_Chr_CP+0
$04AE	$2572			CALL	_Lcd_Chr_CP
$04AF	$0ABB			INCF	LCD_Out_i_L0, 1
$04B0	$2CA1			GOTO	L_LCD_Out_24
$04B1	$	L_LCD_Out_25:
$04B1	$3001			MOVLW	1
$04B2	$00A3			MOVWF	LCD_cmd_status
$04B3	$0008			RETURN
$0526	$	_Sound_Init:
$0526	$1303			BCF	STATUS, RP1
$0527	$1283			BCF	STATUS, RP0
$0528	$0838			MOVF	FARG_Sound_Init+0, 0
$0529	$00A4			MOVWF	Sound_soundPortAddr
$052A	$0839			MOVF	FARG_Sound_Init+1, 0
$052B	$00F1			MOVWF	STACK_1
$052C	$3001			MOVLW	1
$052D	$00F0			MOVWF	STACK_0
$052E	$0871			MOVF	STACK_1, 0
$052F	$	L_Sound_Init_3:
$052F	$1903			BTFSC	STATUS, Z
$0530	$2D35			GOTO	L_Sound_Init_4
$0531	$0DF0			RLF	STACK_0, 1
$0532	$1070			BCF	STACK_0, 0
$0533	$3FFF			ADDLW	255
$0534	$2D2F			GOTO	L_Sound_Init_3
$0535	$	L_Sound_Init_4:
$0535	$0870			MOVF	STACK_0, 0
$0536	$00A5			MOVWF	Sound_pinMask1
$0537	$09F0			COMF	STACK_0, F
$0538	$0870			MOVF	STACK_0, 0
$0539	$00A6			MOVWF	Sound_pinMask0
$053A	$0838			MOVF	FARG_Sound_Init+0, 0
$053B	$0084			MOVWF	FSR
$053C	$0870			MOVF	STACK_0, 0
$053D	$0580			ANDWF	INDF, 1
$053E	$1784			BSF	FSR, 7
$053F	$0870			MOVF	STACK_0, 0
$0540	$0580			ANDWF	INDF, 1
$0541	$0008			RETURN
$058C	$	_get_remote:
;IRTest.c,26 :: 		unsigned char get_remote()
;IRTest.c,28 :: 		unsigned char _key=ir_cmd;      // Get character to buffer
$058C	$1303			BCF	STATUS, RP1
$058D	$1283			BCF	STATUS, RP0
$058E	$0821			MOVF	_ir_cmd, 0
$058F	$00B8			MOVWF	get_remote__key_L0
;IRTest.c,29 :: 		ir_cmd=0;                       // Clear old data
$0590	$01A1			CLRF	_ir_cmd, 1
;IRTest.c,30 :: 		return(_key);                   // Return character from Remote
$0591	$0838			MOVF	get_remote__key_L0, 0
$0592	$00F0			MOVWF	STACK_0
;IRTest.c,31 :: 		}
$0593	$0008			RETURN
$02A7	$	_Sound_Play:
$02A7	$257B			CALL	_Get_Fosc_kHz
$02A8	$30E8			MOVLW	232
$02A9	$00F4			MOVWF	STACK_4
$02AA	$3003			MOVLW	3
$02AB	$00F5			MOVWF	STACK_4+1
$02AC	$01F6			CLRF	STACK_4+2
$02AD	$01F7			CLRF	STACK_4+3
$02AE	$24B4			CALL	_mul_32x32_u
$02AF	$0870			MOVF	STACK_0, 0
$02B0	$00BE			MOVWF	Sound_Play_per_nc_L0
$02B1	$0871			MOVF	STACK_0+1, 0
$02B2	$00BF			MOVWF	Sound_Play_per_nc_L0+1
$02B3	$0872			MOVF	STACK_0+2, 0
$02B4	$00C0			MOVWF	Sound_Play_per_nc_L0+2
$02B5	$0873			MOVF	STACK_0+3, 0
$02B6	$00C1			MOVWF	Sound_Play_per_nc_L0+3
$02B7	$0838			MOVF	FARG_Sound_Play+0, 0
$02B8	$00F4			MOVWF	STACK_4
$02B9	$0839			MOVF	FARG_Sound_Play+1, 0
$02BA	$00F5			MOVWF	STACK_4+1
$02BB	$01F6			CLRF	STACK_4+2
$02BC	$01F7			CLRF	STACK_4+3
$02BD	$234D			CALL	_div_32x32_s
$02BE	$0870			MOVF	STACK_0, 0
$02BF	$00BE			MOVWF	Sound_Play_per_nc_L0
$02C0	$0871			MOVF	STACK_0+1, 0
$02C1	$00BF			MOVWF	Sound_Play_per_nc_L0+1
$02C2	$0872			MOVF	STACK_0+2, 0
$02C3	$00C0			MOVWF	Sound_Play_per_nc_L0+2
$02C4	$0873			MOVF	STACK_0+3, 0
$02C5	$00C1			MOVWF	Sound_Play_per_nc_L0+3
$02C6	$3003			MOVLW	3
$02C7	$00F4			MOVWF	STACK_4
$02C8	$0874			MOVF	STACK_4, 0
$02C9	$	L_Sound_Play_5:
$02C9	$1903			BTFSC	STATUS, Z
$02CA	$2AD2			GOTO	L_Sound_Play_6
$02CB	$0CF3			RRF	STACK_0+3, 1
$02CC	$0CF2			RRF	STACK_0+2, 1
$02CD	$0CF1			RRF	STACK_0+1, 1
$02CE	$0CF0			RRF	STACK_0, 1
$02CF	$13F3			BCF	STACK_0+3, 7
$02D0	$3FFF			ADDLW	255
$02D1	$2AC9			GOTO	L_Sound_Play_5
$02D2	$	L_Sound_Play_6:
$02D2	$0870			MOVF	STACK_0, 0
$02D3	$00BC			MOVWF	Sound_Play_nc_L0
$02D4	$0871			MOVF	STACK_0+1, 0
$02D5	$00BD			MOVWF	Sound_Play_nc_L0+1
$02D6	$257B			CALL	_Get_Fosc_kHz
$02D7	$083A			MOVF	FARG_Sound_Play+2, 0
$02D8	$00F4			MOVWF	STACK_4
$02D9	$083B			MOVF	FARG_Sound_Play+3, 0
$02DA	$00F5			MOVWF	STACK_4+1
$02DB	$01F6			CLRF	STACK_4+2
$02DC	$01F7			CLRF	STACK_4+3
$02DD	$24B4			CALL	_mul_32x32_u
$02DE	$0870			MOVF	STACK_0, 0
$02DF	$00C2			MOVWF	FLOC_Sound_Play+6
$02E0	$0871			MOVF	STACK_0+1, 0
$02E1	$00C3			MOVWF	FLOC_Sound_Play+7
$02E2	$0872			MOVF	STACK_0+2, 0
$02E3	$00C4			MOVWF	FLOC_Sound_Play+8
$02E4	$0873			MOVF	STACK_0+3, 0
$02E5	$00C5			MOVWF	FLOC_Sound_Play+9
$02E6	$083C			MOVF	Sound_Play_nc_L0, 0
$02E7	$00F0			MOVWF	STACK_0
$02E8	$083D			MOVF	Sound_Play_nc_L0+1, 0
$02E9	$00F1			MOVWF	STACK_0+1
$02EA	$01F2			CLRF	STACK_0+2
$02EB	$01F3			CLRF	STACK_0+3
$02EC	$3003			MOVLW	3
$02ED	$00F4			MOVWF	STACK_4
$02EE	$0874			MOVF	STACK_4, 0
$02EF	$	L_Sound_Play_7:
$02EF	$1903			BTFSC	STATUS, Z
$02F0	$2AF8			GOTO	L_Sound_Play_8
$02F1	$0DF0			RLF	STACK_0, 1
$02F2	$0DF1			RLF	STACK_0+1, 1
$02F3	$0DF2			RLF	STACK_0+2, 1
$02F4	$0DF3			RLF	STACK_0+3, 1
$02F5	$1070			BCF	STACK_0, 0
$02F6	$3FFF			ADDLW	255
$02F7	$2AEF			GOTO	L_Sound_Play_7
$02F8	$	L_Sound_Play_8:
$02F8	$0870			MOVF	STACK_0, 0
$02F9	$00F4			MOVWF	STACK_4
$02FA	$0871			MOVF	STACK_0+1, 0
$02FB	$00F5			MOVWF	STACK_4+1
$02FC	$0872			MOVF	STACK_0+2, 0
$02FD	$00F6			MOVWF	STACK_4+2
$02FE	$0873			MOVF	STACK_0+3, 0
$02FF	$00F7			MOVWF	STACK_4+3
$0300	$0842			MOVF	FLOC_Sound_Play+6, 0
$0301	$00F0			MOVWF	STACK_0
$0302	$0843			MOVF	FLOC_Sound_Play+7, 0
$0303	$00F1			MOVWF	STACK_0+1
$0304	$0844			MOVF	FLOC_Sound_Play+8, 0
$0305	$00F2			MOVWF	STACK_0+2
$0306	$0845			MOVF	FLOC_Sound_Play+9, 0
$0307	$00F3			MOVWF	STACK_0+3
$0308	$234D			CALL	_div_32x32_s
$0309	$0870			MOVF	STACK_0, 0
$030A	$00BE			MOVWF	Sound_Play_per_nc_L0
$030B	$0871			MOVF	STACK_0+1, 0
$030C	$00BF			MOVWF	Sound_Play_per_nc_L0+1
$030D	$0872			MOVF	STACK_0+2, 0
$030E	$00C0			MOVWF	Sound_Play_per_nc_L0+2
$030F	$0873			MOVF	STACK_0+3, 0
$0310	$00C1			MOVWF	Sound_Play_per_nc_L0+3
$0311	$300A			MOVLW	10
$0312	$00F4			MOVWF	STACK_4
$0313	$3000			MOVLW	0
$0314	$00F5			MOVWF	STACK_4+1
$0315	$083C			MOVF	Sound_Play_nc_L0, 0
$0316	$00F0			MOVWF	STACK_0
$0317	$083D			MOVF	Sound_Play_nc_L0+1, 0
$0318	$00F1			MOVWF	STACK_0+1
$0319	$2509			CALL	_div_16x16_u
$031A	$0870			MOVF	STACK_0, 0
$031B	$00BC			MOVWF	Sound_Play_nc_L0
$031C	$0871			MOVF	STACK_0+1, 0
$031D	$00BD			MOVWF	Sound_Play_nc_L0+1
$031E	$3000			MOVLW	0
$031F	$0271			SUBWF	STACK_0+1, 0
$0320	$1D03			BTFSS	STATUS, Z
$0321	$2B24			GOTO	L_Sound_Play_9
$0322	$3003			MOVLW	3
$0323	$0270			SUBWF	STACK_0, 0
$0324	$	L_Sound_Play_9:
$0324	$1803			BTFSC	STATUS, C
$0325	$2B27			GOTO	L_Sound_Play_0
$0326	$0008			RETURN
$0327	$	L_Sound_Play_0:
$0327	$0824			MOVF	Sound_soundPortAddr, 0
$0328	$0084			MOVWF	FSR
$0329	$	L_Sound_Play_1:
$0329	$083E			MOVF	Sound_Play_per_nc_L0, 0
$032A	$00F0			MOVWF	STACK_0
$032B	$083F			MOVF	Sound_Play_per_nc_L0+1, 0
$032C	$00F1			MOVWF	STACK_0+1
$032D	$0840			MOVF	Sound_Play_per_nc_L0+2, 0
$032E	$00F2			MOVWF	STACK_0+2
$032F	$0841			MOVF	Sound_Play_per_nc_L0+3, 0
$0330	$00F3			MOVWF	STACK_0+3
$0331	$3001			MOVLW	1
$0332	$02BE			SUBWF	Sound_Play_per_nc_L0, 1
$0333	$1C03			BTFSS	STATUS, C
$0334	$02BF			SUBWF	Sound_Play_per_nc_L0+1, 1
$0335	$1C03			BTFSS	STATUS, C
$0336	$02C0			SUBWF	Sound_Play_per_nc_L0+2, 1
$0337	$1C03			BTFSS	STATUS, C
$0338	$02C1			SUBWF	Sound_Play_per_nc_L0+3, 1
$0339	$0870			MOVF	STACK_0, 0
$033A	$0471			IORWF	STACK_0+1, 0
$033B	$0472			IORWF	STACK_0+2, 0
$033C	$0473			IORWF	STACK_0+3, 0
$033D	$1903			BTFSC	STATUS, Z
$033E	$2B4A			GOTO	L_Sound_Play_2
$033F	$0825			MOVF	Sound_pinMask1, 0
$0340	$0480			IORWF	INDF, 1
$0341	$083C			MOVF	Sound_Play_nc_L0, 0
$0342	$00C6			MOVWF	FARG_Delay_Cyc+0
$0343	$2553			CALL	_Delay_Cyc
$0344	$0826			MOVF	Sound_pinMask0, 0
$0345	$0580			ANDWF	INDF, 1
$0346	$083C			MOVF	Sound_Play_nc_L0, 0
$0347	$00C6			MOVWF	FARG_Delay_Cyc+0
$0348	$2553			CALL	_Delay_Cyc
$0349	$2B29			GOTO	L_Sound_Play_1
$034A	$	L_Sound_Play_2:
$034A	$0826			MOVF	Sound_pinMask0, 0
$034B	$0580			ANDWF	INDF, 1
$034C	$0008			RETURN
$04EB	$	GlobalIniIRTest:
$04EB	$3045			MOVLW	69
$04EC	$1303			BCF	STATUS, RP1
$04ED	$1283			BCF	STATUS, RP0
$04EE	$00A7			MOVWF	lstr1_IRTest+0
$04EF	$3052			MOVLW	82
$04F0	$00A8			MOVWF	lstr1_IRTest+1
$04F1	$302D			MOVLW	45
$04F2	$00A9			MOVWF	lstr1_IRTest+2
$04F3	$3034			MOVLW	52
$04F4	$00AA			MOVWF	lstr1_IRTest+3
$04F5	$3020			MOVLW	32
$04F6	$00AB			MOVWF	lstr1_IRTest+4
$04F7	$3052			MOVLW	82
$04F8	$00AC			MOVWF	lstr1_IRTest+5
$04F9	$3065			MOVLW	101
$04FA	$00AD			MOVWF	lstr1_IRTest+6
$04FB	$306D			MOVLW	109
$04FC	$00AE			MOVWF	lstr1_IRTest+7
$04FD	$306F			MOVLW	111
$04FE	$00AF			MOVWF	lstr1_IRTest+8
$04FF	$3074			MOVLW	116
$0500	$00B0			MOVWF	lstr1_IRTest+9
$0501	$3065			MOVLW	101
$0502	$00B1			MOVWF	lstr1_IRTest+10
$0503	$01B2			CLRF	lstr1_IRTest+11
$0504	$3027			MOVLW	lstr1_IRTest
$0505	$00B3			MOVWF	_text1+0
$0506	$3000			MOVLW	0
$0507	$00A1			MOVWF	_ir_cmd+0
$0508	$0008			RETURN
$006A	$	_main:
$006A	$24EB			CALL	GlobalIniIRTest
$006B	$3042			MOVLW	66
$006C	$1683			BSF	STATUS, RP0
$006D	$00A0			MOVWF	lstr2_IRTest+0
$006E	$3075			MOVLW	117
$006F	$00A1			MOVWF	lstr2_IRTest+1
$0070	$3074			MOVLW	116
$0071	$00A2			MOVWF	lstr2_IRTest+2
$0072	$3074			MOVLW	116
$0073	$00A3			MOVWF	lstr2_IRTest+3
$0074	$306F			MOVLW	111
$0075	$00A4			MOVWF	lstr2_IRTest+4
$0076	$306E			MOVLW	110
$0077	$00A5			MOVWF	lstr2_IRTest+5
$0078	$3020			MOVLW	32
$0079	$00A6			MOVWF	lstr2_IRTest+6
$007A	$3041			MOVLW	65
$007B	$00A7			MOVWF	lstr2_IRTest+7
$007C	$3020			MOVLW	32
$007D	$00A8			MOVWF	lstr2_IRTest+8
$007E	$3050			MOVLW	80
$007F	$00A9			MOVWF	lstr2_IRTest+9
$0080	$3072			MOVLW	114
$0081	$00AA			MOVWF	lstr2_IRTest+10
$0082	$3065			MOVLW	101
$0083	$00AB			MOVWF	lstr2_IRTest+11
$0084	$3073			MOVLW	115
$0085	$00AC			MOVWF	lstr2_IRTest+12
$0086	$3073			MOVLW	115
$0087	$00AD			MOVWF	lstr2_IRTest+13
$0088	$3020			MOVLW	32
$0089	$00AE			MOVWF	lstr2_IRTest+14
$008A	$3020			MOVLW	32
$008B	$00AF			MOVWF	lstr2_IRTest+15
$008C	$01B0			CLRF	lstr2_IRTest+16
$008D	$3042			MOVLW	66
$008E	$00B1			MOVWF	lstr3_IRTest+0
$008F	$3075			MOVLW	117
$0090	$00B2			MOVWF	lstr3_IRTest+1
$0091	$3074			MOVLW	116
$0092	$00B3			MOVWF	lstr3_IRTest+2
$0093	$3074			MOVLW	116
$0094	$00B4			MOVWF	lstr3_IRTest+3
$0095	$306F			MOVLW	111
$0096	$00B5			MOVWF	lstr3_IRTest+4
$0097	$306E			MOVLW	110
$0098	$00B6			MOVWF	lstr3_IRTest+5
$0099	$3020			MOVLW	32
$009A	$00B7			MOVWF	lstr3_IRTest+6
$009B	$3042			MOVLW	66
$009C	$00B8			MOVWF	lstr3_IRTest+7
$009D	$3020			MOVLW	32
$009E	$00B9			MOVWF	lstr3_IRTest+8
$009F	$3050			MOVLW	80
$00A0	$00BA			MOVWF	lstr3_IRTest+9
$00A1	$3072			MOVLW	114
$00A2	$00BB			MOVWF	lstr3_IRTest+10
$00A3	$3065			MOVLW	101
$00A4	$00BC			MOVWF	lstr3_IRTest+11
$00A5	$3073			MOVLW	115
$00A6	$00BD			MOVWF	lstr3_IRTest+12
$00A7	$3073			MOVLW	115
$00A8	$00BE			MOVWF	lstr3_IRTest+13
$00A9	$3020			MOVLW	32
$00AA	$00BF			MOVWF	lstr3_IRTest+14
$00AB	$3020			MOVLW	32
$00AC	$00C0			MOVWF	lstr3_IRTest+15
$00AD	$01C1			CLRF	lstr3_IRTest+16
$00AE	$3042			MOVLW	66
$00AF	$00C2			MOVWF	lstr4_IRTest+0
$00B0	$3075			MOVLW	117
$00B1	$00C3			MOVWF	lstr4_IRTest+1
$00B2	$3074			MOVLW	116
$00B3	$00C4			MOVWF	lstr4_IRTest+2
$00B4	$3074			MOVLW	116
$00B5	$00C5			MOVWF	lstr4_IRTest+3
$00B6	$306F			MOVLW	111
$00B7	$00C6			MOVWF	lstr4_IRTest+4
$00B8	$306E			MOVLW	110
$00B9	$00C7			MOVWF	lstr4_IRTest+5
$00BA	$3020			MOVLW	32
$00BB	$00C8			MOVWF	lstr4_IRTest+6
$00BC	$3043			MOVLW	67
$00BD	$00C9			MOVWF	lstr4_IRTest+7
$00BE	$3020			MOVLW	32
$00BF	$00CA			MOVWF	lstr4_IRTest+8
$00C0	$3050			MOVLW	80
$00C1	$00CB			MOVWF	lstr4_IRTest+9
$00C2	$3072			MOVLW	114
$00C3	$00CC			MOVWF	lstr4_IRTest+10
$00C4	$3065			MOVLW	101
$00C5	$00CD			MOVWF	lstr4_IRTest+11
$00C6	$3073			MOVLW	115
$00C7	$00CE			MOVWF	lstr4_IRTest+12
$00C8	$3073			MOVLW	115
$00C9	$00CF			MOVWF	lstr4_IRTest+13
$00CA	$3020			MOVLW	32
$00CB	$00D0			MOVWF	lstr4_IRTest+14
$00CC	$3020			MOVLW	32
$00CD	$00D1			MOVWF	lstr4_IRTest+15
$00CE	$01D2			CLRF	lstr4_IRTest+16
$00CF	$3042			MOVLW	66
$00D0	$00D3			MOVWF	lstr5_IRTest+0
$00D1	$3075			MOVLW	117
$00D2	$00D4			MOVWF	lstr5_IRTest+1
$00D3	$3074			MOVLW	116
$00D4	$00D5			MOVWF	lstr5_IRTest+2
$00D5	$3074			MOVLW	116
$00D6	$00D6			MOVWF	lstr5_IRTest+3
$00D7	$306F			MOVLW	111
$00D8	$00D7			MOVWF	lstr5_IRTest+4
$00D9	$306E			MOVLW	110
$00DA	$00D8			MOVWF	lstr5_IRTest+5
$00DB	$3020			MOVLW	32
$00DC	$00D9			MOVWF	lstr5_IRTest+6
$00DD	$3044			MOVLW	68
$00DE	$00DA			MOVWF	lstr5_IRTest+7
$00DF	$3020			MOVLW	32
$00E0	$00DB			MOVWF	lstr5_IRTest+8
$00E1	$3050			MOVLW	80
$00E2	$00DC			MOVWF	lstr5_IRTest+9
$00E3	$3072			MOVLW	114
$00E4	$00DD			MOVWF	lstr5_IRTest+10
$00E5	$3065			MOVLW	101
$00E6	$00DE			MOVWF	lstr5_IRTest+11
$00E7	$3073			MOVLW	115
$00E8	$00DF			MOVWF	lstr5_IRTest+12
$00E9	$3073			MOVLW	115
$00EA	$00E0			MOVWF	lstr5_IRTest+13
$00EB	$3020			MOVLW	32
$00EC	$00E1			MOVWF	lstr5_IRTest+14
$00ED	$3020			MOVLW	32
$00EE	$00E2			MOVWF	lstr5_IRTest+15
$00EF	$01E3			CLRF	lstr5_IRTest+16
;IRTest.c,35 :: 		void main()
;IRTest.c,38 :: 		ANSELH.F4=0;                     // RB0 ==> Digital IO
$00F0	$1703			BSF	STATUS, RP1
$00F1	$1209			BCF	ANSELH, 4
;IRTest.c,39 :: 		OPTION_REG.INTEDG = 0;           // INT falling edge
$00F2	$1303			BCF	STATUS, RP1
$00F3	$1301			BCF	OPTION_REG, 6
;IRTest.c,40 :: 		INTCON.INTE =1;                  // Enable INT/PB0
$00F4	$160B			BSF	INTCON, 4
;IRTest.c,41 :: 		INTCON.GIE =1;                   // Enable Global interrupt
$00F5	$178B			BSF	INTCON, 7
;IRTest.c,43 :: 		Lcd_Init(&PORTD);                // Initialize LCD connected to PORTD
$00F6	$3008			MOVLW	PORTD
$00F7	$1283			BCF	STATUS, RP0
$00F8	$00B8			MOVWF	FARG_Lcd_Init+0
$00F9	$23E7			CALL	_Lcd_Init
;IRTest.c,44 :: 		Lcd_Cmd(Lcd_CLEAR);              // Clear display
$00FA	$3001			MOVLW	1
$00FB	$00C7			MOVWF	FARG_Lcd_Cmd+0
$00FC	$2433			CALL	_Lcd_Cmd
;IRTest.c,45 :: 		Lcd_Cmd(Lcd_CURSOR_OFF);         // Turn cursor off
$00FD	$300C			MOVLW	12
$00FE	$00C7			MOVWF	FARG_Lcd_Cmd+0
$00FF	$2433			CALL	_Lcd_Cmd
;IRTest.c,46 :: 		Lcd_Out(1, 1, text1);            // Print text to LCD, 2nd row, 1st column
$0100	$3001			MOVLW	1
$0101	$00B8			MOVWF	FARG_LCD_Out+0
$0102	$3001			MOVLW	1
$0103	$00B9			MOVWF	FARG_LCD_Out+1
$0104	$0833			MOVF	_text1, 0
$0105	$00BA			MOVWF	FARG_LCD_Out+2
$0106	$2471			CALL	_LCD_Out
;IRTest.c,47 :: 		Sound_Init(&PORTC,0);
$0107	$3007			MOVLW	PORTC
$0108	$00B8			MOVWF	FARG_Sound_Init+0
$0109	$01B9			CLRF	FARG_Sound_Init+1, 1
$010A	$2526			CALL	_Sound_Init
;IRTest.c,48 :: 		while(1)                                   // Infinite loop
$010B	$	L_main_5:
;IRTest.c,50 :: 		key = get_remote();                    // Get Remote
$010B	$258C			CALL	_get_remote
$010C	$0870			MOVF	STACK_0, 0
$010D	$1683			BSF	STATUS, RP0
$010E	$00E4			MOVWF	main_key_L0
;IRTest.c,51 :: 		if(key=='a' || key=='A')               // Button A press?
$010F	$0870			MOVF	STACK_0, 0
$0110	$3A61			XORLW	97
$0111	$1903			BTFSC	STATUS, Z
$0112	$2917			GOTO	L106_ex_L_main_9
$0113	$0864			MOVF	main_key_L0, 0
$0114	$3A41			XORLW	65
$0115	$1D03			BTFSS	STATUS, Z
$0116	$2928			GOTO	L_main_9
$0117	$	L106_ex_L_main_9:
;IRTest.c,53 :: 		Lcd_Out(2, 1, "Button A Press  ");  // Display message Button B press
$0117	$3002			MOVLW	2
$0118	$1283			BCF	STATUS, RP0
$0119	$00B8			MOVWF	FARG_LCD_Out+0
$011A	$3001			MOVLW	1
$011B	$00B9			MOVWF	FARG_LCD_Out+1
$011C	$30A0			MOVLW	lstr2_IRTest
$011D	$00BA			MOVWF	FARG_LCD_Out+2
$011E	$2471			CALL	_LCD_Out
;IRTest.c,54 :: 		Sound_Play(2000,200);
$011F	$30D0			MOVLW	208
$0120	$00B8			MOVWF	FARG_Sound_Play+0
$0121	$3007			MOVLW	7
$0122	$00B9			MOVWF	FARG_Sound_Play+1
$0123	$30C8			MOVLW	200
$0124	$00BA			MOVWF	FARG_Sound_Play+2
$0125	$01BB			CLRF	FARG_Sound_Play+3
$0126	$22A7			CALL	_Sound_Play
;IRTest.c,55 :: 		}
$0127	$2975			GOTO	L_main_10
$0128	$	L_main_9:
;IRTest.c,56 :: 		else if(key=='b' || key=='B')          // Button B press?
$0128	$1683			BSF	STATUS, RP0
$0129	$0864			MOVF	main_key_L0, 0
$012A	$3A62			XORLW	98
$012B	$1903			BTFSC	STATUS, Z
$012C	$2931			GOTO	L126_ex_L_main_13
$012D	$0864			MOVF	main_key_L0, 0
$012E	$3A42			XORLW	66
$012F	$1D03			BTFSS	STATUS, Z
$0130	$2942			GOTO	L_main_13
$0131	$	L126_ex_L_main_13:
;IRTest.c,58 :: 		Lcd_Out(2, 1, "Button B Press  ");  // Display message Button B press
$0131	$3002			MOVLW	2
$0132	$1283			BCF	STATUS, RP0
$0133	$00B8			MOVWF	FARG_LCD_Out+0
$0134	$3001			MOVLW	1
$0135	$00B9			MOVWF	FARG_LCD_Out+1
$0136	$30B1			MOVLW	lstr3_IRTest
$0137	$00BA			MOVWF	FARG_LCD_Out+2
$0138	$2471			CALL	_LCD_Out
;IRTest.c,59 :: 		Sound_Play(2500,200);
$0139	$30C4			MOVLW	196
$013A	$00B8			MOVWF	FARG_Sound_Play+0
$013B	$3009			MOVLW	9
$013C	$00B9			MOVWF	FARG_Sound_Play+1
$013D	$30C8			MOVLW	200
$013E	$00BA			MOVWF	FARG_Sound_Play+2
$013F	$01BB			CLRF	FARG_Sound_Play+3
$0140	$22A7			CALL	_Sound_Play
;IRTest.c,60 :: 		}
$0141	$2975			GOTO	L_main_14
$0142	$	L_main_13:
;IRTest.c,61 :: 		else if(key=='c' || key=='C')          // Button C press?
$0142	$1683			BSF	STATUS, RP0
$0143	$0864			MOVF	main_key_L0, 0
$0144	$3A63			XORLW	99
$0145	$1903			BTFSC	STATUS, Z
$0146	$294B			GOTO	L146_ex_L_main_17
$0147	$0864			MOVF	main_key_L0, 0
$0148	$3A43			XORLW	67
$0149	$1D03			BTFSS	STATUS, Z
$014A	$295C			GOTO	L_main_17
$014B	$	L146_ex_L_main_17:
;IRTest.c,63 :: 		Lcd_Out(2, 1, "Button C Press  ");  // Display message Button C press
$014B	$3002			MOVLW	2
$014C	$1283			BCF	STATUS, RP0
$014D	$00B8			MOVWF	FARG_LCD_Out+0
$014E	$3001			MOVLW	1
$014F	$00B9			MOVWF	FARG_LCD_Out+1
$0150	$30C2			MOVLW	lstr4_IRTest
$0151	$00BA			MOVWF	FARG_LCD_Out+2
$0152	$2471			CALL	_LCD_Out
;IRTest.c,64 :: 		Sound_Play(2900,200);
$0153	$3054			MOVLW	84
$0154	$00B8			MOVWF	FARG_Sound_Play+0
$0155	$300B			MOVLW	11
$0156	$00B9			MOVWF	FARG_Sound_Play+1
$0157	$30C8			MOVLW	200
$0158	$00BA			MOVWF	FARG_Sound_Play+2
$0159	$01BB			CLRF	FARG_Sound_Play+3
$015A	$22A7			CALL	_Sound_Play
;IRTest.c,65 :: 		}
$015B	$2975			GOTO	L_main_18
$015C	$	L_main_17:
;IRTest.c,66 :: 		else if(key=='d' || key=='D')          // Button D press?
$015C	$1683			BSF	STATUS, RP0
$015D	$0864			MOVF	main_key_L0, 0
$015E	$3A64			XORLW	100
$015F	$1903			BTFSC	STATUS, Z
$0160	$2965			GOTO	L166_ex_L_main_21
$0161	$0864			MOVF	main_key_L0, 0
$0162	$3A44			XORLW	68
$0163	$1D03			BTFSS	STATUS, Z
$0164	$2975			GOTO	L_main_21
$0165	$	L166_ex_L_main_21:
;IRTest.c,68 :: 		Lcd_Out(2, 1, "Button D Press  ");  // Display message Button D press
$0165	$3002			MOVLW	2
$0166	$1283			BCF	STATUS, RP0
$0167	$00B8			MOVWF	FARG_LCD_Out+0
$0168	$3001			MOVLW	1
$0169	$00B9			MOVWF	FARG_LCD_Out+1
$016A	$30D3			MOVLW	lstr5_IRTest
$016B	$00BA			MOVWF	FARG_LCD_Out+2
$016C	$2471			CALL	_LCD_Out
;IRTest.c,69 :: 		Sound_Play(3200,200);
$016D	$3080			MOVLW	128
$016E	$00B8			MOVWF	FARG_Sound_Play+0
$016F	$300C			MOVLW	12
$0170	$00B9			MOVWF	FARG_Sound_Play+1
$0171	$30C8			MOVLW	200
$0172	$00BA			MOVWF	FARG_Sound_Play+2
$0173	$01BB			CLRF	FARG_Sound_Play+3
$0174	$22A7			CALL	_Sound_Play
;IRTest.c,70 :: 		}
$0175	$	L_main_21:
$0175	$	L_main_18:
$0175	$	L_main_14:
$0175	$	L_main_10:
;IRTest.c,71 :: 		}
$0175	$1303			BCF	STATUS, RP1
$0176	$1283			BCF	STATUS, RP0
$0177	$290B			GOTO	L_main_5
;IRTest.c,80 :: 		}
$0178	$2978			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		interrupt
$006A		main
$0179		SDIV3232L
$02A7		Sound_Play
$034D		Div_32x32_S
$03E7		Lcd_Init
$0433		Lcd_Cmd
$0471		LCD_Out
$04B4		Mul_32x32_U
$04EB		GlobalIniIRTest
$0509		Div_16x16_U
$0526		Sound_Init
$0542		Delay_5500us
$0553		Delay_Cyc
$0564		COMFREM
$0572		Lcd_Chr_CP
$057B		Get_Fosc_kHz
$0584		Delay_1us
$058C		get_remote
$0594		Delay_50us


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_interrupt:
$0028		L_interrupt_1:
$0046		L_interrupt_3:
$0046		L_interrupt_4:
$0048		L_interrupt_2:
$0059		L_interrupt_0:
$0059		L_Interrupt_end:
$006A		_main:
$010B		L_main_5:
$0117		L106_ex_L_main_9:
$0128		L_main_9:
$0131		L126_ex_L_main_13:
$0142		L_main_13:
$014B		L146_ex_L_main_17:
$015C		L_main_17:
$0165		L166_ex_L_main_21:
$0175		L_main_10:
$0175		L_main_14:
$0175		L_main_18:
$0175		L_main_21:
$0179		_SDIV3232L:
$018C		LOOPS3232A:
$01A2		SADD22LA:
$01AF		SOK22LA:
$01C8		SADD22L8:
$01D5		SOK22L8:
$01D8		LOOPS3232B:
$01EE		SADD22LB:
$01FB		SOK22LB:
$0214		SADD22L16:
$0221		SOK22L16:
$0224		LOOPS3232C:
$023A		SADD22LC:
$0247		SOK22LC:
$0260		SADD22L24:
$026D		SOK22L24:
$0270		LOOPS3232D:
$0286		SADD22LD:
$0293		SOK22LD:
$02A6		SOK22L:
$02A7		_Sound_Play:
$02C9		L_Sound_Play_5:
$02D2		L_Sound_Play_6:
$02EF		L_Sound_Play_7:
$02F8		L_Sound_Play_8:
$0324		L_Sound_Play_9:
$0327		L_Sound_Play_0:
$0329		L_Sound_Play_1:
$034A		L_Sound_Play_2:
$034D		_Div_32x32_S:
$034F		FXD3232S:
$036F		CA3232S:
$037C		C3232SX:
$0381		C3232S:
$0382		C3232S2:
$0384		C3232SOK:
$039D		C3232SX1:
$03AE		C3232SX2:
$03B4		C3232SX3:
$03BA		C3232SX4:
$03E1		END_ALL:
$03E5		avoid_comfrem:
$03E7		_Lcd_Init:
$0433		_Lcd_Cmd:
$043A		L_Lcd_Cmd_0:
$044D		L_Lcd_Cmd_1:
$044E		L_Lcd_Cmd_2:
$0453		L_Lcd_Cmd_3:
$0466		L_Lcd_Cmd_4:
$0467		L_Lcd_Cmd_5:
$046F		L_Lcd_Cmd_6:
$0470		L_Lcd_Cmd_7:
$0471		_LCD_Out:
$0472		L_LCD_Out_19:
$0477		L_LCD_Out_20:
$047A		L_LCD_Out_21:
$047D		L_LCD_Out_22:
$0480		L_LCD_Out_23:
$0483		L_LCD_Out_17:
$0496		L_LCD_Out_18:
$04A1		L_LCD_Out_24:
$04B1		L_LCD_Out_25:
$04B4		_Mul_32x32_U:
$04BC		_NEXT:
$04C0		_LOOP:
$04DC		_EXIT1:
$04EA		_EXIT2:
$04EB		GlobalIniIRTest:
$0509		_Div_16x16_U:
$0526		_Sound_Init:
$052F		L_Sound_Init_3:
$0535		L_Sound_Init_4:
$0542		_Delay_5500us:
$0553		_Delay_Cyc:
$0557		L_Delay_Cyc_0:
$0560		L_Delay_Cyc_1:
$0564		_COMFREM:
$0572		_Lcd_Chr_CP:
$057B		_Get_Fosc_kHz:
$0584		_Delay_1us:
$058C		_get_remote:
$0594		_Delay_50us:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0006		PORTB
$0007		PORTC
$0008		PORTD
$000A		PCLATH
$000B		INTCON
$0020		___math_tempb
$0021		_ir_cmd
$0022		LCD_port_address
$0023		LCD_cmd_status
$0024		Sound_soundPortAddr
$0025		Sound_pinMask1
$0026		Sound_pinMask0
$0027		lstr1_IRTest
$0033		_text1
$0034		interrupt_i_L0
$0035		?saveFSR
$0036		?saveSTATUS
$0037		?savePCLATH
$0038		FARG_Lcd_Init+0
$0038		FARG_LCD_Out+0
$0038		FARG_Sound_Init+0
$0038		FARG_Sound_Play+0
$0038		get_remote__key_L0
$0039		FARG_LCD_Out+1
$0039		FARG_Sound_Init+1
$003A		FARG_LCD_Out+2
$003A		FARG_Sound_Play+2
$003B		LCD_Out_i_L0
$003C		Sound_Play_nc_L0
$003E		Sound_Play_per_nc_L0
$0042		
$0046		FARG_Delay_Cyc+0
$0046		FARG_Lcd_Chr_CP+0
$0047		FARG_Lcd_Cmd+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0081		OPTION_REG
$00A0		lstr2_IRTest
$00B1		lstr3_IRTest
$00C2		lstr4_IRTest
$00D3		lstr5_IRTest
$00E4		main_key_L0
$0189		ANSELH


